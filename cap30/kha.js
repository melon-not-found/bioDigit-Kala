// Generated by Haxe 3.3.0
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
;$hx_exports["kha"]["_Color"] = $hx_exports["kha"]["_Color"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var kala_audio_AudioGroup = function() {
	this.channels = [];
	this._volume = 1;
};
$hxClasses["kala.audio.AudioGroup"] = kala_audio_AudioGroup;
kala_audio_AudioGroup.__name__ = ["kala","audio","AudioGroup"];
kala_audio_AudioGroup.prototype = {
	channels: null
	,_volume: null
	,muted: null
	,play: function(sound,volume,loop,kept) {
		if(kept == null) {
			kept = false;
		}
		if(loop == null) {
			loop = false;
		}
		if(volume == null) {
			volume = 1;
		}
		var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(sound,loop),this,kept);
		channel._volume = volume;
		channel.channel.set_volume(this.muted?0:volume * this._volume);
		this.channels.push(channel);
		return channel;
	}
	,stream: function(group,sound,volume,loop,kept) {
		if(kept == null) {
			kept = false;
		}
		if(loop == null) {
			loop = false;
		}
		if(volume == null) {
			volume = 1;
		}
		var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.stream(sound,loop),this,kept);
		channel._volume = volume;
		channel.channel.set_volume(this.muted?0:volume * this._volume);
		this.channels.push(channel);
		return channel;
	}
	,update: function() {
		var i = this.channels.length;
		while(i-- > 0) if(this.channels[i].channel.get_finished() && !this.channels[i].kept) {
			this.channels.splice(i,1);
		}
	}
	,get_volume: function() {
		return this._volume;
	}
	,set_volume: function(value) {
		this._volume = value;
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var channel = _g1[_g];
			++_g;
			channel.updateVolume();
		}
		return value;
	}
	,set_muted: function(value) {
		this.muted = value;
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var channel = _g1[_g];
			++_g;
			channel.updateVolume();
		}
		return value;
	}
	,__class__: kala_audio_AudioGroup
	,__properties__: {set_muted:"set_muted",set_volume:"set_volume",get_volume:"get_volume"}
};
var G = function() { };
$hxClasses["G"] = G;
G.__name__ = ["G"];
G.__properties__ = {set_musicVolume:"set_musicVolume",set_soundVolume:"set_soundVolume",set_audioMuted:"set_audioMuted"}
G.init = function() {
	G.tutorialPassed = false;
	G.set_audioMuted(false);
	G.set_soundVolume(1);
	G.set_musicVolume(1);
	UpgradeData.set_money(0);
	UpgradeData.itemLevel = [0,0,0,0,0,0,0,0,0,0];
	G.touchControl = kha_SystemImpl.mobile;
};
G.switchState = function(state) {
	kala_Kala.world.swap(G.state,state);
	G.state = state;
};
G.set_audioMuted = function(value) {
	var _this = G.bgmChannel;
	_this.muted = G.sfxGroup.set_muted(value);
	_this.updateVolume();
	var _this1 = G.audioButton.animation;
	var _this2 = _this1.object.frameRect;
	var rect = _this1.anim.frames[_this1.frame = value?0:1];
	_this2.x = rect.x;
	_this2.y = rect.y;
	_this2.width = rect.width;
	_this2.height = rect.height;
	return G.audioMuted = value;
};
G.set_soundVolume = function(value) {
	G.sfxGroup.set_volume(value);
	var a = value * 20 | 0;
	var bar;
	var _g = 0;
	while(_g < 20) {
		bar = states_SettingMenuState.instance.soundBars[_g++];
		bar.opacity = bar.data.id < a?1:0.5;
	}
	return G.soundVolume = value;
};
G.set_musicVolume = function(value) {
	var _this = G.bgmChannel;
	_this._volume = value;
	_this.updateVolume();
	var a = value * 20 | 0;
	var bar;
	var _g = 0;
	while(_g < 20) {
		bar = states_SettingMenuState.instance.musicBars[_g++];
		bar.opacity = bar.data.id < a?1:0.5;
	}
	return G.musicVolume = value;
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var tmp = $iterator(it)();
	while(tmp.hasNext()) a.push(tmp.next());
	return a;
};
Lambda.has = function(it,elt) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(tmp.next() == elt) {
		return true;
	}
	return false;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.main = function() {
	kala_Kala.world.onFirstFrame._callbacks.push(new kala_Callback(function(_) {
		kala_math__$Random_Random_$Impl_$.instance = new kha_math_Random(kha_System.get_time() * kala_math__$Random_Random_$Impl_$.instance.GetIn(0,999999) | 0);
		kala_Kala.set_defaultFont(kha_Assets.fonts.Montserrat_Bold);
		kala_debug_Debug.collisionDebug = true;
		kala_Kala.defaultView = new kala_objects_group_View(0,0,700,495,16);
		var _this = kala_Kala.defaultView;
		_this.scaleMode = kala_objects_group_ScaleMode.RATIO;
		_this.halign = 0.5;
		_this.valign = 0.5;
		var _this1 = _this.position;
		_this1.ox = 0;
		_this1.oy = 0;
		kala_Kala.world.addView(kala_Kala.defaultView);
		G.state = new states_Preloader();
		kala_Kala.world.add(G.state);
		kala_Kala.html5.fillPage();
	}));
	kala_Kala.start("bioDigit",700,495,1,60);
};
Math.__name__ = ["Math"];
var R = function() { };
$hxClasses["R"] = R;
R.__name__ = ["R"];
R.init = function() {
	R.sheets = kala_asset_Assets.sheets;
	R.images = kha_Assets.images;
	R.sounds = kha_Assets.sounds;
	R.fonts = kha_Assets.fonts;
	R.playerChildRunning = R.sheets.sprite_sheet_2.get("player/mini/run/",R.images.sprite_sheet_2);
	R.playerChildStanding = R.sheets.sprite_sheet_2.get("player/mini/stand/",R.images.sprite_sheet_2);
	R.playerWebShooting = R.sheets.sprite_sheet_2.get("player/web/shooting.png",R.images.sprite_sheet_2);
	R.playerWebSpreading = R.sheets.sprite_sheet_2.get("player/web/spreading.png",R.images.sprite_sheet_2);
	R.playerLightning = R.sheets.sprite_sheet_2.get("player/lightning/",R.images.sprite_sheet_2);
	R.playerBullet = R.sheets.sprite_sheet_2.get("player/bullet.png",R.images.sprite_sheet_2);
	R.enemyA = R.sheets.sprite_sheet_2.get("enemies/enemy_0.png",R.images.sprite_sheet_2);
	R.enemyB = R.sheets.sprite_sheet_2.get("enemies/enemy_1.png",R.images.sprite_sheet_2);
	R.enemyC = R.sheets.sprite_sheet_2.get("enemies/enemy_2/",R.images.sprite_sheet_2);
	R.enemyD = R.sheets.sprite_sheet_2.get("enemies/enemy_3/big/",R.images.sprite_sheet_2);
	R.enemyDChild = R.sheets.sprite_sheet_2.get("enemies/enemy_3/mini/",R.images.sprite_sheet_2);
	R.boss = R.sheets.sprite_sheet_2.get("enemies/boss/body.png",R.images.sprite_sheet_2);
	R.bossLightning = R.sheets.sprite_sheet_2.get("enemies/boss/lightning/",R.images.sprite_sheet_2);
	R.bossThroneBig = R.sheets.sprite_sheet_2.get("enemies/boss/throne/big.png",R.images.sprite_sheet_2);
	R.bossThroneSmall = R.sheets.sprite_sheet_2.get("enemies/boss/throne/small.png",R.images.sprite_sheet_2);
	R.gem = R.sheets.sprite_sheet_2.get("crystal.png",R.images.sprite_sheet_2);
	R.upgradeBackButton = R.sheets.sprite_sheet_1.get("upgrade_menu/back_button.png",R.images.sprite_sheet_1);
	R.upgradeStartButton = R.sheets.sprite_sheet_1.get("upgrade_menu/start_button.png",R.images.sprite_sheet_1);
	R.upgradeButton = R.sheets.sprite_sheet_1.get("upgrade_menu/level_up_button.png",R.images.sprite_sheet_1);
	R.upgradeDescBG = R.sheets.sprite_sheet_1.get("upgrade_menu/description_bg.png",R.images.sprite_sheet_1);
	R.upgradeItem0 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/0.png",R.images.sprite_sheet_1);
	R.upgradeItem1 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/1.png",R.images.sprite_sheet_1);
	R.upgradeItem2 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/2.png",R.images.sprite_sheet_1);
	R.upgradeItem3 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/3.png",R.images.sprite_sheet_1);
	R.upgradeItem4 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/4.png",R.images.sprite_sheet_1);
	R.upgradeItem5 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/5.png",R.images.sprite_sheet_1);
	R.upgradeItem6 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/6.png",R.images.sprite_sheet_1);
	R.upgradeItem7 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/7.png",R.images.sprite_sheet_1);
	R.upgradeItem8 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/8.png",R.images.sprite_sheet_1);
	R.upgradeItem9 = R.sheets.sprite_sheet_1.get("upgrade_menu/icons/9.png",R.images.sprite_sheet_1);
};
R.uncompressSounds = function(onCompleteCB) {
	R.onAllSoundsUncompressedCB = onCompleteCB;
	R.sounds.Dissonant_Waltz.uncompress(R.onSoundUncompressed);
	R.sounds.bounce.uncompress(R.onSoundUncompressed);
	R.sounds.flap.uncompress(R.onSoundUncompressed);
	R.sounds.lightning.uncompress(R.onSoundUncompressed);
	R.sounds.upgrade.uncompress(R.onSoundUncompressed);
	R.sounds.spawn.uncompress(R.onSoundUncompressed);
};
R.onSoundUncompressed = function() {
	R.uncompressedSoundCount++;
	if(R.uncompressedSoundCount == 1) {
		R.onAllSoundsUncompressedCB();
	}
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Save = function() { };
$hxClasses["Save"] = Save;
Save.__name__ = ["Save"];
Save.save = function() {
	kha_Storage.defaultFile().writeObject({ money : UpgradeData.money, itemLevel0 : UpgradeData.itemLevel[0], itemLevel1 : UpgradeData.itemLevel[1], itemLevel2 : UpgradeData.itemLevel[2], itemLevel3 : UpgradeData.itemLevel[3], itemLevel4 : UpgradeData.itemLevel[4], itemLevel5 : UpgradeData.itemLevel[5], itemLevel6 : UpgradeData.itemLevel[6], itemLevel7 : UpgradeData.itemLevel[7], itemLevel8 : UpgradeData.itemLevel[8], itemLevel9 : UpgradeData.itemLevel[9], audioMuted : G.audioMuted, soundVolume : G.soundVolume, musicVolume : G.musicVolume, tutorialPassed : G.tutorialPassed});
};
Save.load = function() {
	var data = kha_Storage.defaultFile().readObject();
	if(data == null) {
		return;
	}
	UpgradeData.set_money(data.money);
	UpgradeData.itemLevel[0] = data.itemLevel0;
	UpgradeData.itemLevel[1] = data.itemLevel1;
	UpgradeData.itemLevel[2] = data.itemLevel2;
	UpgradeData.itemLevel[3] = data.itemLevel3;
	UpgradeData.itemLevel[4] = data.itemLevel4;
	UpgradeData.itemLevel[5] = data.itemLevel5;
	UpgradeData.itemLevel[6] = data.itemLevel6;
	UpgradeData.itemLevel[7] = data.itemLevel7;
	UpgradeData.itemLevel[8] = data.itemLevel8;
	UpgradeData.itemLevel[9] = data.itemLevel9;
	G.set_audioMuted(data.audioMuted);
	G.set_soundVolume(data.soundVolume);
	G.set_musicVolume(data.musicVolume);
	G.tutorialPassed = data.tutorialPassed;
};
Save.reset = function() {
	UpgradeData.set_money(0);
	UpgradeData.itemLevel = [0,0,0,0,0,0,0,0,0,0];
	G.tutorialPassed = false;
	Save.save();
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a[0] != b[0]) {
			return false;
		}
		var _g1 = 2;
		var _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		return false;
	}
	return true;
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = ["_UInt","UInt_Impl_"];
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	if(aNeg != b < 0) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	if(this1 < 0) {
		return 4294967296.0 + this1;
	} else {
		return this1 + 0.0;
	}
};
var UpgradeData = function() { };
$hxClasses["UpgradeData"] = UpgradeData;
UpgradeData.__name__ = ["UpgradeData"];
UpgradeData.__properties__ = {set_money:"set_money"}
UpgradeData.getCost = function(id) {
	return Math.round((UpgradeData.itemLevel[id] + 1) * (UpgradeData.itemLevel[id] + 1) * 10);
};
UpgradeData.isUpgradable = function(id) {
	if(UpgradeData.money >= UpgradeData.getCost(id)) {
		return UpgradeData.itemLevel[id] < UpgradeData.itemMaxLevel[id];
	} else {
		return false;
	}
};
UpgradeData.upgrade = function(id) {
	var cost = UpgradeData.getCost(id);
	if(UpgradeData.money >= cost) {
		var _g = UpgradeData;
		_g.set_money(_g.money - cost);
		UpgradeData.itemLevel[id]++;
	}
};
UpgradeData.update = function(customItemLevels) {
	var itemLevel = customItemLevels == null?UpgradeData.itemLevel:customItemLevels;
	UpgradeData.startingLives = 1 + itemLevel[0];
	UpgradeData.shootDelay = 15 - itemLevel[1] * 2;
	UpgradeData.bulletsPerShot = itemLevel[1];
	UpgradeData.middleBulletIndex = Math.floor(UpgradeData.bulletsPerShot / 2);
	UpgradeData.webDuration = 50 + itemLevel[2] * 30;
	UpgradeData.lightningDMG = 1 + itemLevel[3] / 10;
	UpgradeData.gemDropFactor = 1 + itemLevel[4] / 5;
	UpgradeData.minionSpawnDelay = 400 - itemLevel[5] * 20;
	UpgradeData.minionStartingLives = 1 + itemLevel[6];
	UpgradeData.minionShootDelay = 20 - itemLevel[7];
	UpgradeData.minionLightningChance = itemLevel[8] * 2;
	UpgradeData.gemCollectionDistance = 100 + itemLevel[9] * 120;
};
UpgradeData.set_money = function(value) {
	states_UpgradeState.instance.moneyText.set_text("x " + value);
	return UpgradeData.money = value;
};
var kala_EventHandle = function() {
	this._cbHandles = [];
};
$hxClasses["kala.EventHandle"] = kala_EventHandle;
kala_EventHandle.__name__ = ["kala","EventHandle"];
kala_EventHandle.prototype = {
	_cbHandles: null
	,clearCBHandles: function() {
		var _g = 0;
		var _g1 = this._cbHandles;
		while(_g < _g1.length) {
			var handle = _g1[_g];
			++_g;
			handle.removeAll();
		}
	}
	,destroyCBHandles: function() {
		while(this._cbHandles.length > 0) this._cbHandles.pop().destroy();
		this._cbHandles = null;
	}
	,addCBHandle: function(handle) {
		this._cbHandles.push(handle);
		return handle;
	}
	,__class__: kala_EventHandle
};
var kala_objects_IObject = function() { };
$hxClasses["kala.objects.IObject"] = kala_objects_IObject;
kala_objects_IObject.__name__ = ["kala","objects","IObject"];
kala_objects_IObject.prototype = {
	get_x: null
	,set_x: null
	,get_y: null
	,set_y: null
	,get_angle: null
	,set_angle: null
	,get_matrix: null
	,get_width: null
	,set_width: null
	,get_height: null
	,set_height: null
	,alive: null
	,active: null
	,visible: null
	,position: null
	,flipX: null
	,flipY: null
	,scale: null
	,rotation: null
	,matrix: null
	,color: null
	,opacity: null
	,antialiasing: null
	,_width: null
	,_height: null
	,buffer: null
	,bufferOriginX: null
	,bufferOriginY: null
	,data: null
	,timeScale: null
	,originalDelta: null
	,isGroup: null
	,groupTimeScaleSkipped: null
	,onDestroy: null
	,onReset: null
	,onPreUpdate: null
	,onPostUpdate: null
	,onPreDraw: null
	,onPostDraw: null
	,onFirstFrame: null
	,firstFrameExecuted: null
	,_behaviors: null
	,_texture: null
	,_shaderSize: null
	,_shaders: null
	,_cachedDrawingMatrix: null
	,reset: null
	,destroy: null
	,deepReset: null
	,kill: null
	,revive: null
	,update: null
	,draw: null
	,drawBuffer: null
	,isVisible: null
	,addShader: null
	,removeShader: null
	,callUpdate: null
	,callDraw: null
	,__class__: kala_objects_IObject
	,__properties__: {set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",get_matrix:"get_matrix",set_angle:"set_angle",get_angle:"get_angle",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var kala_objects_Object = function() {
	this._shaders = [];
	this._behaviors = [];
	this.rotation = new kala_math_Rotation();
	this.scale = new kala_math_Vec2T();
	this.position = new kala_math_Vec2T(0,0,0,0);
	kala_EventHandle.call(this);
	this.isGroup = false;
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onDestroy = handle;
	var handle1 = new kala_CallbackHandle();
	this._cbHandles.push(handle1);
	this.onReset = handle1;
	var handle2 = new kala_CallbackHandle();
	this._cbHandles.push(handle2);
	this.onPreUpdate = handle2;
	var handle3 = new kala_CallbackHandle();
	this._cbHandles.push(handle3);
	this.onPostUpdate = handle3;
	var handle4 = new kala_CallbackHandle();
	this._cbHandles.push(handle4);
	this.onPreDraw = handle4;
	var handle5 = new kala_CallbackHandle();
	this._cbHandles.push(handle5);
	this.onPostDraw = handle5;
	var handle6 = new kala_CallbackHandle();
	this._cbHandles.push(handle6);
	this.onFirstFrame = handle6;
	this.reset();
};
$hxClasses["kala.objects.Object"] = kala_objects_Object;
kala_objects_Object.__name__ = ["kala","objects","Object"];
kala_objects_Object.__interfaces__ = [kala_objects_IObject];
kala_objects_Object.__super__ = kala_EventHandle;
kala_objects_Object.prototype = $extend(kala_EventHandle.prototype,{
	alive: null
	,active: null
	,visible: null
	,position: null
	,flipX: null
	,flipY: null
	,scale: null
	,rotation: null
	,matrix: null
	,color: null
	,opacity: null
	,antialiasing: null
	,_width: null
	,_height: null
	,buffer: null
	,bufferOriginX: null
	,bufferOriginY: null
	,data: null
	,timeScale: null
	,originalDelta: null
	,isGroup: null
	,groupTimeScaleSkipped: null
	,onDestroy: null
	,onReset: null
	,onPreUpdate: null
	,onPostUpdate: null
	,onPreDraw: null
	,onPostDraw: null
	,onFirstFrame: null
	,firstFrameExecuted: null
	,_behaviors: null
	,_texture: null
	,_shaderSize: null
	,_shaders: null
	,_cachedDrawingMatrix: null
	,clearCBHandles: function() {
		var _g = 0;
		var _g1 = this._behaviors;
		while(_g < _g1.length) {
			var behavior = _g1[_g];
			++_g;
			behavior.remove();
		}
		kala_EventHandle.prototype.clearCBHandles.call(this);
	}
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		this.alive = true;
		this.active = true;
		this.visible = true;
		var _this = this.position;
		_this.x = 0;
		_this.y = 0;
		_this.ox = 0;
		_this.oy = 0;
		var _this1 = this.scale;
		_this1.x = 1;
		_this1.y = 1;
		_this1.ox = 0;
		_this1.oy = 0;
		var _this2 = this.rotation;
		_this2.angle = 0;
		_this2.px = 0;
		_this2.py = 0;
		_this2.asDeg = true;
		this.color = -1;
		this.opacity = 1;
		this.antialiasing = false;
		this.firstFrameExecuted = false;
		this.unloadGraphics();
		this.bufferOriginX = this.bufferOriginY = 0;
		this._shaders.splice(0,this._shaders.length);
		this.data = null;
		this.timeScale = 1;
		this.originalDelta = 0;
		this.groupTimeScaleSkipped = false;
		var tmp = HxOverrides.iter(this.onReset._callbacks);
		while(tmp.hasNext()) tmp.next().cbFunction(this,resetBehaviors);
		if(resetBehaviors) {
			var _g = 0;
			var _g1 = this._behaviors;
			while(_g < _g1.length) {
				var behavior = _g1[_g];
				++_g;
				behavior.reset();
			}
		}
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		var tmp = HxOverrides.iter(this.onDestroy._callbacks);
		while(tmp.hasNext()) tmp.next().cbFunction(this,destroyBehaviors);
		this.position = null;
		this.scale = null;
		this.rotation = null;
		this.unloadGraphics();
		this._shaders = null;
		if(destroyBehaviors) {
			while(this._behaviors.length > 0) this._behaviors.pop().destroy();
		}
		this._behaviors = null;
		while(this._cbHandles.length > 0) this._cbHandles.pop().destroy();
		this._cbHandles = null;
		this.onDestroy = null;
		this.onReset = null;
		this.onPreUpdate = null;
		this.onPostUpdate = null;
		this.onPreDraw = null;
		this.onPostDraw = null;
		this.onFirstFrame = null;
		this.data = null;
		this._cachedDrawingMatrix = null;
	}
	,deepReset: function(deepResetBehaviors) {
		if(deepResetBehaviors == null) {
			deepResetBehaviors = true;
		}
		this.reset(false);
		if(deepResetBehaviors) {
			var _g = 0;
			var _g1 = this._behaviors;
			while(_g < _g1.length) {
				var behavior = _g1[_g];
				++_g;
				behavior.deepReset();
			}
		}
		this.clearCBHandles();
	}
	,update: function(elapsed) {
	}
	,draw: function(data,canvas) {
	}
	,drawBuffer: function(data,canvas) {
		var offsetX = (this.buffer.get_width() - this.get_width()) / 2;
		var offsetY = (this.buffer.get_height() - this.get_height()) / 2;
		var _this = this.position;
		_this.ox += offsetX;
		_this.oy += offsetY;
		var _this1 = this.scale;
		_this1.ox += offsetX;
		_this1.oy += offsetY;
		var _this2 = this.rotation;
		_this2.px += offsetX;
		_this2.py += offsetY;
		this.applyDrawingData(data,canvas);
		canvas.get_g2().drawImage(this.buffer,-this.bufferOriginX,-this.bufferOriginY);
		offsetX = -offsetX;
		offsetY = -offsetY;
		var _this3 = this.position;
		_this3.ox += offsetX;
		_this3.oy += offsetY;
		var _this4 = this.scale;
		_this4.ox += offsetX;
		_this4.oy += offsetY;
		var _this5 = this.rotation;
		_this5.px += offsetX;
		_this5.py += offsetY;
	}
	,isVisible: function() {
		if(this.visible && this.scale.x != 0 && this.scale.y != 0) {
			return this.opacity > 0;
		} else {
			return false;
		}
	}
	,addShader: function(shader) {
		this._shaders.push(shader);
		if(_$UInt_UInt_$Impl_$.gt(shader.size,this._shaderSize)) {
			this._shaderSize = shader.size;
		}
	}
	,addShaders: function(shaders) {
		var _g = 0;
		while(_g < shaders.length) {
			var shader = shaders[_g];
			++_g;
			this.addShader(shader);
		}
	}
	,removeShader: function(shader) {
		var index = this._shaders.indexOf(shader);
		if(index < 0) {
			return null;
		}
		this._shaders.splice(index,1);
		if(shader.size == this._shaderSize) {
			var maxSize = 0;
			var _g = 0;
			var _g1 = this._shaders;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				if(s.size == shader.size) {
					return shader;
				}
				if(_$UInt_UInt_$Impl_$.gt(s.size,maxSize)) {
					maxSize = s.size;
				}
			}
			this._shaderSize = maxSize;
		}
		return shader;
	}
	,setPos: function(x,y,originX,originY) {
		var _this = this.position;
		var originX1 = originX == null?this.get_width() / 2:originX;
		var originY1 = originY == null?this.get_height() / 2:originY;
		_this.x = x;
		_this.y = y;
		_this.ox = originX1;
		_this.oy = originY1;
		return this;
	}
	,setXY: function(x,y) {
		var _this = this.position;
		_this.x = x;
		_this.y = y;
		return this;
	}
	,setOrigin: function(x,y) {
		var _this = this.position;
		_this.ox = x;
		_this.oy = y;
		var _this1 = this.scale;
		_this1.ox = x;
		_this1.oy = y;
		var _this2 = this.rotation;
		_this2.px = x;
		_this2.py = y;
		return this;
	}
	,setTransformationOrigin: function(x,y) {
		var _this = this.scale;
		_this.ox = x;
		_this.oy = y;
		var _this1 = this.rotation;
		_this1.px = x;
		_this1.py = y;
		return this;
	}
	,centerOrigin: function(centerX,centerY) {
		if(centerY == null) {
			centerY = true;
		}
		if(centerX == null) {
			centerX = true;
		}
		if(centerX) {
			this.position.ox = this.scale.ox = this.rotation.px = this.get_width() / 2;
		}
		if(centerY) {
			this.position.oy = this.scale.oy = this.rotation.py = this.get_height() / 2;
		}
		return this;
	}
	,centerTransformation: function(centerX,centerY) {
		if(centerY == null) {
			centerY = true;
		}
		if(centerX == null) {
			centerX = true;
		}
		if(centerX) {
			this.scale.ox = this.rotation.px = this.get_width() / 2;
		}
		if(centerY) {
			this.scale.oy = this.rotation.py = this.get_height() / 2;
		}
		return this;
	}
	,kill: function() {
		this.alive = false;
	}
	,revive: function() {
		this.alive = true;
	}
	,getBehaviors: function() {
		return this._behaviors.slice();
	}
	,removeBehaviors: function() {
		var _g = 0;
		var _g1 = this._behaviors;
		while(_g < _g1.length) {
			var behavior = _g1[_g];
			++_g;
			behavior.remove();
		}
	}
	,destroyBehaviors: function() {
		while(this._behaviors.length > 0) this._behaviors.pop().destroy();
	}
	,resetBehaviors: function() {
		var _g = 0;
		var _g1 = this._behaviors;
		while(_g < _g1.length) {
			var behavior = _g1[_g];
			++_g;
			behavior.reset();
		}
	}
	,deepResetBehaviors: function() {
		var _g = 0;
		var _g1 = this._behaviors;
		while(_g < _g1.length) {
			var behavior = _g1[_g];
			++_g;
			behavior.deepReset();
		}
	}
	,execFirstFrame: function() {
		if(!this.firstFrameExecuted) {
			var tmp = HxOverrides.iter(this.onFirstFrame._callbacks);
			while(tmp.hasNext()) tmp.next().cbFunction(this);
			this.firstFrameExecuted = true;
		}
	}
	,callUpdate: function(elapsed) {
		this.originalDelta = elapsed;
		elapsed *= this.timeScale;
		if(!this.firstFrameExecuted) {
			var tmp = HxOverrides.iter(this.onFirstFrame._callbacks);
			while(tmp.hasNext()) tmp.next().cbFunction(this);
			this.firstFrameExecuted = true;
		}
		var updatePrevented = false;
		var tmp1 = HxOverrides.iter(this.onPreUpdate._callbacks);
		while(tmp1.hasNext()) if(tmp1.next().cbFunction(this,elapsed)) {
			updatePrevented = true;
		}
		if(!updatePrevented) {
			this.update(elapsed);
		}
		var tmp2 = HxOverrides.iter(this.onPostUpdate._callbacks);
		while(tmp2.hasNext()) tmp2.next().cbFunction(this,elapsed);
	}
	,callDraw: function(data,canvas) {
		if(!this.firstFrameExecuted) {
			var tmp = HxOverrides.iter(this.onFirstFrame._callbacks);
			while(tmp.hasNext()) tmp.next().cbFunction(this);
			this.firstFrameExecuted = true;
		}
		if(this._shaders.length > 0) {
			canvas.get_g2().end();
			this.refreshTexture();
			var temp;
			var _g = 0;
			var _g1 = this._shaders;
			while(_g < _g1.length) {
				var shader = _g1[_g];
				++_g;
				this.buffer.get_g2().begin();
				this.buffer.get_g2().set_pipeline(shader.pipeline);
				shader.update(this._texture,this.buffer);
				this.buffer.get_g2().drawImage(this._texture,0,0);
				this.buffer.get_g2().end();
				temp = this._texture;
				this._texture = this.buffer;
				this.buffer = temp;
			}
			canvas.get_g2().begin(false);
		}
		var drawPrevented = false;
		var tmp1 = HxOverrides.iter(this.onPreDraw._callbacks);
		while(tmp1.hasNext()) if(tmp1.next().cbFunction(this,data,canvas)) {
			drawPrevented = true;
		}
		if(!drawPrevented) {
			if(this._shaders.length > 0) {
				this.drawBuffer(data,canvas);
			} else {
				this.draw(data,canvas);
			}
		}
		var tmp2 = HxOverrides.iter(this.onPostDraw._callbacks);
		while(tmp2.hasNext()) tmp2.next().cbFunction(this,data,canvas);
	}
	,applyDrawingData: function(data,canvas) {
		var g2 = canvas.get_g2();
		if(this.antialiasing || data.antialiasing) {
			if(g2.get_imageScaleQuality() != kha_graphics2_ImageScaleQuality.High) {
				g2.set_imageScaleQuality(kha_graphics2_ImageScaleQuality.High);
			}
		} else if(g2.get_imageScaleQuality() != kha_graphics2_ImageScaleQuality.Low) {
			g2.set_imageScaleQuality(kha_graphics2_ImageScaleQuality.Low);
		}
		if(data.transformation == null) {
			var position = this.position;
			var scale = this.scale;
			var rotation = this.rotation;
			var x = position.x - position.ox;
			var y = position.y - position.oy;
			var matrix = new kha_math_FastMatrix3(1,0,x,0,1,y,0,0,1);
			var ox = x + scale.ox;
			var oy = y + scale.oy;
			var this1 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
			var this2 = new kha_math_FastMatrix3(scale.x,0,0,0,scale.y,0,0,0,1);
			var _00 = this1._00 * this2._00 + this1._10 * this2._01 + this1._20 * this2._02;
			var _10 = this1._00 * this2._10 + this1._10 * this2._11 + this1._20 * this2._12;
			var _20 = this1._00 * this2._20 + this1._10 * this2._21 + this1._20 * this2._22;
			var _01 = this1._01 * this2._00 + this1._11 * this2._01 + this1._21 * this2._02;
			var _11 = this1._01 * this2._10 + this1._11 * this2._11 + this1._21 * this2._12;
			var _21 = this1._01 * this2._20 + this1._11 * this2._21 + this1._21 * this2._22;
			var _02 = this1._02 * this2._00 + this1._12 * this2._01 + this1._22 * this2._02;
			var _12 = this1._02 * this2._10 + this1._12 * this2._11 + this1._22 * this2._12;
			var _22 = this1._02 * this2._20 + this1._12 * this2._21 + this1._22 * this2._22;
			var this3 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
			var _001 = _00 * this3._00 + _10 * this3._01 + _20 * this3._02;
			var _101 = _00 * this3._10 + _10 * this3._11 + _20 * this3._12;
			var _201 = _00 * this3._20 + _10 * this3._21 + _20 * this3._22;
			var _011 = _01 * this3._00 + _11 * this3._01 + _21 * this3._02;
			var _111 = _01 * this3._10 + _11 * this3._11 + _21 * this3._12;
			var _211 = _01 * this3._20 + _11 * this3._21 + _21 * this3._22;
			var _021 = _02 * this3._00 + _12 * this3._01 + _22 * this3._02;
			var _121 = _02 * this3._10 + _12 * this3._11 + _22 * this3._12;
			var _221 = _02 * this3._20 + _12 * this3._21 + _22 * this3._22;
			matrix = new kha_math_FastMatrix3(_001 * matrix._00 + _101 * matrix._01 + _201 * matrix._02,_001 * matrix._10 + _101 * matrix._11 + _201 * matrix._12,_001 * matrix._20 + _101 * matrix._21 + _201 * matrix._22,_011 * matrix._00 + _111 * matrix._01 + _211 * matrix._02,_011 * matrix._10 + _111 * matrix._11 + _211 * matrix._12,_011 * matrix._20 + _111 * matrix._21 + _211 * matrix._22,_021 * matrix._00 + _121 * matrix._01 + _221 * matrix._02,_021 * matrix._10 + _121 * matrix._11 + _221 * matrix._12,_021 * matrix._20 + _121 * matrix._21 + _221 * matrix._22);
			ox = x + rotation.px;
			oy = y + rotation.py;
			var this4 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
			var alpha = rotation.get_rad();
			var this5 = new kha_math_FastMatrix3(Math.cos(alpha),-Math.sin(alpha),0,Math.sin(alpha),Math.cos(alpha),0,0,0,1);
			var _002 = this4._00 * this5._00 + this4._10 * this5._01 + this4._20 * this5._02;
			var _102 = this4._00 * this5._10 + this4._10 * this5._11 + this4._20 * this5._12;
			var _202 = this4._00 * this5._20 + this4._10 * this5._21 + this4._20 * this5._22;
			var _012 = this4._01 * this5._00 + this4._11 * this5._01 + this4._21 * this5._02;
			var _112 = this4._01 * this5._10 + this4._11 * this5._11 + this4._21 * this5._12;
			var _212 = this4._01 * this5._20 + this4._11 * this5._21 + this4._21 * this5._22;
			var _022 = this4._02 * this5._00 + this4._12 * this5._01 + this4._22 * this5._02;
			var _122 = this4._02 * this5._10 + this4._12 * this5._11 + this4._22 * this5._12;
			var _222 = this4._02 * this5._20 + this4._12 * this5._21 + this4._22 * this5._22;
			var this6 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
			var _003 = _002 * this6._00 + _102 * this6._01 + _202 * this6._02;
			var _103 = _002 * this6._10 + _102 * this6._11 + _202 * this6._12;
			var _203 = _002 * this6._20 + _102 * this6._21 + _202 * this6._22;
			var _013 = _012 * this6._00 + _112 * this6._01 + _212 * this6._02;
			var _113 = _012 * this6._10 + _112 * this6._11 + _212 * this6._12;
			var _213 = _012 * this6._20 + _112 * this6._21 + _212 * this6._22;
			var _023 = _022 * this6._00 + _122 * this6._01 + _222 * this6._02;
			var _123 = _022 * this6._10 + _122 * this6._11 + _222 * this6._12;
			var _223 = _022 * this6._20 + _122 * this6._21 + _222 * this6._22;
			matrix = new kha_math_FastMatrix3(_003 * matrix._00 + _103 * matrix._01 + _203 * matrix._02,_003 * matrix._10 + _103 * matrix._11 + _203 * matrix._12,_003 * matrix._20 + _103 * matrix._21 + _203 * matrix._22,_013 * matrix._00 + _113 * matrix._01 + _213 * matrix._02,_013 * matrix._10 + _113 * matrix._11 + _213 * matrix._12,_013 * matrix._20 + _113 * matrix._21 + _213 * matrix._22,_023 * matrix._00 + _123 * matrix._01 + _223 * matrix._02,_023 * matrix._10 + _123 * matrix._11 + _223 * matrix._12,_023 * matrix._20 + _123 * matrix._21 + _223 * matrix._22);
			var matrix1 = matrix;
			var tmp;
			if(this.flipX || this.flipY) {
				var flipX = this.flipX;
				var flipY = this.flipY;
				var ox1 = this.position.x - this.position.ox + this.get_width() / 2;
				var oy1 = this.position.y - this.position.oy + this.get_height() / 2;
				var this7 = new kha_math_FastMatrix3(1,0,ox1,0,1,oy1,0,0,1);
				var this8 = new kha_math_FastMatrix3(flipX?-1:1,0,0,0,flipY?-1:1,0,0,0,1);
				var _004 = this7._00 * this8._00 + this7._10 * this8._01 + this7._20 * this8._02;
				var _104 = this7._00 * this8._10 + this7._10 * this8._11 + this7._20 * this8._12;
				var _204 = this7._00 * this8._20 + this7._10 * this8._21 + this7._20 * this8._22;
				var _014 = this7._01 * this8._00 + this7._11 * this8._01 + this7._21 * this8._02;
				var _114 = this7._01 * this8._10 + this7._11 * this8._11 + this7._21 * this8._12;
				var _214 = this7._01 * this8._20 + this7._11 * this8._21 + this7._21 * this8._22;
				var _024 = this7._02 * this8._00 + this7._12 * this8._01 + this7._22 * this8._02;
				var _124 = this7._02 * this8._10 + this7._12 * this8._11 + this7._22 * this8._12;
				var _224 = this7._02 * this8._20 + this7._12 * this8._21 + this7._22 * this8._22;
				var this9 = new kha_math_FastMatrix3(1,0,-ox1,0,1,-oy1,0,0,1);
				var _005 = _004 * this9._00 + _104 * this9._01 + _204 * this9._02;
				var _105 = _004 * this9._10 + _104 * this9._11 + _204 * this9._12;
				var _205 = _004 * this9._20 + _104 * this9._21 + _204 * this9._22;
				var _015 = _014 * this9._00 + _114 * this9._01 + _214 * this9._02;
				var _115 = _014 * this9._10 + _114 * this9._11 + _214 * this9._12;
				var _215 = _014 * this9._20 + _114 * this9._21 + _214 * this9._22;
				var _025 = _024 * this9._00 + _124 * this9._01 + _224 * this9._02;
				var _125 = _024 * this9._10 + _124 * this9._11 + _224 * this9._12;
				var _225 = _024 * this9._20 + _124 * this9._21 + _224 * this9._22;
				tmp = new kha_math_FastMatrix3(_005 * matrix1._00 + _105 * matrix1._01 + _205 * matrix1._02,_005 * matrix1._10 + _105 * matrix1._11 + _205 * matrix1._12,_005 * matrix1._20 + _105 * matrix1._21 + _205 * matrix1._22,_015 * matrix1._00 + _115 * matrix1._01 + _215 * matrix1._02,_015 * matrix1._10 + _115 * matrix1._11 + _215 * matrix1._12,_015 * matrix1._20 + _115 * matrix1._21 + _215 * matrix1._22,_025 * matrix1._00 + _125 * matrix1._01 + _225 * matrix1._02,_025 * matrix1._10 + _125 * matrix1._11 + _225 * matrix1._12,_025 * matrix1._20 + _125 * matrix1._21 + _225 * matrix1._22);
			} else {
				tmp = matrix1;
			}
			var transformation = this._cachedDrawingMatrix = tmp;
			g2.setTransformation(transformation);
			g2.transformations[g2.transformations.length - 1] = transformation;
		} else {
			var _this = data.transformation;
			var position1 = this.position;
			var scale1 = this.scale;
			var rotation1 = this.rotation;
			var x1 = position1.x - position1.ox;
			var y1 = position1.y - position1.oy;
			var matrix2 = new kha_math_FastMatrix3(1,0,x1,0,1,y1,0,0,1);
			var ox2 = x1 + scale1.ox;
			var oy2 = y1 + scale1.oy;
			var this10 = new kha_math_FastMatrix3(1,0,ox2,0,1,oy2,0,0,1);
			var this11 = new kha_math_FastMatrix3(scale1.x,0,0,0,scale1.y,0,0,0,1);
			var _006 = this10._00 * this11._00 + this10._10 * this11._01 + this10._20 * this11._02;
			var _106 = this10._00 * this11._10 + this10._10 * this11._11 + this10._20 * this11._12;
			var _206 = this10._00 * this11._20 + this10._10 * this11._21 + this10._20 * this11._22;
			var _016 = this10._01 * this11._00 + this10._11 * this11._01 + this10._21 * this11._02;
			var _116 = this10._01 * this11._10 + this10._11 * this11._11 + this10._21 * this11._12;
			var _216 = this10._01 * this11._20 + this10._11 * this11._21 + this10._21 * this11._22;
			var _026 = this10._02 * this11._00 + this10._12 * this11._01 + this10._22 * this11._02;
			var _126 = this10._02 * this11._10 + this10._12 * this11._11 + this10._22 * this11._12;
			var _226 = this10._02 * this11._20 + this10._12 * this11._21 + this10._22 * this11._22;
			var this12 = new kha_math_FastMatrix3(1,0,-ox2,0,1,-oy2,0,0,1);
			var _007 = _006 * this12._00 + _106 * this12._01 + _206 * this12._02;
			var _107 = _006 * this12._10 + _106 * this12._11 + _206 * this12._12;
			var _207 = _006 * this12._20 + _106 * this12._21 + _206 * this12._22;
			var _017 = _016 * this12._00 + _116 * this12._01 + _216 * this12._02;
			var _117 = _016 * this12._10 + _116 * this12._11 + _216 * this12._12;
			var _217 = _016 * this12._20 + _116 * this12._21 + _216 * this12._22;
			var _027 = _026 * this12._00 + _126 * this12._01 + _226 * this12._02;
			var _127 = _026 * this12._10 + _126 * this12._11 + _226 * this12._12;
			var _227 = _026 * this12._20 + _126 * this12._21 + _226 * this12._22;
			matrix2 = new kha_math_FastMatrix3(_007 * matrix2._00 + _107 * matrix2._01 + _207 * matrix2._02,_007 * matrix2._10 + _107 * matrix2._11 + _207 * matrix2._12,_007 * matrix2._20 + _107 * matrix2._21 + _207 * matrix2._22,_017 * matrix2._00 + _117 * matrix2._01 + _217 * matrix2._02,_017 * matrix2._10 + _117 * matrix2._11 + _217 * matrix2._12,_017 * matrix2._20 + _117 * matrix2._21 + _217 * matrix2._22,_027 * matrix2._00 + _127 * matrix2._01 + _227 * matrix2._02,_027 * matrix2._10 + _127 * matrix2._11 + _227 * matrix2._12,_027 * matrix2._20 + _127 * matrix2._21 + _227 * matrix2._22);
			ox2 = x1 + rotation1.px;
			oy2 = y1 + rotation1.py;
			var this13 = new kha_math_FastMatrix3(1,0,ox2,0,1,oy2,0,0,1);
			var alpha1 = rotation1.get_rad();
			var this14 = new kha_math_FastMatrix3(Math.cos(alpha1),-Math.sin(alpha1),0,Math.sin(alpha1),Math.cos(alpha1),0,0,0,1);
			var _008 = this13._00 * this14._00 + this13._10 * this14._01 + this13._20 * this14._02;
			var _108 = this13._00 * this14._10 + this13._10 * this14._11 + this13._20 * this14._12;
			var _208 = this13._00 * this14._20 + this13._10 * this14._21 + this13._20 * this14._22;
			var _018 = this13._01 * this14._00 + this13._11 * this14._01 + this13._21 * this14._02;
			var _118 = this13._01 * this14._10 + this13._11 * this14._11 + this13._21 * this14._12;
			var _218 = this13._01 * this14._20 + this13._11 * this14._21 + this13._21 * this14._22;
			var _028 = this13._02 * this14._00 + this13._12 * this14._01 + this13._22 * this14._02;
			var _128 = this13._02 * this14._10 + this13._12 * this14._11 + this13._22 * this14._12;
			var _228 = this13._02 * this14._20 + this13._12 * this14._21 + this13._22 * this14._22;
			var this15 = new kha_math_FastMatrix3(1,0,-ox2,0,1,-oy2,0,0,1);
			var _009 = _008 * this15._00 + _108 * this15._01 + _208 * this15._02;
			var _109 = _008 * this15._10 + _108 * this15._11 + _208 * this15._12;
			var _209 = _008 * this15._20 + _108 * this15._21 + _208 * this15._22;
			var _019 = _018 * this15._00 + _118 * this15._01 + _218 * this15._02;
			var _119 = _018 * this15._10 + _118 * this15._11 + _218 * this15._12;
			var _219 = _018 * this15._20 + _118 * this15._21 + _218 * this15._22;
			var _029 = _028 * this15._00 + _128 * this15._01 + _228 * this15._02;
			var _129 = _028 * this15._10 + _128 * this15._11 + _228 * this15._12;
			var _229 = _028 * this15._20 + _128 * this15._21 + _228 * this15._22;
			matrix2 = new kha_math_FastMatrix3(_009 * matrix2._00 + _109 * matrix2._01 + _209 * matrix2._02,_009 * matrix2._10 + _109 * matrix2._11 + _209 * matrix2._12,_009 * matrix2._20 + _109 * matrix2._21 + _209 * matrix2._22,_019 * matrix2._00 + _119 * matrix2._01 + _219 * matrix2._02,_019 * matrix2._10 + _119 * matrix2._11 + _219 * matrix2._12,_019 * matrix2._20 + _119 * matrix2._21 + _219 * matrix2._22,_029 * matrix2._00 + _129 * matrix2._01 + _229 * matrix2._02,_029 * matrix2._10 + _129 * matrix2._11 + _229 * matrix2._12,_029 * matrix2._20 + _129 * matrix2._21 + _229 * matrix2._22);
			var matrix3 = matrix2;
			var tmp1;
			if(this.flipX || this.flipY) {
				var flipX1 = this.flipX;
				var flipY1 = this.flipY;
				var ox3 = this.position.x - this.position.ox + this.get_width() / 2;
				var oy3 = this.position.y - this.position.oy + this.get_height() / 2;
				var this16 = new kha_math_FastMatrix3(1,0,ox3,0,1,oy3,0,0,1);
				var this17 = new kha_math_FastMatrix3(flipX1?-1:1,0,0,0,flipY1?-1:1,0,0,0,1);
				var _0010 = this16._00 * this17._00 + this16._10 * this17._01 + this16._20 * this17._02;
				var _1010 = this16._00 * this17._10 + this16._10 * this17._11 + this16._20 * this17._12;
				var _2010 = this16._00 * this17._20 + this16._10 * this17._21 + this16._20 * this17._22;
				var _0110 = this16._01 * this17._00 + this16._11 * this17._01 + this16._21 * this17._02;
				var _1110 = this16._01 * this17._10 + this16._11 * this17._11 + this16._21 * this17._12;
				var _2110 = this16._01 * this17._20 + this16._11 * this17._21 + this16._21 * this17._22;
				var _0210 = this16._02 * this17._00 + this16._12 * this17._01 + this16._22 * this17._02;
				var _1210 = this16._02 * this17._10 + this16._12 * this17._11 + this16._22 * this17._12;
				var _2210 = this16._02 * this17._20 + this16._12 * this17._21 + this16._22 * this17._22;
				var this18 = new kha_math_FastMatrix3(1,0,-ox3,0,1,-oy3,0,0,1);
				var _0011 = _0010 * this18._00 + _1010 * this18._01 + _2010 * this18._02;
				var _1011 = _0010 * this18._10 + _1010 * this18._11 + _2010 * this18._12;
				var _2011 = _0010 * this18._20 + _1010 * this18._21 + _2010 * this18._22;
				var _0111 = _0110 * this18._00 + _1110 * this18._01 + _2110 * this18._02;
				var _1111 = _0110 * this18._10 + _1110 * this18._11 + _2110 * this18._12;
				var _2111 = _0110 * this18._20 + _1110 * this18._21 + _2110 * this18._22;
				var _0211 = _0210 * this18._00 + _1210 * this18._01 + _2210 * this18._02;
				var _1211 = _0210 * this18._10 + _1210 * this18._11 + _2210 * this18._12;
				var _2211 = _0210 * this18._20 + _1210 * this18._21 + _2210 * this18._22;
				tmp1 = new kha_math_FastMatrix3(_0011 * matrix3._00 + _1011 * matrix3._01 + _2011 * matrix3._02,_0011 * matrix3._10 + _1011 * matrix3._11 + _2011 * matrix3._12,_0011 * matrix3._20 + _1011 * matrix3._21 + _2011 * matrix3._22,_0111 * matrix3._00 + _1111 * matrix3._01 + _2111 * matrix3._02,_0111 * matrix3._10 + _1111 * matrix3._11 + _2111 * matrix3._12,_0111 * matrix3._20 + _1111 * matrix3._21 + _2111 * matrix3._22,_0211 * matrix3._00 + _1211 * matrix3._01 + _2211 * matrix3._02,_0211 * matrix3._10 + _1211 * matrix3._11 + _2211 * matrix3._12,_0211 * matrix3._20 + _1211 * matrix3._21 + _2211 * matrix3._22);
			} else {
				tmp1 = matrix3;
			}
			var m = tmp1;
			var transformation1 = this._cachedDrawingMatrix = new kha_math_FastMatrix3(_this._00 * m._00 + _this._10 * m._01 + _this._20 * m._02,_this._00 * m._10 + _this._10 * m._11 + _this._20 * m._12,_this._00 * m._20 + _this._10 * m._21 + _this._20 * m._22,_this._01 * m._00 + _this._11 * m._01 + _this._21 * m._02,_this._01 * m._10 + _this._11 * m._11 + _this._21 * m._12,_this._01 * m._20 + _this._11 * m._21 + _this._21 * m._22,_this._02 * m._00 + _this._12 * m._01 + _this._22 * m._02,_this._02 * m._10 + _this._12 * m._11 + _this._22 * m._12,_this._02 * m._20 + _this._12 * m._21 + _this._22 * m._22);
			g2.setTransformation(transformation1);
			g2.transformations[g2.transformations.length - 1] = transformation1;
		}
		if(data.color == null) {
			g2.set_color(this.color);
		} else {
			var src = this.color;
			var dest = data.color;
			var colorBlendMode = data.colorBlendMode;
			var colorAlphaBlendMode = data.colorAlphaBlendMode;
			g2.set_color(colorAlphaBlendMode == null?kala_math_color__$Color_Color_$Impl_$.blend(src,dest,colorBlendMode):kala_math_color__$Color_Color_$Impl_$.blendEx(src,dest,colorBlendMode,colorAlphaBlendMode));
		}
		g2.set_opacity(this.opacity * data.opacity);
	}
	,unloadGraphics: function() {
		if(this._texture != null) {
			this._texture.unload();
			this.buffer.unload();
			this._texture = null;
			this.buffer = null;
		}
	}
	,refreshTexture: function() {
		var _g = this.get_width();
		var w = _$UInt_UInt_$Impl_$.toFloat(this._shaderSize) + _g | 0;
		var _g2 = this.get_height();
		var h = _$UInt_UInt_$Impl_$.toFloat(this._shaderSize) + _g2 | 0;
		if(this._texture == null) {
			this._texture = kha_Image.createRenderTarget(w,h);
			this.buffer = kha_Image.createRenderTarget(w,h);
		} else if(this._texture.get_width() != this._texture.get_width() || this._texture.get_height() != this._texture.get_height()) {
			this._texture.unload();
			this.buffer.unload();
			this._texture = kha_Image.createRenderTarget(w,h);
			this.buffer = kha_Image.createRenderTarget(w,h);
		}
		var _this = this.position;
		var tempPos = new kala_math_Vec2T(_this.x,_this.y,_this.ox,_this.oy);
		var _this1 = this.scale;
		var tempScale = new kala_math_Vec2T(_this1.x,_this1.y,_this1.ox,_this1.oy);
		var _this2 = this.rotation;
		var tempRot = new kala_math_Rotation(_this2.angle,_this2.px,_this2.py,_this2.asDeg);
		var tempColor = this.color;
		var tempOpacity = this.opacity;
		var _this3 = this.position;
		var x = this.bufferOriginX;
		var y = this.bufferOriginY;
		_this3.x = x;
		_this3.y = y;
		_this3.ox = 0;
		_this3.oy = 0;
		var _this4 = this.scale;
		_this4.x = 1;
		_this4.y = 1;
		this.rotation.angle = 0;
		this.color = -1;
		this.opacity = 1;
		this._texture.get_g2().begin();
		this.draw(new kala_DrawingData(false,null,null,null,null,1,null),this._texture);
		this._texture.get_g2().end();
		this.position = tempPos;
		this.scale = tempScale;
		this.rotation = tempRot;
		this.color = tempColor;
		this.opacity = tempOpacity;
	}
	,get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		return this._width;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		return this._height;
	}
	,get_x: function() {
		return this.position.x;
	}
	,set_x: function(value) {
		return this.position.x = value;
	}
	,get_y: function() {
		return this.position.y;
	}
	,set_y: function(value) {
		return this.position.y = value;
	}
	,get_angle: function() {
		return this.rotation.angle;
	}
	,set_angle: function(value) {
		return this.rotation.angle = value;
	}
	,get_matrix: function() {
		var position = this.position;
		var scale = this.scale;
		var rotation = this.rotation;
		var x = position.x - position.ox;
		var y = position.y - position.oy;
		var matrix = new kha_math_FastMatrix3(1,0,x,0,1,y,0,0,1);
		var ox = x + scale.ox;
		var oy = y + scale.oy;
		var this1 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
		var this2 = new kha_math_FastMatrix3(scale.x,0,0,0,scale.y,0,0,0,1);
		var _00 = this1._00 * this2._00 + this1._10 * this2._01 + this1._20 * this2._02;
		var _10 = this1._00 * this2._10 + this1._10 * this2._11 + this1._20 * this2._12;
		var _20 = this1._00 * this2._20 + this1._10 * this2._21 + this1._20 * this2._22;
		var _01 = this1._01 * this2._00 + this1._11 * this2._01 + this1._21 * this2._02;
		var _11 = this1._01 * this2._10 + this1._11 * this2._11 + this1._21 * this2._12;
		var _21 = this1._01 * this2._20 + this1._11 * this2._21 + this1._21 * this2._22;
		var _02 = this1._02 * this2._00 + this1._12 * this2._01 + this1._22 * this2._02;
		var _12 = this1._02 * this2._10 + this1._12 * this2._11 + this1._22 * this2._12;
		var _22 = this1._02 * this2._20 + this1._12 * this2._21 + this1._22 * this2._22;
		var this3 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
		var _001 = _00 * this3._00 + _10 * this3._01 + _20 * this3._02;
		var _101 = _00 * this3._10 + _10 * this3._11 + _20 * this3._12;
		var _201 = _00 * this3._20 + _10 * this3._21 + _20 * this3._22;
		var _011 = _01 * this3._00 + _11 * this3._01 + _21 * this3._02;
		var _111 = _01 * this3._10 + _11 * this3._11 + _21 * this3._12;
		var _211 = _01 * this3._20 + _11 * this3._21 + _21 * this3._22;
		var _021 = _02 * this3._00 + _12 * this3._01 + _22 * this3._02;
		var _121 = _02 * this3._10 + _12 * this3._11 + _22 * this3._12;
		var _221 = _02 * this3._20 + _12 * this3._21 + _22 * this3._22;
		matrix = new kha_math_FastMatrix3(_001 * matrix._00 + _101 * matrix._01 + _201 * matrix._02,_001 * matrix._10 + _101 * matrix._11 + _201 * matrix._12,_001 * matrix._20 + _101 * matrix._21 + _201 * matrix._22,_011 * matrix._00 + _111 * matrix._01 + _211 * matrix._02,_011 * matrix._10 + _111 * matrix._11 + _211 * matrix._12,_011 * matrix._20 + _111 * matrix._21 + _211 * matrix._22,_021 * matrix._00 + _121 * matrix._01 + _221 * matrix._02,_021 * matrix._10 + _121 * matrix._11 + _221 * matrix._12,_021 * matrix._20 + _121 * matrix._21 + _221 * matrix._22);
		ox = x + rotation.px;
		oy = y + rotation.py;
		var this4 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
		var alpha = rotation.get_rad();
		var this5 = new kha_math_FastMatrix3(Math.cos(alpha),-Math.sin(alpha),0,Math.sin(alpha),Math.cos(alpha),0,0,0,1);
		var _002 = this4._00 * this5._00 + this4._10 * this5._01 + this4._20 * this5._02;
		var _102 = this4._00 * this5._10 + this4._10 * this5._11 + this4._20 * this5._12;
		var _202 = this4._00 * this5._20 + this4._10 * this5._21 + this4._20 * this5._22;
		var _012 = this4._01 * this5._00 + this4._11 * this5._01 + this4._21 * this5._02;
		var _112 = this4._01 * this5._10 + this4._11 * this5._11 + this4._21 * this5._12;
		var _212 = this4._01 * this5._20 + this4._11 * this5._21 + this4._21 * this5._22;
		var _022 = this4._02 * this5._00 + this4._12 * this5._01 + this4._22 * this5._02;
		var _122 = this4._02 * this5._10 + this4._12 * this5._11 + this4._22 * this5._12;
		var _222 = this4._02 * this5._20 + this4._12 * this5._21 + this4._22 * this5._22;
		var this6 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
		var _003 = _002 * this6._00 + _102 * this6._01 + _202 * this6._02;
		var _103 = _002 * this6._10 + _102 * this6._11 + _202 * this6._12;
		var _203 = _002 * this6._20 + _102 * this6._21 + _202 * this6._22;
		var _013 = _012 * this6._00 + _112 * this6._01 + _212 * this6._02;
		var _113 = _012 * this6._10 + _112 * this6._11 + _212 * this6._12;
		var _213 = _012 * this6._20 + _112 * this6._21 + _212 * this6._22;
		var _023 = _022 * this6._00 + _122 * this6._01 + _222 * this6._02;
		var _123 = _022 * this6._10 + _122 * this6._11 + _222 * this6._12;
		var _223 = _022 * this6._20 + _122 * this6._21 + _222 * this6._22;
		matrix = new kha_math_FastMatrix3(_003 * matrix._00 + _103 * matrix._01 + _203 * matrix._02,_003 * matrix._10 + _103 * matrix._11 + _203 * matrix._12,_003 * matrix._20 + _103 * matrix._21 + _203 * matrix._22,_013 * matrix._00 + _113 * matrix._01 + _213 * matrix._02,_013 * matrix._10 + _113 * matrix._11 + _213 * matrix._12,_013 * matrix._20 + _113 * matrix._21 + _213 * matrix._22,_023 * matrix._00 + _123 * matrix._01 + _223 * matrix._02,_023 * matrix._10 + _123 * matrix._11 + _223 * matrix._12,_023 * matrix._20 + _123 * matrix._21 + _223 * matrix._22);
		var matrix1 = matrix;
		if(this.flipX || this.flipY) {
			var flipX = this.flipX;
			var flipY = this.flipY;
			var ox1 = this.position.x - this.position.ox + this.get_width() / 2;
			var oy1 = this.position.y - this.position.oy + this.get_height() / 2;
			var this7 = new kha_math_FastMatrix3(1,0,ox1,0,1,oy1,0,0,1);
			var this8 = new kha_math_FastMatrix3(flipX?-1:1,0,0,0,flipY?-1:1,0,0,0,1);
			var _004 = this7._00 * this8._00 + this7._10 * this8._01 + this7._20 * this8._02;
			var _104 = this7._00 * this8._10 + this7._10 * this8._11 + this7._20 * this8._12;
			var _204 = this7._00 * this8._20 + this7._10 * this8._21 + this7._20 * this8._22;
			var _014 = this7._01 * this8._00 + this7._11 * this8._01 + this7._21 * this8._02;
			var _114 = this7._01 * this8._10 + this7._11 * this8._11 + this7._21 * this8._12;
			var _214 = this7._01 * this8._20 + this7._11 * this8._21 + this7._21 * this8._22;
			var _024 = this7._02 * this8._00 + this7._12 * this8._01 + this7._22 * this8._02;
			var _124 = this7._02 * this8._10 + this7._12 * this8._11 + this7._22 * this8._12;
			var _224 = this7._02 * this8._20 + this7._12 * this8._21 + this7._22 * this8._22;
			var this9 = new kha_math_FastMatrix3(1,0,-ox1,0,1,-oy1,0,0,1);
			var _005 = _004 * this9._00 + _104 * this9._01 + _204 * this9._02;
			var _105 = _004 * this9._10 + _104 * this9._11 + _204 * this9._12;
			var _205 = _004 * this9._20 + _104 * this9._21 + _204 * this9._22;
			var _015 = _014 * this9._00 + _114 * this9._01 + _214 * this9._02;
			var _115 = _014 * this9._10 + _114 * this9._11 + _214 * this9._12;
			var _215 = _014 * this9._20 + _114 * this9._21 + _214 * this9._22;
			var _025 = _024 * this9._00 + _124 * this9._01 + _224 * this9._02;
			var _125 = _024 * this9._10 + _124 * this9._11 + _224 * this9._12;
			var _225 = _024 * this9._20 + _124 * this9._21 + _224 * this9._22;
			return new kha_math_FastMatrix3(_005 * matrix1._00 + _105 * matrix1._01 + _205 * matrix1._02,_005 * matrix1._10 + _105 * matrix1._11 + _205 * matrix1._12,_005 * matrix1._20 + _105 * matrix1._21 + _205 * matrix1._22,_015 * matrix1._00 + _115 * matrix1._01 + _215 * matrix1._02,_015 * matrix1._10 + _115 * matrix1._11 + _215 * matrix1._12,_015 * matrix1._20 + _115 * matrix1._21 + _215 * matrix1._22,_025 * matrix1._00 + _125 * matrix1._01 + _225 * matrix1._02,_025 * matrix1._10 + _125 * matrix1._11 + _225 * matrix1._12,_025 * matrix1._20 + _125 * matrix1._21 + _225 * matrix1._22);
		}
		return matrix1;
	}
	,__class__: kala_objects_Object
	,__properties__: {set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",get_matrix:"get_matrix",set_angle:"set_angle",get_angle:"get_angle",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
});
var kala_objects_group_IGroup = function() { };
$hxClasses["kala.objects.group.IGroup"] = kala_objects_group_IGroup;
kala_objects_group_IGroup.__name__ = ["kala","objects","group","IGroup"];
kala_objects_group_IGroup.__interfaces__ = [kala_objects_IObject];
kala_objects_group_IGroup.prototype = {
	transformationEnable: null
	,colorBlendMode: null
	,colorAlphaBlendMode: null
	,timeScale: null
	,views: null
	,addView: null
	,removeView: null
	,_add: null
	,_remove: null
	,__class__: kala_objects_group_IGroup
};
var kala_objects_group_Group = function(transformationEnable,factoryFunction) {
	if(transformationEnable == null) {
		transformationEnable = false;
	}
	this.views = [];
	this.members = [];
	kala_objects_Object.call(this);
	this.isGroup = true;
	this.transformationEnable = transformationEnable;
	this.factoryFunction = factoryFunction;
};
$hxClasses["kala.objects.group.Group"] = kala_objects_group_Group;
kala_objects_group_Group.__name__ = ["kala","objects","group","Group"];
kala_objects_group_Group.__interfaces__ = [kala_objects_group_IGroup];
kala_objects_group_Group.__super__ = kala_objects_Object;
kala_objects_group_Group.prototype = $extend(kala_objects_Object.prototype,{
	transformationEnable: null
	,colorBlendMode: null
	,colorAlphaBlendMode: null
	,factoryFunction: null
	,members: null
	,views: null
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		kala_objects_Object.prototype.reset.call(this,resetBehaviors);
		this.color = -1;
		this.colorBlendMode = kala_math_color_BlendMode.MULTI_2X;
		this.colorAlphaBlendMode = null;
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_Object.prototype.destroy.call(this,destroyBehaviors);
		while(this.members.length > 0) this.members.pop().destroy(destroyBehaviors);
		while(this.views.length > 0) this.views.pop().destroy(destroyBehaviors);
		this.members = null;
		this.views = null;
	}
	,update: function(elapsed) {
		var i = 0;
		var child;
		while(i < this.members.length) {
			child = this.members[i];
			if(child == null) {
				this.members.splice(i,1);
				continue;
			}
			if(child.alive && child.active) {
				var elapsed1 = child.groupTimeScaleSkipped?this.originalDelta:elapsed;
				child.originalDelta = elapsed1;
				elapsed1 *= child.timeScale;
				if(!child.firstFrameExecuted) {
					var tmp = HxOverrides.iter(child.onFirstFrame._callbacks);
					while(tmp.hasNext()) tmp.next().cbFunction(child);
					child.firstFrameExecuted = true;
				}
				var updatePrevented = false;
				var tmp1 = HxOverrides.iter(child.onPreUpdate._callbacks);
				while(tmp1.hasNext()) if(tmp1.next().cbFunction(child,elapsed1)) {
					updatePrevented = true;
				}
				if(!updatePrevented) {
					child.update(elapsed1);
				}
				var tmp2 = HxOverrides.iter(child.onPostUpdate._callbacks);
				while(tmp2.hasNext()) tmp2.next().cbFunction(child,elapsed1);
			}
			++i;
		}
		i = 0;
		var view;
		while(i < this.views.length) {
			view = this.views[i];
			if(view == null) {
				this.views.splice(i,1);
				continue;
			}
			if(view.alive && view.active) {
				var elapsed2 = view.groupTimeScaleSkipped?this.originalDelta:elapsed;
				view.originalDelta = elapsed2;
				elapsed2 *= view.timeScale;
				if(!view.firstFrameExecuted) {
					var tmp3 = HxOverrides.iter(view.onFirstFrame._callbacks);
					while(tmp3.hasNext()) tmp3.next().cbFunction(view);
					view.firstFrameExecuted = true;
				}
				var updatePrevented1 = false;
				var tmp4 = HxOverrides.iter(view.onPreUpdate._callbacks);
				while(tmp4.hasNext()) if(tmp4.next().cbFunction(view,elapsed2)) {
					updatePrevented1 = true;
				}
				if(!updatePrevented1) {
					view.update(elapsed2);
				}
				var tmp5 = HxOverrides.iter(view.onPostUpdate._callbacks);
				while(tmp5.hasNext()) tmp5.next().cbFunction(view,elapsed2);
			}
			++i;
		}
	}
	,draw: function(data,canvas) {
		var g2 = canvas.get_g2();
		if(this.transformationEnable) {
			if(data.transformation == null) {
				var position = this.position;
				var scale = this.scale;
				var rotation = this.rotation;
				var x = position.x - position.ox;
				var y = position.y - position.oy;
				var matrix = new kha_math_FastMatrix3(1,0,x,0,1,y,0,0,1);
				var ox = x + scale.ox;
				var oy = y + scale.oy;
				var this1 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
				var this2 = new kha_math_FastMatrix3(scale.x,0,0,0,scale.y,0,0,0,1);
				var _00 = this1._00 * this2._00 + this1._10 * this2._01 + this1._20 * this2._02;
				var _10 = this1._00 * this2._10 + this1._10 * this2._11 + this1._20 * this2._12;
				var _20 = this1._00 * this2._20 + this1._10 * this2._21 + this1._20 * this2._22;
				var _01 = this1._01 * this2._00 + this1._11 * this2._01 + this1._21 * this2._02;
				var _11 = this1._01 * this2._10 + this1._11 * this2._11 + this1._21 * this2._12;
				var _21 = this1._01 * this2._20 + this1._11 * this2._21 + this1._21 * this2._22;
				var _02 = this1._02 * this2._00 + this1._12 * this2._01 + this1._22 * this2._02;
				var _12 = this1._02 * this2._10 + this1._12 * this2._11 + this1._22 * this2._12;
				var _22 = this1._02 * this2._20 + this1._12 * this2._21 + this1._22 * this2._22;
				var this3 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
				var _001 = _00 * this3._00 + _10 * this3._01 + _20 * this3._02;
				var _101 = _00 * this3._10 + _10 * this3._11 + _20 * this3._12;
				var _201 = _00 * this3._20 + _10 * this3._21 + _20 * this3._22;
				var _011 = _01 * this3._00 + _11 * this3._01 + _21 * this3._02;
				var _111 = _01 * this3._10 + _11 * this3._11 + _21 * this3._12;
				var _211 = _01 * this3._20 + _11 * this3._21 + _21 * this3._22;
				var _021 = _02 * this3._00 + _12 * this3._01 + _22 * this3._02;
				var _121 = _02 * this3._10 + _12 * this3._11 + _22 * this3._12;
				var _221 = _02 * this3._20 + _12 * this3._21 + _22 * this3._22;
				matrix = new kha_math_FastMatrix3(_001 * matrix._00 + _101 * matrix._01 + _201 * matrix._02,_001 * matrix._10 + _101 * matrix._11 + _201 * matrix._12,_001 * matrix._20 + _101 * matrix._21 + _201 * matrix._22,_011 * matrix._00 + _111 * matrix._01 + _211 * matrix._02,_011 * matrix._10 + _111 * matrix._11 + _211 * matrix._12,_011 * matrix._20 + _111 * matrix._21 + _211 * matrix._22,_021 * matrix._00 + _121 * matrix._01 + _221 * matrix._02,_021 * matrix._10 + _121 * matrix._11 + _221 * matrix._12,_021 * matrix._20 + _121 * matrix._21 + _221 * matrix._22);
				ox = x + rotation.px;
				oy = y + rotation.py;
				var this4 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
				var alpha = rotation.get_rad();
				var this5 = new kha_math_FastMatrix3(Math.cos(alpha),-Math.sin(alpha),0,Math.sin(alpha),Math.cos(alpha),0,0,0,1);
				var _002 = this4._00 * this5._00 + this4._10 * this5._01 + this4._20 * this5._02;
				var _102 = this4._00 * this5._10 + this4._10 * this5._11 + this4._20 * this5._12;
				var _202 = this4._00 * this5._20 + this4._10 * this5._21 + this4._20 * this5._22;
				var _012 = this4._01 * this5._00 + this4._11 * this5._01 + this4._21 * this5._02;
				var _112 = this4._01 * this5._10 + this4._11 * this5._11 + this4._21 * this5._12;
				var _212 = this4._01 * this5._20 + this4._11 * this5._21 + this4._21 * this5._22;
				var _022 = this4._02 * this5._00 + this4._12 * this5._01 + this4._22 * this5._02;
				var _122 = this4._02 * this5._10 + this4._12 * this5._11 + this4._22 * this5._12;
				var _222 = this4._02 * this5._20 + this4._12 * this5._21 + this4._22 * this5._22;
				var this6 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
				var _003 = _002 * this6._00 + _102 * this6._01 + _202 * this6._02;
				var _103 = _002 * this6._10 + _102 * this6._11 + _202 * this6._12;
				var _203 = _002 * this6._20 + _102 * this6._21 + _202 * this6._22;
				var _013 = _012 * this6._00 + _112 * this6._01 + _212 * this6._02;
				var _113 = _012 * this6._10 + _112 * this6._11 + _212 * this6._12;
				var _213 = _012 * this6._20 + _112 * this6._21 + _212 * this6._22;
				var _023 = _022 * this6._00 + _122 * this6._01 + _222 * this6._02;
				var _123 = _022 * this6._10 + _122 * this6._11 + _222 * this6._12;
				var _223 = _022 * this6._20 + _122 * this6._21 + _222 * this6._22;
				matrix = new kha_math_FastMatrix3(_003 * matrix._00 + _103 * matrix._01 + _203 * matrix._02,_003 * matrix._10 + _103 * matrix._11 + _203 * matrix._12,_003 * matrix._20 + _103 * matrix._21 + _203 * matrix._22,_013 * matrix._00 + _113 * matrix._01 + _213 * matrix._02,_013 * matrix._10 + _113 * matrix._11 + _213 * matrix._12,_013 * matrix._20 + _113 * matrix._21 + _213 * matrix._22,_023 * matrix._00 + _123 * matrix._01 + _223 * matrix._02,_023 * matrix._10 + _123 * matrix._11 + _223 * matrix._12,_023 * matrix._20 + _123 * matrix._21 + _223 * matrix._22);
				var matrix1 = matrix;
				var tmp;
				if(this.flipX || this.flipY) {
					var flipX = this.flipX;
					var flipY = this.flipY;
					var ox1 = this.position.x - this.position.ox + this.get_width() / 2;
					var oy1 = this.position.y - this.position.oy + this.get_height() / 2;
					var this7 = new kha_math_FastMatrix3(1,0,ox1,0,1,oy1,0,0,1);
					var this8 = new kha_math_FastMatrix3(flipX?-1:1,0,0,0,flipY?-1:1,0,0,0,1);
					var _004 = this7._00 * this8._00 + this7._10 * this8._01 + this7._20 * this8._02;
					var _104 = this7._00 * this8._10 + this7._10 * this8._11 + this7._20 * this8._12;
					var _204 = this7._00 * this8._20 + this7._10 * this8._21 + this7._20 * this8._22;
					var _014 = this7._01 * this8._00 + this7._11 * this8._01 + this7._21 * this8._02;
					var _114 = this7._01 * this8._10 + this7._11 * this8._11 + this7._21 * this8._12;
					var _214 = this7._01 * this8._20 + this7._11 * this8._21 + this7._21 * this8._22;
					var _024 = this7._02 * this8._00 + this7._12 * this8._01 + this7._22 * this8._02;
					var _124 = this7._02 * this8._10 + this7._12 * this8._11 + this7._22 * this8._12;
					var _224 = this7._02 * this8._20 + this7._12 * this8._21 + this7._22 * this8._22;
					var this9 = new kha_math_FastMatrix3(1,0,-ox1,0,1,-oy1,0,0,1);
					var _005 = _004 * this9._00 + _104 * this9._01 + _204 * this9._02;
					var _105 = _004 * this9._10 + _104 * this9._11 + _204 * this9._12;
					var _205 = _004 * this9._20 + _104 * this9._21 + _204 * this9._22;
					var _015 = _014 * this9._00 + _114 * this9._01 + _214 * this9._02;
					var _115 = _014 * this9._10 + _114 * this9._11 + _214 * this9._12;
					var _215 = _014 * this9._20 + _114 * this9._21 + _214 * this9._22;
					var _025 = _024 * this9._00 + _124 * this9._01 + _224 * this9._02;
					var _125 = _024 * this9._10 + _124 * this9._11 + _224 * this9._12;
					var _225 = _024 * this9._20 + _124 * this9._21 + _224 * this9._22;
					tmp = new kha_math_FastMatrix3(_005 * matrix1._00 + _105 * matrix1._01 + _205 * matrix1._02,_005 * matrix1._10 + _105 * matrix1._11 + _205 * matrix1._12,_005 * matrix1._20 + _105 * matrix1._21 + _205 * matrix1._22,_015 * matrix1._00 + _115 * matrix1._01 + _215 * matrix1._02,_015 * matrix1._10 + _115 * matrix1._11 + _215 * matrix1._12,_015 * matrix1._20 + _115 * matrix1._21 + _215 * matrix1._22,_025 * matrix1._00 + _125 * matrix1._01 + _225 * matrix1._02,_025 * matrix1._10 + _125 * matrix1._11 + _225 * matrix1._12,_025 * matrix1._20 + _125 * matrix1._21 + _225 * matrix1._22);
				} else {
					tmp = matrix1;
				}
				data.transformation = this._cachedDrawingMatrix = tmp;
			} else {
				var _this = data.transformation;
				var position1 = this.position;
				var scale1 = this.scale;
				var rotation1 = this.rotation;
				var x1 = position1.x - position1.ox;
				var y1 = position1.y - position1.oy;
				var matrix2 = new kha_math_FastMatrix3(1,0,x1,0,1,y1,0,0,1);
				var ox2 = x1 + scale1.ox;
				var oy2 = y1 + scale1.oy;
				var this10 = new kha_math_FastMatrix3(1,0,ox2,0,1,oy2,0,0,1);
				var this11 = new kha_math_FastMatrix3(scale1.x,0,0,0,scale1.y,0,0,0,1);
				var _006 = this10._00 * this11._00 + this10._10 * this11._01 + this10._20 * this11._02;
				var _106 = this10._00 * this11._10 + this10._10 * this11._11 + this10._20 * this11._12;
				var _206 = this10._00 * this11._20 + this10._10 * this11._21 + this10._20 * this11._22;
				var _016 = this10._01 * this11._00 + this10._11 * this11._01 + this10._21 * this11._02;
				var _116 = this10._01 * this11._10 + this10._11 * this11._11 + this10._21 * this11._12;
				var _216 = this10._01 * this11._20 + this10._11 * this11._21 + this10._21 * this11._22;
				var _026 = this10._02 * this11._00 + this10._12 * this11._01 + this10._22 * this11._02;
				var _126 = this10._02 * this11._10 + this10._12 * this11._11 + this10._22 * this11._12;
				var _226 = this10._02 * this11._20 + this10._12 * this11._21 + this10._22 * this11._22;
				var this12 = new kha_math_FastMatrix3(1,0,-ox2,0,1,-oy2,0,0,1);
				var _007 = _006 * this12._00 + _106 * this12._01 + _206 * this12._02;
				var _107 = _006 * this12._10 + _106 * this12._11 + _206 * this12._12;
				var _207 = _006 * this12._20 + _106 * this12._21 + _206 * this12._22;
				var _017 = _016 * this12._00 + _116 * this12._01 + _216 * this12._02;
				var _117 = _016 * this12._10 + _116 * this12._11 + _216 * this12._12;
				var _217 = _016 * this12._20 + _116 * this12._21 + _216 * this12._22;
				var _027 = _026 * this12._00 + _126 * this12._01 + _226 * this12._02;
				var _127 = _026 * this12._10 + _126 * this12._11 + _226 * this12._12;
				var _227 = _026 * this12._20 + _126 * this12._21 + _226 * this12._22;
				matrix2 = new kha_math_FastMatrix3(_007 * matrix2._00 + _107 * matrix2._01 + _207 * matrix2._02,_007 * matrix2._10 + _107 * matrix2._11 + _207 * matrix2._12,_007 * matrix2._20 + _107 * matrix2._21 + _207 * matrix2._22,_017 * matrix2._00 + _117 * matrix2._01 + _217 * matrix2._02,_017 * matrix2._10 + _117 * matrix2._11 + _217 * matrix2._12,_017 * matrix2._20 + _117 * matrix2._21 + _217 * matrix2._22,_027 * matrix2._00 + _127 * matrix2._01 + _227 * matrix2._02,_027 * matrix2._10 + _127 * matrix2._11 + _227 * matrix2._12,_027 * matrix2._20 + _127 * matrix2._21 + _227 * matrix2._22);
				ox2 = x1 + rotation1.px;
				oy2 = y1 + rotation1.py;
				var this13 = new kha_math_FastMatrix3(1,0,ox2,0,1,oy2,0,0,1);
				var alpha1 = rotation1.get_rad();
				var this14 = new kha_math_FastMatrix3(Math.cos(alpha1),-Math.sin(alpha1),0,Math.sin(alpha1),Math.cos(alpha1),0,0,0,1);
				var _008 = this13._00 * this14._00 + this13._10 * this14._01 + this13._20 * this14._02;
				var _108 = this13._00 * this14._10 + this13._10 * this14._11 + this13._20 * this14._12;
				var _208 = this13._00 * this14._20 + this13._10 * this14._21 + this13._20 * this14._22;
				var _018 = this13._01 * this14._00 + this13._11 * this14._01 + this13._21 * this14._02;
				var _118 = this13._01 * this14._10 + this13._11 * this14._11 + this13._21 * this14._12;
				var _218 = this13._01 * this14._20 + this13._11 * this14._21 + this13._21 * this14._22;
				var _028 = this13._02 * this14._00 + this13._12 * this14._01 + this13._22 * this14._02;
				var _128 = this13._02 * this14._10 + this13._12 * this14._11 + this13._22 * this14._12;
				var _228 = this13._02 * this14._20 + this13._12 * this14._21 + this13._22 * this14._22;
				var this15 = new kha_math_FastMatrix3(1,0,-ox2,0,1,-oy2,0,0,1);
				var _009 = _008 * this15._00 + _108 * this15._01 + _208 * this15._02;
				var _109 = _008 * this15._10 + _108 * this15._11 + _208 * this15._12;
				var _209 = _008 * this15._20 + _108 * this15._21 + _208 * this15._22;
				var _019 = _018 * this15._00 + _118 * this15._01 + _218 * this15._02;
				var _119 = _018 * this15._10 + _118 * this15._11 + _218 * this15._12;
				var _219 = _018 * this15._20 + _118 * this15._21 + _218 * this15._22;
				var _029 = _028 * this15._00 + _128 * this15._01 + _228 * this15._02;
				var _129 = _028 * this15._10 + _128 * this15._11 + _228 * this15._12;
				var _229 = _028 * this15._20 + _128 * this15._21 + _228 * this15._22;
				matrix2 = new kha_math_FastMatrix3(_009 * matrix2._00 + _109 * matrix2._01 + _209 * matrix2._02,_009 * matrix2._10 + _109 * matrix2._11 + _209 * matrix2._12,_009 * matrix2._20 + _109 * matrix2._21 + _209 * matrix2._22,_019 * matrix2._00 + _119 * matrix2._01 + _219 * matrix2._02,_019 * matrix2._10 + _119 * matrix2._11 + _219 * matrix2._12,_019 * matrix2._20 + _119 * matrix2._21 + _219 * matrix2._22,_029 * matrix2._00 + _129 * matrix2._01 + _229 * matrix2._02,_029 * matrix2._10 + _129 * matrix2._11 + _229 * matrix2._12,_029 * matrix2._20 + _129 * matrix2._21 + _229 * matrix2._22);
				var matrix3 = matrix2;
				var tmp1;
				if(this.flipX || this.flipY) {
					var flipX1 = this.flipX;
					var flipY1 = this.flipY;
					var ox3 = this.position.x - this.position.ox + this.get_width() / 2;
					var oy3 = this.position.y - this.position.oy + this.get_height() / 2;
					var this16 = new kha_math_FastMatrix3(1,0,ox3,0,1,oy3,0,0,1);
					var this17 = new kha_math_FastMatrix3(flipX1?-1:1,0,0,0,flipY1?-1:1,0,0,0,1);
					var _0010 = this16._00 * this17._00 + this16._10 * this17._01 + this16._20 * this17._02;
					var _1010 = this16._00 * this17._10 + this16._10 * this17._11 + this16._20 * this17._12;
					var _2010 = this16._00 * this17._20 + this16._10 * this17._21 + this16._20 * this17._22;
					var _0110 = this16._01 * this17._00 + this16._11 * this17._01 + this16._21 * this17._02;
					var _1110 = this16._01 * this17._10 + this16._11 * this17._11 + this16._21 * this17._12;
					var _2110 = this16._01 * this17._20 + this16._11 * this17._21 + this16._21 * this17._22;
					var _0210 = this16._02 * this17._00 + this16._12 * this17._01 + this16._22 * this17._02;
					var _1210 = this16._02 * this17._10 + this16._12 * this17._11 + this16._22 * this17._12;
					var _2210 = this16._02 * this17._20 + this16._12 * this17._21 + this16._22 * this17._22;
					var this18 = new kha_math_FastMatrix3(1,0,-ox3,0,1,-oy3,0,0,1);
					var _0011 = _0010 * this18._00 + _1010 * this18._01 + _2010 * this18._02;
					var _1011 = _0010 * this18._10 + _1010 * this18._11 + _2010 * this18._12;
					var _2011 = _0010 * this18._20 + _1010 * this18._21 + _2010 * this18._22;
					var _0111 = _0110 * this18._00 + _1110 * this18._01 + _2110 * this18._02;
					var _1111 = _0110 * this18._10 + _1110 * this18._11 + _2110 * this18._12;
					var _2111 = _0110 * this18._20 + _1110 * this18._21 + _2110 * this18._22;
					var _0211 = _0210 * this18._00 + _1210 * this18._01 + _2210 * this18._02;
					var _1211 = _0210 * this18._10 + _1210 * this18._11 + _2210 * this18._12;
					var _2211 = _0210 * this18._20 + _1210 * this18._21 + _2210 * this18._22;
					tmp1 = new kha_math_FastMatrix3(_0011 * matrix3._00 + _1011 * matrix3._01 + _2011 * matrix3._02,_0011 * matrix3._10 + _1011 * matrix3._11 + _2011 * matrix3._12,_0011 * matrix3._20 + _1011 * matrix3._21 + _2011 * matrix3._22,_0111 * matrix3._00 + _1111 * matrix3._01 + _2111 * matrix3._02,_0111 * matrix3._10 + _1111 * matrix3._11 + _2111 * matrix3._12,_0111 * matrix3._20 + _1111 * matrix3._21 + _2111 * matrix3._22,_0211 * matrix3._00 + _1211 * matrix3._01 + _2211 * matrix3._02,_0211 * matrix3._10 + _1211 * matrix3._11 + _2211 * matrix3._12,_0211 * matrix3._20 + _1211 * matrix3._21 + _2211 * matrix3._22);
				} else {
					tmp1 = matrix3;
				}
				var m = tmp1;
				data.transformation = this._cachedDrawingMatrix = new kha_math_FastMatrix3(_this._00 * m._00 + _this._10 * m._01 + _this._20 * m._02,_this._00 * m._10 + _this._10 * m._11 + _this._20 * m._12,_this._00 * m._20 + _this._10 * m._21 + _this._20 * m._22,_this._01 * m._00 + _this._11 * m._01 + _this._21 * m._02,_this._01 * m._10 + _this._11 * m._11 + _this._21 * m._12,_this._01 * m._20 + _this._11 * m._21 + _this._21 * m._22,_this._02 * m._00 + _this._12 * m._01 + _this._22 * m._02,_this._02 * m._10 + _this._12 * m._11 + _this._22 * m._12,_this._02 * m._20 + _this._12 * m._21 + _this._22 * m._22);
			}
			if(data.color == null) {
				data.color = this.color;
			} else {
				var src = this.color;
				var dest = data.color;
				var colorBlendMode = data.colorBlendMode;
				var colorAlphaBlendMode = data.colorAlphaBlendMode;
				data.color = colorAlphaBlendMode == null?kala_math_color__$Color_Color_$Impl_$.blend(src,dest,colorBlendMode):kala_math_color__$Color_Color_$Impl_$.blendEx(src,dest,colorBlendMode,colorAlphaBlendMode);
			}
			data.colorBlendMode = this.colorBlendMode;
			data.colorAlphaBlendMode = this.colorAlphaBlendMode;
			data.opacity = this.opacity * data.opacity;
		}
		if(this.antialiasing) {
			data.antialiasing = true;
		}
		if(this.views.length == 0) {
			var _g = 0;
			var _g1 = this.members;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child == null) {
					continue;
				}
				if(child.alive && child.isVisible()) {
					child.callDraw(data,canvas);
				}
			}
		} else {
			g2.end();
			var viewBuffer;
			var _g2 = 0;
			var _g11 = this.views;
			while(_g2 < _g11.length) {
				var view = _g11[_g2];
				++_g2;
				if(view == null) {
					continue;
				}
				viewBuffer = view.viewBuffer;
				if(data.transformation == null) {
					data.transformation = new kha_math_FastMatrix3(1,0,-view.viewport.x,0,1,-view.viewport.y,0,0,1);
				} else {
					var _this1 = data.transformation;
					var this19 = new kha_math_FastMatrix3(1,0,-view.viewport.x,0,1,-view.viewport.y,0,0,1);
					data.transformation = new kha_math_FastMatrix3(_this1._00 * this19._00 + _this1._10 * this19._01 + _this1._20 * this19._02,_this1._00 * this19._10 + _this1._10 * this19._11 + _this1._20 * this19._12,_this1._00 * this19._20 + _this1._10 * this19._21 + _this1._20 * this19._22,_this1._01 * this19._00 + _this1._11 * this19._01 + _this1._21 * this19._02,_this1._01 * this19._10 + _this1._11 * this19._11 + _this1._21 * this19._12,_this1._01 * this19._20 + _this1._11 * this19._21 + _this1._21 * this19._22,_this1._02 * this19._00 + _this1._12 * this19._01 + _this1._22 * this19._02,_this1._02 * this19._10 + _this1._12 * this19._11 + _this1._22 * this19._12,_this1._02 * this19._20 + _this1._12 * this19._21 + _this1._22 * this19._22);
				}
				var tmp2 = view.transparent?0:-16777216 | view.bgColor;
				viewBuffer.get_g2().begin(true,tmp2);
				var _g21 = 0;
				var _g3 = this.members;
				while(_g21 < _g3.length) {
					var child1 = _g3[_g21];
					++_g21;
					if(child1 == null) {
						continue;
					}
					if(child1.alive && child1.isVisible()) {
						child1.callDraw(data,viewBuffer);
					}
				}
				viewBuffer.get_g2().end();
			}
			g2.begin(false);
			data.transformation = data.transformation;
			var _g4 = 0;
			var _g12 = this.views;
			while(_g4 < _g12.length) {
				var view1 = _g12[_g4];
				++_g4;
				if(view1 == null) {
					continue;
				}
				if(view1.alive && view1.isVisible()) {
					view1.callDraw(data,canvas);
				}
			}
		}
	}
	,callDraw: function(data,canvas) {
		kala_objects_Object.prototype.callDraw.call(this,new kala_DrawingData(data.antialiasing,data.transformation,data.color,data.colorBlendMode,data.colorAlphaBlendMode,data.opacity,data.extra),canvas);
	}
	,createAlive: function() {
		var _g = 0;
		var _g1 = this.members;
		while(_g < _g1.length) {
			var obj = _g1[_g];
			++_g;
			if(!obj.alive) {
				obj.revive();
				return obj;
			}
		}
		if(this.factoryFunction != null) {
			var obj1 = this.factoryFunction();
			this.add(obj1);
			return obj1;
		}
		return null;
	}
	,add: function(obj,pos) {
		if(pos == null) {
			pos = -1;
		}
		if(this.members.indexOf(obj) != -1) {
			return;
		}
		if(pos == -1) {
			this.members.push(obj);
		} else {
			this.members.splice(pos,0,obj);
		}
	}
	,swap: function(swappedObj,obj) {
		var index = this.members.indexOf(swappedObj);
		if(index == -1) {
			return false;
		}
		this.members[index] = obj;
		swappedObj.firstFrameExecuted = false;
		return true;
	}
	,remove: function(obj,splice) {
		if(splice == null) {
			splice = false;
		}
		var index = this.members.indexOf(obj);
		if(index == -1) {
			return null;
		}
		if(splice) {
			this.members.splice(index,1);
		} else {
			this.members[index] = null;
		}
		obj.firstFrameExecuted = false;
		return obj;
	}
	,killAll: function(killSelf) {
		if(killSelf == null) {
			killSelf = false;
		}
		var _g = 0;
		var _g1 = this.members;
		while(_g < _g1.length) {
			var member = _g1[_g];
			++_g;
			if(member.alive) {
				member.kill();
			}
		}
		if(killSelf) {
			this.kill();
		}
	}
	,addView: function(view,pos) {
		if(pos == null) {
			pos = -1;
		}
		if(this.views.indexOf(view) != -1) {
			return;
		}
		if(pos == -1) {
			this.views.push(view);
		} else {
			this.views.splice(pos,0,view);
		}
	}
	,removeView: function(view,splice) {
		if(splice == null) {
			splice = false;
		}
		var index = this.views.indexOf(view);
		if(index == -1) {
			return null;
		}
		if(splice) {
			this.views.splice(index,1);
		} else {
			this.views[index] = null;
		}
		view.firstFrameExecuted = false;
		return view;
	}
	,countAlive: function() {
		var c = 0;
		var _g = 0;
		var _g1 = this.members;
		while(_g < _g1.length) {
			var member = _g1[_g];
			++_g;
			if(member.alive) {
				++c;
			}
		}
		return c;
	}
	,countDead: function() {
		var c = 0;
		var _g = 0;
		var _g1 = this.members;
		while(_g < _g1.length) {
			var member = _g1[_g];
			++_g;
			if(!member.alive) {
				++c;
			}
		}
		return c;
	}
	,iterator: function() {
		return HxOverrides.iter(this.members);
	}
	,_add: function(obj,pos) {
		if(pos == null) {
			pos = -1;
		}
		this.add(obj,pos);
	}
	,_remove: function(obj,spilce) {
		if(spilce == null) {
			spilce = false;
		}
		this.remove(obj,spilce);
	}
	,__class__: kala_objects_group_Group
});
var enemies_Enemy = function() {
	this.gemDropY = 0;
	this.gemDropX = 0;
	this.bodyAtkOn = true;
	kala_objects_group_Group.call(this,true);
	this.sprite = new kala_objects_sprite_Sprite();
	this.add(this.sprite);
	this.hpText = new kala_objects_text_BasicText(null,null,90);
	this.add(this.hpText);
	this.deathEffect = new kala_objects_sprite_Sprite();
	this.deathEffect.kill();
	this.add(this.deathEffect);
	this.collider = new kala_behaviors_collision_basic_Collider(this);
	this.tween = new kala_behaviors_tween_Tween(this);
	if(states_PlayState.instance != null) {
		this.player = states_PlayState.instance.player;
	}
};
$hxClasses["enemies.Enemy"] = enemies_Enemy;
enemies_Enemy.__name__ = ["enemies","Enemy"];
enemies_Enemy.__super__ = kala_objects_group_Group;
enemies_Enemy.prototype = $extend(kala_objects_group_Group.prototype,{
	bodyAtkOn: null
	,collider: null
	,mask: null
	,hp: null
	,sprite: null
	,hpText: null
	,deathEffect: null
	,tween: null
	,moveRandomTimeline: null
	,halfWidth: null
	,halfHeight: null
	,gemDropQuantity: null
	,gemDropX: null
	,gemDropY: null
	,player: null
	,isSubEnemy: null
	,revive: function() {
		kala_objects_group_Group.prototype.revive.call(this);
		this.sprite.revive();
		this.hpText.revive();
		this.mask.active = true;
		this.timeScale = 1;
	}
	,kill: function() {
		var _gthis = this;
		var quantity = this.gemDropQuantity;
		var offsetX = this.gemDropX;
		var offsetY = this.gemDropY;
		if(states_PlayState.instance.tutorialState != 5) {
			var _g1 = 0;
			var _g = Math.round(quantity * UpgradeData.gemDropFactor);
			while(_g1 < _g) {
				++_g1;
				var x = this.position.x + offsetX;
				var y = this.position.y + offsetY;
				var gem = enemies_Gem.group.createAlive();
				var _this = gem.position;
				_this.x = x;
				_this.y = y;
				gem.scale.x = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
				gem.scale.y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
				gem.angleOffset = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-90,90);
				gem.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-4,4);
				gem.vspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-2,-6);
				gem.time = 30;
			}
		}
		this.sprite.kill();
		this.hpText.kill();
		this.mask.active = false;
		var _this1 = this.deathEffect.position;
		var x1 = this.sprite.position.x;
		var y1 = this.sprite.position.y;
		_this1.x = x1;
		_this1.y = y1;
		var _this2 = this.deathEffect.scale;
		var originX = this.halfWidth;
		var originY = this.halfHeight;
		_this2.x = 1;
		_this2.y = 1;
		_this2.ox = originX;
		_this2.oy = originY;
		this.deathEffect.opacity = 1;
		this.deathEffect.revive();
		var _this3 = this.tween;
		var target = this.deathEffect;
		var ease = null;
		if(target == null) {
			target = _this3.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this4 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this3,null,target,ease,null);
		_this4.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.deathEffect.scale,{ x : 3, y : 3},15,kala_behaviors_tween_Ease.cubeOut,null);
		task.backwardEase = null;
		_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(null,{ opacity : 0},15,null,null);
		task1.backwardEase = null;
		_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		_this4.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this4.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(timeline) {
			timeline.cancel();
			_gthis.put();
		}));
		_this4.manager._tweens.push(_this4);
		_this4.nextNode();
		if(!this.isSubEnemy) {
			states_PlayState.instance.onScreenEnemyCount--;
			if(!states_PlayState.instance.boss.alive) {
				states_PlayState.instance.maxOnScreenEnemy += 1 / states_PlayState.instance.maxOnScreenEnemy;
				states_PlayState.instance.killsLeftUntilBoss--;
			}
		}
	}
	,update: function(elapsed) {
		kala_objects_group_Group.prototype.update.call(this,elapsed);
		if(!this.deathEffect.alive) {
			this.updateAlive(elapsed);
		}
		this.timeScale = 1;
	}
	,put: function() {
		this.alive = false;
		this.deathEffect.kill();
		if(this.moveRandomTimeline != null) {
			this.moveRandomTimeline.cancel();
		}
	}
	,moveRandom: function(actionCB) {
		var _gthis = this;
		var value = this.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var x = Math.max(this.halfWidth,Math.min(700 - this.halfWidth,value));
		var value1 = this.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var y = Math.max(this.halfHeight,Math.min(200,value1));
		var x1 = this.position.x;
		var y1 = this.position.y;
		var t = Math.sqrt((x1 - x) * (x1 - x) + (y1 - y) * (y1 - y)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		this.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var _this1 = this.moveRandomTimeline;
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this,{ x : x, y : y},t,kala_behaviors_tween_Ease.sineInOut,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			actionCB();
		}));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.moveRandom(actionCB);
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
	}
	,updateAlive: function(elapsed) {
		var tmp = HxOverrides.iter(player_Bullet.mainGroup.members);
		while(tmp.hasNext()) {
			var bullet = tmp.next();
			if(bullet.alive && bullet.vspeed < 0) {
				if(this.mask.testRect(bullet.mask)) {
					var _g = this;
					_g.set_hp(_g.hp - 2);
					bullet.kill();
				}
			}
		}
		var tmp1 = HxOverrides.iter(player_Bullet.minionGroup.members);
		while(tmp1.hasNext()) {
			var bullet1 = tmp1.next();
			if(bullet1.alive && bullet1.vspeed < 0) {
				if(this.mask.testRect(bullet1.mask)) {
					var _g1 = this;
					_g1.set_hp(_g1.hp - 2);
					bullet1.kill();
				}
			}
		}
		if(this.bodyAtkOn) {
			var tmp2 = HxOverrides.iter(player_Minion.group.members);
			while(tmp2.hasNext()) {
				var minion = tmp2.next();
				if(minion.alive && minion.lives > 0 && this.mask.testCircle(minion.mask)) {
					minion.getHit();
				}
			}
			if(this.player.lives > 0 && this.player.flicker.flickersLeft == 0 && this.mask.testCircle(this.player.mask)) {
				this.player.getHit();
			}
		}
	}
	,spawnRandomPos: function() {
	}
	,addCircleMask: function(x,y,radius) {
		var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
		circle.reset();
		var _this = circle.position;
		_this.x = x;
		_this.y = y;
		circle.radius = radius;
		this.collider._shapes.push(circle);
		this.mask = circle;
	}
	,initDeathEffect: function() {
		this.deathEffect.image = this.sprite.image;
		var _this = this.deathEffect.frameRect;
		var rect = this.sprite.frameRect;
		_this.x = rect.x;
		_this.y = rect.y;
		_this.width = rect.width;
		_this.height = rect.height;
		var _this1 = this.deathEffect.position;
		var originX = this.sprite.position.ox;
		var originY = this.sprite.position.oy;
		_this1.ox = originX;
		_this1.oy = originY;
	}
	,dropGems: function(quantity,offsetX,offsetY) {
		if(states_PlayState.instance.tutorialState == 5) {
			return;
		}
		var _g1 = 0;
		var _g = Math.round(quantity * UpgradeData.gemDropFactor);
		while(_g1 < _g) {
			++_g1;
			var x = this.position.x + offsetX;
			var y = this.position.y + offsetY;
			var gem = enemies_Gem.group.createAlive();
			var _this = gem.position;
			_this.x = x;
			_this.y = y;
			gem.scale.x = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
			gem.scale.y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
			gem.angleOffset = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-90,90);
			gem.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-4,4);
			gem.vspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-2,-6);
			gem.time = 30;
		}
	}
	,set_hp: function(value) {
		if(this.deathEffect.alive) {
			return this.hp;
		}
		this.hp = value;
		value = value | 0;
		if(value <= 0) {
			value = 0;
			this.hp = value;
			this.kill();
		}
		this.hpText.set_text("" + value);
		var _this = this.hpText.position;
		var originX = this.hpText.get_width() / 2;
		var originY = this.hpText.get_height() / 2;
		_this.ox = originX;
		_this.oy = originY;
		return this.hp;
	}
	,get_killed: function() {
		if(!(!this.alive)) {
			return this.deathEffect.alive;
		} else {
			return true;
		}
	}
	,__class__: enemies_Enemy
	,__properties__: $extend(kala_objects_group_Group.prototype.__properties__,{get_killed:"get_killed",set_hp:"set_hp"})
});
var kala_objects_sprite_Sprite = function(image,frameX,frameY,frameWidth,frameHeight,animated) {
	if(animated == null) {
		animated = false;
	}
	this.frameRect = new kala_math_RectI();
	kala_objects_Object.call(this);
	if(image != null) {
		this.loadImage(image,frameX,frameY,frameWidth,frameHeight);
	}
	if(animated) {
		new kala_behaviors_display_SpriteAnimation(this);
	}
};
$hxClasses["kala.objects.sprite.Sprite"] = kala_objects_sprite_Sprite;
kala_objects_sprite_Sprite.__name__ = ["kala","objects","sprite","Sprite"];
kala_objects_sprite_Sprite.__super__ = kala_objects_Object;
kala_objects_sprite_Sprite.prototype = $extend(kala_objects_Object.prototype,{
	image: null
	,frameRect: null
	,animation: null
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_Object.prototype.destroy.call(this,destroyBehaviors);
		this.image = null;
		this.frameRect = null;
		this.animation = null;
	}
	,draw: function(data,canvas) {
		this.applyDrawingData(data,canvas);
		canvas.get_g2().drawSubImage(this.image,0,0,this.frameRect.x,this.frameRect.y,this.frameRect.width,this.frameRect.height);
	}
	,isVisible: function() {
		if(kala_objects_Object.prototype.isVisible.call(this) && this.image != null && this.frameRect.width > 0) {
			return this.frameRect.height > 0;
		} else {
			return false;
		}
	}
	,loadImage: function(image,frameX,frameY,frameWidth,frameHeight) {
		this.image = image;
		if(frameX == null) {
			frameX = 0;
		}
		if(frameY == null) {
			frameY = 0;
		}
		if(frameWidth == null) {
			frameWidth = image.get_width();
		}
		if(frameHeight == null) {
			frameHeight = image.get_height();
		}
		var _this = this.frameRect;
		_this.x = frameX;
		_this.y = frameY;
		_this.width = frameWidth;
		_this.height = frameHeight;
		return this;
	}
	,loadSpriteData: function(data,image,animKey,animDelay) {
		if(animDelay == null) {
			animDelay = -1;
		}
		if(image == null) {
			image = data.image;
		}
		if(data.frames.length == 1 && animKey == null) {
			var frame = data.frames[0];
			return this.loadImage(image,frame.x,frame.y,frame.width,frame.height);
		}
		if(this.animation == null) {
			new kala_behaviors_display_SpriteAnimation().addTo(this);
		}
		if(animKey == null) {
			animKey = data.key;
		}
		this.animation.addAnimFromSpriteData(animKey,image,data,animDelay);
		return this;
	}
	,get_width: function() {
		return this.frameRect.width;
	}
	,get_height: function() {
		return this.frameRect.height;
	}
	,__class__: kala_objects_sprite_Sprite
});
var enemies_Lightning = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.bossLightning,null,null,2).animation.play();
	this.halfWidth = this.get_width() / 2;
	this.position.ox = this.scale.ox = this.halfWidth - 5;
	this.position.oy = 10;
	this.tween = new kala_behaviors_tween_Tween(this);
	this.player = states_PlayState.instance.player;
	this.playerMask = this.player.mask;
};
$hxClasses["enemies.Lightning"] = enemies_Lightning;
enemies_Lightning.__name__ = ["enemies","Lightning"];
enemies_Lightning.shoot = function(x) {
	var lightning = enemies_Boss.lightningGroup.createAlive();
	lightning.position.x = x;
	lightning.scale.x = 0;
	var _this = lightning.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
	_this1.nodes.push(kala_behaviors_tween_TweenNode.WAIT(40));
	_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
		var _this2 = G.sfxGroup;
		var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.lightning,false),_this2,false);
		channel._volume = 0.5;
		channel.channel.set_volume(_this2.muted?0:0.5 * _this2._volume);
		_this2.channels.push(channel);
	}));
	_this1.manager._tweens.push(_this1);
	_this1.nextNode();
	var _this3 = lightning.tween;
	var target1 = null;
	var ease1 = null;
	if(target1 == null) {
		target1 = _this3.object;
	}
	if(ease1 == null) {
		ease1 = kala_behaviors_tween_Ease.linear;
	}
	var _this4 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this3,null,target1,ease1,null);
	var vars = { x : kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1};
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(lightning.scale,vars,50,kala_behaviors_tween_Ease.elasticIn,null);
	task.backwardEase = null;
	_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	_this4.nodes.push(kala_behaviors_tween_TweenNode.WAIT(25));
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(lightning.scale,{ x : 0},30,kala_behaviors_tween_Ease.elasticInOut,null);
	task1.backwardEase = null;
	_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	_this4.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
		lightning.kill();
	}));
	_this4.manager._tweens.push(_this4);
	_this4.nextNode();
};
enemies_Lightning.__super__ = kala_objects_sprite_Sprite;
enemies_Lightning.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	tween: null
	,halfWidth: null
	,player: null
	,playerMask: null
	,kill: function() {
		kala_objects_sprite_Sprite.prototype.kill.call(this);
		var _this = this.tween;
		while(_this._tweens.length > 0) _this._tweens.pop().cancel();
	}
	,update: function(elapsed) {
		var absScaleX = Math.abs(this.scale.x);
		if(absScaleX > 0.5) {
			if(this.player.lives > 0 && this.player.flicker.flickersLeft == 0 && this.playerMask.absX > this.position.x - 45 * absScaleX && this.playerMask.absX < this.position.x + 45 * absScaleX) {
				this.player.getHit();
			}
			var tmp = HxOverrides.iter(player_Minion.group.members);
			while(tmp.hasNext()) {
				var minion = tmp.next();
				if(minion.alive && minion.lives > 0 && minion.position.x > this.position.x - 35 * absScaleX && minion.position.x < this.position.x + 35 * absScaleX) {
					minion.getHit();
				}
			}
		}
	}
	,__class__: enemies_Lightning
});
var kala_behaviors_IBehavior = function() { };
$hxClasses["kala.behaviors.IBehavior"] = kala_behaviors_IBehavior;
kala_behaviors_IBehavior.__name__ = ["kala","behaviors","IBehavior"];
kala_behaviors_IBehavior.prototype = {
	destroy: null
	,reset: null
	,deepReset: null
	,remove: null
	,__class__: kala_behaviors_IBehavior
};
var kala_behaviors_Behavior = function(object) {
	kala_EventHandle.call(this);
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onDestroy = handle;
	var handle1 = new kala_CallbackHandle();
	this._cbHandles.push(handle1);
	this.onReset = handle1;
	this.reset();
	if(object != null) {
		this.addTo(object);
	}
};
$hxClasses["kala.behaviors.Behavior"] = kala_behaviors_Behavior;
kala_behaviors_Behavior.__name__ = ["kala","behaviors","Behavior"];
kala_behaviors_Behavior.__interfaces__ = [kala_behaviors_IBehavior];
kala_behaviors_Behavior.__super__ = kala_EventHandle;
kala_behaviors_Behavior.prototype = $extend(kala_EventHandle.prototype,{
	object: null
	,onDestroy: null
	,onReset: null
	,reset: function() {
		var tmp = HxOverrides.iter(this.onReset._callbacks);
		while(tmp.hasNext()) tmp.next().cbFunction(this);
	}
	,destroy: function() {
		this.remove();
		this.onDestroy = null;
		this.onReset = null;
	}
	,deepReset: function() {
		this.reset();
		this.remove();
		this.clearCBHandles();
	}
	,addTo: function(object) {
		if(this.object != null) {
			this.remove();
		}
		this.object = object;
		object._behaviors.push(this);
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			HxOverrides.remove(this.object._behaviors,this);
			this.object = null;
		}
	}
	,__class__: kala_behaviors_Behavior
});
var kala_behaviors_tween_Tween = function(object) {
	this._tweens = [];
	kala_behaviors_Behavior.call(this,object);
};
$hxClasses["kala.behaviors.tween.Tween"] = kala_behaviors_tween_Tween;
kala_behaviors_tween_Tween.__name__ = ["kala","behaviors","tween","Tween"];
kala_behaviors_tween_Tween.__super__ = kala_behaviors_Behavior;
kala_behaviors_tween_Tween.prototype = $extend(kala_behaviors_Behavior.prototype,{
	_tweens: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		while(this._tweens.length > 0) this._tweens.pop().cancel();
	}
	,destroy: function() {
		kala_behaviors_Behavior.prototype.destroy.call(this);
		while(this._tweens.length > 0) this._tweens.pop().cancel();
		this._tweens = null;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		object.onPostUpdate._callbacks.push(new kala_Callback($bind(this,this.update),this));
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			this.object.onPostUpdate.removePrivateCB(this,$bind(this,this.update));
		}
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,cancel: function() {
		while(this._tweens.length > 0) this._tweens.pop().cancel();
	}
	,get: function(target,ease,onTweenUpdateCB) {
		if(target == null) {
			target = this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		return kala_behaviors_tween_TweenTimeline.pool.get().init(this,null,target,ease,onTweenUpdateCB);
	}
	,tween: function(target,vars,duration,ease,onFinishCB,onUpdateCB) {
		var _this = kala_behaviors_tween_TweenTimeline.pool.get().init(this,null,null,null,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(target,vars,duration,ease,onUpdateCB);
		task.backwardEase = null;
		_this.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		if(onFinishCB != null) {
			_this.nodes.push(kala_behaviors_tween_TweenNode.CALL(onFinishCB));
		}
		_this.manager._tweens.push(_this);
		_this.nextNode();
		return _this;
	}
	,tweenXY: function(target,x,y,duration,ease,onFinishCB,onUpdateCB) {
		var _this = kala_behaviors_tween_TweenTimeline.pool.get().init(this,null,null,null,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(target,{ x : x, y : y},duration,ease,onUpdateCB);
		task.backwardEase = null;
		_this.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		if(onFinishCB != null) {
			_this.nodes.push(kala_behaviors_tween_TweenNode.CALL(onFinishCB));
		}
		_this.manager._tweens.push(_this);
		_this.nextNode();
		return _this;
	}
	,update: function(obj,elapsed) {
		var _g = 0;
		var _g1 = this._tweens;
		while(_g < _g1.length) {
			var tween = _g1[_g];
			++_g;
			if(!tween.paused) {
				if(tween.waitTimeLeft > 0) {
					tween.waitTimeLeft -= elapsed;
				}
				if(tween.waitTimeLeft <= 0 || tween.batching) {
					var _g2 = 0;
					var _g11 = tween.children;
					while(_g2 < _g11.length) {
						var child = _g11[_g2];
						++_g2;
						child.update(elapsed);
					}
					var i = 0;
					var task;
					while(i < tween._crTweenTasks.length) {
						task = tween._crTweenTasks[i];
						task.elapsed += elapsed;
						task.percent = Math.min(task.elapsed / task.duration,1);
						var _g12 = 0;
						var _g3 = task._varNames.length;
						while(_g12 < _g3) {
							var i1 = _g12++;
							var o = task.target;
							var field = task._varNames[i1];
							var value = task._varStartValues[i1] + task._varRanges[i1] * (task.ease == null?task.percent:task.ease(task.percent));
							var tmp;
							var tmp1;
							if(o.__properties__) {
								tmp = o.__properties__["set_" + field];
								tmp1 = tmp;
							} else {
								tmp1 = false;
							}
							if(tmp1) {
								o[tmp](value);
							} else {
								o[field] = value;
							}
						}
						if(task.onUpdateCB != null) {
							task.onUpdateCB(task);
						}
						if(task.percent == 1) {
							if(!tween.batching) {
								tween._prvTweenTasks.splice(0,tween._prvTweenTasks.length);
							}
							tween._prvTweenTasks.push(task);
							tween._crTweenTasks.splice(i,1);
						} else {
							++i;
						}
					}
				}
				if(tween.waitTimeLeft <= 0 && tween._crTweenTasks.length == 0 && tween.children.length == 0) {
					tween.batching = false;
					tween.nextNode();
				}
			}
		}
	}
	,__class__: kala_behaviors_tween_Tween
});
var kala_ICallbackHandle = function() { };
$hxClasses["kala.ICallbackHandle"] = kala_ICallbackHandle;
kala_ICallbackHandle.__name__ = ["kala","ICallbackHandle"];
kala_ICallbackHandle.prototype = {
	removeAll: null
	,destroy: null
	,__class__: kala_ICallbackHandle
};
var kala_CallbackHandle = function() {
	this._callbacks = [];
};
$hxClasses["kala.CallbackHandle"] = kala_CallbackHandle;
kala_CallbackHandle.__name__ = ["kala","CallbackHandle"];
kala_CallbackHandle.__interfaces__ = [kala_ICallbackHandle];
kala_CallbackHandle.prototype = {
	_callbacks: null
	,iterator: function() {
		return HxOverrides.iter(this._callbacks);
	}
	,notify: function(callback) {
		this._callbacks.push(new kala_Callback(callback));
	}
	,remove: function(callback) {
		var i = 0;
		var _g = 0;
		var _g1 = this._callbacks;
		while(_g < _g1.length) {
			var cb = _g1[_g];
			++_g;
			if(cb.cbFunction == callback && cb.owner == null) {
				this._callbacks.splice(i,1);
				return;
			}
			++i;
		}
	}
	,notifyPrivateCB: function(owner,callback) {
		this._callbacks.push(new kala_Callback(callback,owner));
	}
	,removePrivateCB: function(owner,callback) {
		var i = 0;
		var _g = 0;
		var _g1 = this._callbacks;
		while(_g < _g1.length) {
			var cb = _g1[_g];
			++_g;
			if(cb.cbFunction == callback && cb.owner == owner) {
				this._callbacks.splice(i,1);
				return;
			}
			++i;
		}
		throw new js__$Boot_HaxeError("Incorrectly tried to remove a private callback of " + Std.string(owner) + " from object " + Std.string(this) + ".");
	}
	,removeAll: function() {
		this._callbacks.splice(0,this._callbacks.length);
	}
	,destroy: function() {
		this._callbacks = null;
	}
	,get_count: function() {
		return this._callbacks.length;
	}
	,__class__: kala_CallbackHandle
	,__properties__: {get_count:"get_count"}
};
var states_PlayState = function() {
	this.tutorialState = -1;
	var _gthis = this;
	kala_objects_group_Group.call(this);
	this.onFirstFrame._callbacks.push(new kala_Callback($bind(this,this.onStartHandle)));
	this.antialiasing = true;
	this.tween = new kala_behaviors_tween_Tween(this);
	this.background = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_1.get("background/normal.jpg"),R.images.sprite_sheet_1);
	this.add(this.background);
	this.boss = new enemies_Boss();
	this.boss.sleep();
	this.add(this.boss);
	this.add(player_Web.group);
	this.enemyGroup = new kala_objects_group_Group();
	this.enemyGroup.data = "enemies";
	this.add(this.enemyGroup);
	this.add(enemies_Gem.group);
	this.add(player_Minion.group);
	this.add(player_Bullet.minionGroup);
	this.playerGroup = new kala_objects_group_Group();
	this.add(this.playerGroup);
	this.player = player_Player.instance = new player_Player();
	this.playerGroup.add(this.player);
	this.playerGroup.add(this.player.energyBall);
	this.add(player_Bullet.mainGroup);
	this.add(player_Lightning.group);
	this.add(enemies_EnemyB.childGroup);
	this.add(enemies_EnemyD.childGroup);
	this.add(this.boss.leftThrone);
	this.add(this.boss.rightThrone);
	this.add(enemies_Boss.lightningGroup);
	this.foreground = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_1.get("background/foreground.png"),R.images.sprite_sheet_1);
	this.foreground.position.y = 495 - this.foreground.get_height();
	this.add(this.foreground);
	this.uiGroup = this.player.playStateUIGroup = new kala_objects_group_Group(true);
	this.add(this.uiGroup);
	this.livesIcon = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_2.get("heart.png"),R.images.sprite_sheet_2);
	this.livesIcon.position.y = 495 - this.livesIcon.get_height() - 4;
	this.uiGroup.add(this.livesIcon);
	this.livesText = new kala_objects_text_BasicText("X 3",null,30);
	this.livesText.position.x = this.livesIcon.position.x + this.livesIcon.get_width() + 2;
	this.livesText.position.y = this.livesIcon.position.y + 7;
	this.uiGroup.add(this.livesText);
	this.gemIcon = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_2.get("crystal_icon.png"),R.images.sprite_sheet_2);
	this.gemIcon.position.x = 150;
	this.gemIcon.position.y = this.livesIcon.position.y - 16;
	this.uiGroup.add(this.gemIcon);
	this.gemText = enemies_Gem.gemText = new kala_objects_text_BasicText("X 3",null,30);
	this.gemText.position.x = this.gemIcon.position.x + this.gemIcon.get_width() + 2;
	this.gemText.position.y = this.livesText.position.y;
	this.uiGroup.add(this.gemText);
	this.chargingProcessText = this.player.chargingProcessText = new kala_objects_text_BasicText(null,null,30);
	this.chargingProcessText.position.y = 460;
	this.add(this.chargingProcessText);
	this.tutorialText = new kala_objects_text_Text(null,null,24,700);
	this.tutorialText.align = kala_objects_text_TextAlign.CENTER;
	var this1 = this.tutorialText.padding;
	this1.x = 30;
	this1.y = 10;
	this.tutorialText.bgColor = -16777216;
	this.tutorialText.bgOpacity = 0.5;
	this.tutorialText.position.y = 90;
	this.tutorialText.onPostUpdate._callbacks.push(new kala_Callback($bind(this,this.tutorialUpdate)));
	this.add(this.tutorialText);
	this.tutorialFinger = new kala_objects_sprite_Sprite();
	this.tutorialFinger.loadSpriteData(R.sheets.sprite_sheet_2.get("fingerprint.png",R.images.sprite_sheet_2));
	this.tutorialFinger.position.y = 300;
	this.add(this.tutorialFinger);
	this.tutorialFingerTween = new kala_behaviors_tween_Tween(this.tutorialFinger);
	var _this = this.tutorialFingerTween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
	var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
	timeline.init(_this1.manager,_this1,null,null,null);
	timeline.loopsLeft = 0 - 1;
	_this1.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(this.tutorialFinger,{ opacity : 0},45,kala_behaviors_tween_Ease.sineInOut,null);
	task.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(this.tutorialFinger,{ opacity : 1},45,kala_behaviors_tween_Ease.sineInOut,null);
	task1.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	timeline.nodes.push(kala_behaviors_tween_TweenNode.WAIT(60));
	var _this2 = timeline.parent;
	_this2.manager._tweens.push(_this2);
	_this2.nextNode();
	this.backButton = new kala_objects_sprite_BasicButtonSprite();
	this.backButton.loadSpriteData(R.sheets.sprite_sheet_2.get("back_button.png",R.images.sprite_sheet_2));
	this.backButton.position.x = 700 - this.backButton.get_width() - 5;
	this.backButton.position.y = 7;
	var _this3 = this.backButton.collider;
	var width = _this3.object.get_width();
	var height = _this3.object.get_height();
	var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
	rect.reset();
	var _this4 = rect.position;
	_this4.x = 0;
	_this4.y = 0;
	rect.width = width;
	rect.height = height;
	_this3._shapes.push(rect);
	var _this5 = rect.position;
	var x = (_this3.object.get_width() - rect.width) / 2;
	var y = (_this3.object.get_height() - rect.height) / 2;
	_this5.x = x;
	_this5.y = y;
	this.backButton.onOver._callbacks.push(new kala_Callback(function(_) {
		_gthis.backButton.opacity = 1;
	}));
	this.backButton.onOut._callbacks.push(new kala_Callback(function(_1) {
		_gthis.backButton.opacity = 0.6;
	}));
	this.backButton.onPush._callbacks.push(new kala_Callback(function(_2,_3) {
		_gthis.goTo(states_UpgradeState.instance);
	}));
	this.backButton.kill();
	this.add(this.backButton);
	this.blurOverlay = new kala_objects_sprite_Sprite(R.images.background_blur);
	this.add(this.blurOverlay);
	enemies_Gem.playerPos = this.player.position;
};
$hxClasses["states.PlayState"] = states_PlayState;
states_PlayState.__name__ = ["states","PlayState"];
states_PlayState.__super__ = kala_objects_group_Group;
states_PlayState.prototype = $extend(kala_objects_group_Group.prototype,{
	tween: null
	,background: null
	,foreground: null
	,blurOverlay: null
	,backButton: null
	,playerGroup: null
	,player: null
	,boss: null
	,enemyGroup: null
	,uiGroup: null
	,livesIcon: null
	,livesText: null
	,gemIcon: null
	,gemText: null
	,chargingProcessText: null
	,tutorialState: null
	,tutorialText: null
	,tutorialFinger: null
	,tutorialFingerTween: null
	,closing: null
	,maxOnScreenEnemy: null
	,onScreenEnemyCount: null
	,framesLeftUntilBoss: null
	,killsLeftUntilBoss: null
	,update: function(elapsed) {
		kala_objects_group_Group.prototype.update.call(this,elapsed);
		if(this.tutorialState == -1) {
			if(this.framesLeftUntilBoss > 0 || this.killsLeftUntilBoss > 0) {
				if(this.boss.alive) {
					if(this.maxOnScreenEnemy - this.onScreenEnemyCount >= 3) {
						switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,3)) {
						case 0:
							var size = kala_math__$Random_Random_$Impl_$.instance.GetIn(1,3);
							if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50) {
								var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy = enemies_EnemyA.pool.get();
								enemy.revive();
								if(enemy.splitting) {
									enemy.position.oy = enemy.scale.oy = enemy.originY;
								} else {
									enemy.baseScale = size / 4 + 0.25;
									enemy.position.oy = enemy.scale.oy = (enemy.sprite.get_height() - 90) * enemy.baseScale;
								}
								var _this = enemy.scale;
								var x = enemy.baseScale;
								var y1 = enemy.baseScale;
								_this.x = x;
								_this.y = y1;
								enemy.mask.radius = enemy.baseRadius * enemy.baseScale;
								enemy.hspeed = 2 * enemy.baseScale + 2;
								var tmp;
								switch(size) {
								case 1:
									tmp = 25;
									break;
								case 2:
									tmp = 50;
									break;
								case 3:
									tmp = 100;
									break;
								default:
									tmp = 0;
								}
								enemy.set_hp(tmp);
								enemy.size = size;
								var _this1 = enemy.position;
								_this1.x = -140;
								_this1.y = y;
							} else {
								var y2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy1 = enemies_EnemyA.pool.get();
								enemy1.revive();
								if(enemy1.splitting) {
									enemy1.position.oy = enemy1.scale.oy = enemy1.originY;
								} else {
									enemy1.baseScale = size / 4 + 0.25;
									enemy1.position.oy = enemy1.scale.oy = (enemy1.sprite.get_height() - 90) * enemy1.baseScale;
								}
								var _this2 = enemy1.scale;
								var x1 = enemy1.baseScale;
								var y3 = enemy1.baseScale;
								_this2.x = x1;
								_this2.y = y3;
								enemy1.mask.radius = enemy1.baseRadius * enemy1.baseScale;
								enemy1.hspeed = 2 * enemy1.baseScale + 2;
								var tmp1;
								switch(size) {
								case 1:
									tmp1 = 25;
									break;
								case 2:
									tmp1 = 50;
									break;
								case 3:
									tmp1 = 100;
									break;
								default:
									tmp1 = 0;
								}
								enemy1.set_hp(tmp1);
								enemy1.size = size;
								var _this3 = enemy1.position;
								_this3.x = 840;
								_this3.y = y2;
							}
							break;
						case 1:
							switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
							case 0:
								var y4 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy2 = enemies_EnemyB.pool.get();
								enemy2.revive();
								var _this4 = enemy2.position;
								_this4.x = -60;
								_this4.y = y4;
								var _this5 = enemy2.scale;
								_this5.x = 1;
								_this5.y = 1;
								enemy2.set_hp(200);
								enemy2.bodyAtkOn = false;
								enemy2.isSubEnemy = false;
								var actionCB = function() {
									var _this6 = G.sfxGroup;
									var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this6,false);
									channel._volume = 0.4;
									channel.channel.set_volume(_this6.muted?0:0.4 * _this6._volume);
									_this6.channels.push(channel);
									var _g = 0;
									while(_g < 6) {
										var angle = 60 * _g++;
										var child = enemies_EnemyB.childGroup.createAlive();
										var x2 = enemy2.position.x;
										var y5 = enemy2.position.y;
										var _this7 = child.position;
										_this7.x = x2;
										_this7.y = y5;
										child.set_hp(20);
										var _this8 = child.motion.velocity;
										var rad = angle * kala_math_Mathf.CONST_RAD;
										var tmp2;
										if(_this8._speedUpdated) {
											tmp2 = _this8._speed;
										} else {
											_this8._speedUpdated = true;
											var tmp3 = _this8._x;
											var deg;
											if(_this8._angleUpdated) {
												deg = _this8._angle;
											} else {
												_this8._angleUpdated = true;
												deg = _this8._angle = Math.atan2(_this8._y,_this8._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp2 = _this8._speed = tmp3 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
										}
										_this8._x = tmp2 * Math.cos(rad);
										var tmp4;
										if(_this8._speedUpdated) {
											tmp4 = _this8._speed;
										} else {
											_this8._speedUpdated = true;
											var tmp5 = _this8._x;
											var deg1;
											if(_this8._angleUpdated) {
												deg1 = _this8._angle;
											} else {
												_this8._angleUpdated = true;
												deg1 = _this8._angle = Math.atan2(_this8._y,_this8._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp4 = _this8._speed = tmp5 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
										}
										_this8._y = tmp4 * Math.sin(rad);
										_this8._angleUpdated = true;
										_this8._angle = angle;
										var deg2;
										if(_this8._angleUpdated) {
											deg2 = _this8._angle;
										} else {
											_this8._angleUpdated = true;
											deg2 = _this8._angle = Math.atan2(_this8._y,_this8._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
										_this8._x = 5 * Math.cos(rad1);
										_this8._y = 5 * Math.sin(rad1);
										_this8._speedUpdated = true;
										_this8._speed = 5;
										child.motion.turnSpeed = 0;
										child.bodyAtkOn = true;
										child.isSubEnemy = true;
									}
								};
								var _gthis = enemy2;
								var value = enemy2.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x3 = Math.max(enemy2.halfWidth,Math.min(700 - enemy2.halfWidth,value));
								var value1 = enemy2.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y6 = Math.max(enemy2.halfHeight,Math.min(200,value1));
								var x11 = enemy2.position.x;
								var y11 = enemy2.position.y;
								var t = Math.sqrt((x11 - x3) * (x11 - x3) + (y11 - y6) * (y11 - y6)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this9 = enemy2.tween;
								var target = null;
								var ease = null;
								if(target == null) {
									target = _this9.object;
								}
								if(ease == null) {
									ease = kala_behaviors_tween_Ease.linear;
								}
								enemy2.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this9,null,target,ease,null);
								var _this10 = enemy2.moveRandomTimeline;
								var task = kala_behaviors_tween_TweenTask.create();
								task.init(enemy2,{ x : x3, y : y6},t,kala_behaviors_tween_Ease.sineInOut,null);
								task.backwardEase = null;
								_this10.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
								_this10.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
									actionCB();
								}));
								_this10.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this10.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
									_gthis.moveRandom(actionCB);
								}));
								_this10.manager._tweens.push(_this10);
								_this10.nextNode();
								break;
							case 1:
								var y7 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy3 = enemies_EnemyB.pool.get();
								enemy3.revive();
								var _this11 = enemy3.position;
								_this11.x = 760;
								_this11.y = y7;
								var _this12 = enemy3.scale;
								_this12.x = 1;
								_this12.y = 1;
								enemy3.set_hp(200);
								enemy3.bodyAtkOn = false;
								enemy3.isSubEnemy = false;
								var actionCB1 = function() {
									var _this13 = G.sfxGroup;
									var channel1 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this13,false);
									channel1._volume = 0.4;
									channel1.channel.set_volume(_this13.muted?0:0.4 * _this13._volume);
									_this13.channels.push(channel1);
									var _g1 = 0;
									while(_g1 < 6) {
										var angle1 = 60 * _g1++;
										var child1 = enemies_EnemyB.childGroup.createAlive();
										var x4 = enemy3.position.x;
										var y8 = enemy3.position.y;
										var _this14 = child1.position;
										_this14.x = x4;
										_this14.y = y8;
										child1.set_hp(20);
										var _this15 = child1.motion.velocity;
										var rad2 = angle1 * kala_math_Mathf.CONST_RAD;
										var tmp6;
										if(_this15._speedUpdated) {
											tmp6 = _this15._speed;
										} else {
											_this15._speedUpdated = true;
											var tmp7 = _this15._x;
											var deg3;
											if(_this15._angleUpdated) {
												deg3 = _this15._angle;
											} else {
												_this15._angleUpdated = true;
												deg3 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp6 = _this15._speed = tmp7 / Math.cos(deg3 * kala_math_Mathf.CONST_RAD);
										}
										_this15._x = tmp6 * Math.cos(rad2);
										var tmp8;
										if(_this15._speedUpdated) {
											tmp8 = _this15._speed;
										} else {
											_this15._speedUpdated = true;
											var tmp9 = _this15._x;
											var deg4;
											if(_this15._angleUpdated) {
												deg4 = _this15._angle;
											} else {
												_this15._angleUpdated = true;
												deg4 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp8 = _this15._speed = tmp9 / Math.cos(deg4 * kala_math_Mathf.CONST_RAD);
										}
										_this15._y = tmp8 * Math.sin(rad2);
										_this15._angleUpdated = true;
										_this15._angle = angle1;
										var deg5;
										if(_this15._angleUpdated) {
											deg5 = _this15._angle;
										} else {
											_this15._angleUpdated = true;
											deg5 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad3 = deg5 * kala_math_Mathf.CONST_RAD;
										_this15._x = 5 * Math.cos(rad3);
										_this15._y = 5 * Math.sin(rad3);
										_this15._speedUpdated = true;
										_this15._speed = 5;
										child1.motion.turnSpeed = 0;
										child1.bodyAtkOn = true;
										child1.isSubEnemy = true;
									}
								};
								var _gthis1 = enemy3;
								var value2 = enemy3.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x5 = Math.max(enemy3.halfWidth,Math.min(700 - enemy3.halfWidth,value2));
								var value3 = enemy3.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y9 = Math.max(enemy3.halfHeight,Math.min(200,value3));
								var x12 = enemy3.position.x;
								var y12 = enemy3.position.y;
								var t1 = Math.sqrt((x12 - x5) * (x12 - x5) + (y12 - y9) * (y12 - y9)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this16 = enemy3.tween;
								var target1 = null;
								var ease1 = null;
								if(target1 == null) {
									target1 = _this16.object;
								}
								if(ease1 == null) {
									ease1 = kala_behaviors_tween_Ease.linear;
								}
								enemy3.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this16,null,target1,ease1,null);
								var _this17 = enemy3.moveRandomTimeline;
								var task1 = kala_behaviors_tween_TweenTask.create();
								task1.init(enemy3,{ x : x5, y : y9},t1,kala_behaviors_tween_Ease.sineInOut,null);
								task1.backwardEase = null;
								_this17.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
								_this17.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
									actionCB1();
								}));
								_this17.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this17.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_3) {
									_gthis1.moveRandom(actionCB1);
								}));
								_this17.manager._tweens.push(_this17);
								_this17.nextNode();
								break;
							case 2:
								var x6 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy4 = enemies_EnemyB.pool.get();
								enemy4.revive();
								var _this18 = enemy4.position;
								_this18.x = x6;
								_this18.y = -60;
								var _this19 = enemy4.scale;
								_this19.x = 1;
								_this19.y = 1;
								enemy4.set_hp(200);
								enemy4.bodyAtkOn = false;
								enemy4.isSubEnemy = false;
								var actionCB2 = function() {
									var _this20 = G.sfxGroup;
									var channel2 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this20,false);
									channel2._volume = 0.4;
									channel2.channel.set_volume(_this20.muted?0:0.4 * _this20._volume);
									_this20.channels.push(channel2);
									var _g2 = 0;
									while(_g2 < 6) {
										var angle2 = 60 * _g2++;
										var child2 = enemies_EnemyB.childGroup.createAlive();
										var x7 = enemy4.position.x;
										var y10 = enemy4.position.y;
										var _this21 = child2.position;
										_this21.x = x7;
										_this21.y = y10;
										child2.set_hp(20);
										var _this22 = child2.motion.velocity;
										var rad4 = angle2 * kala_math_Mathf.CONST_RAD;
										var tmp10;
										if(_this22._speedUpdated) {
											tmp10 = _this22._speed;
										} else {
											_this22._speedUpdated = true;
											var tmp11 = _this22._x;
											var deg6;
											if(_this22._angleUpdated) {
												deg6 = _this22._angle;
											} else {
												_this22._angleUpdated = true;
												deg6 = _this22._angle = Math.atan2(_this22._y,_this22._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp10 = _this22._speed = tmp11 / Math.cos(deg6 * kala_math_Mathf.CONST_RAD);
										}
										_this22._x = tmp10 * Math.cos(rad4);
										var tmp12;
										if(_this22._speedUpdated) {
											tmp12 = _this22._speed;
										} else {
											_this22._speedUpdated = true;
											var tmp13 = _this22._x;
											var deg7;
											if(_this22._angleUpdated) {
												deg7 = _this22._angle;
											} else {
												_this22._angleUpdated = true;
												deg7 = _this22._angle = Math.atan2(_this22._y,_this22._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp12 = _this22._speed = tmp13 / Math.cos(deg7 * kala_math_Mathf.CONST_RAD);
										}
										_this22._y = tmp12 * Math.sin(rad4);
										_this22._angleUpdated = true;
										_this22._angle = angle2;
										var deg8;
										if(_this22._angleUpdated) {
											deg8 = _this22._angle;
										} else {
											_this22._angleUpdated = true;
											deg8 = _this22._angle = Math.atan2(_this22._y,_this22._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad5 = deg8 * kala_math_Mathf.CONST_RAD;
										_this22._x = 5 * Math.cos(rad5);
										_this22._y = 5 * Math.sin(rad5);
										_this22._speedUpdated = true;
										_this22._speed = 5;
										child2.motion.turnSpeed = 0;
										child2.bodyAtkOn = true;
										child2.isSubEnemy = true;
									}
								};
								var _gthis2 = enemy4;
								var value4 = enemy4.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x8 = Math.max(enemy4.halfWidth,Math.min(700 - enemy4.halfWidth,value4));
								var value5 = enemy4.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y13 = Math.max(enemy4.halfHeight,Math.min(200,value5));
								var x13 = enemy4.position.x;
								var y14 = enemy4.position.y;
								var t2 = Math.sqrt((x13 - x8) * (x13 - x8) + (y14 - y13) * (y14 - y13)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this23 = enemy4.tween;
								var target2 = null;
								var ease2 = null;
								if(target2 == null) {
									target2 = _this23.object;
								}
								if(ease2 == null) {
									ease2 = kala_behaviors_tween_Ease.linear;
								}
								enemy4.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this23,null,target2,ease2,null);
								var _this24 = enemy4.moveRandomTimeline;
								var task2 = kala_behaviors_tween_TweenTask.create();
								task2.init(enemy4,{ x : x8, y : y13},t2,kala_behaviors_tween_Ease.sineInOut,null);
								task2.backwardEase = null;
								_this24.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
								_this24.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_4) {
									actionCB2();
								}));
								_this24.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this24.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_5) {
									_gthis2.moveRandom(actionCB2);
								}));
								_this24.manager._tweens.push(_this24);
								_this24.nextNode();
								break;
							}
							break;
						case 2:
							var size1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(1,3);
							switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
							case 0:
								var y15 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy5 = enemies_EnemyC.pool.get();
								enemy5.revive();
								enemy5.baseScale = size1 / 4 + 0.25;
								var _this25 = enemy5.scale;
								var x9 = enemy5.baseScale;
								var y16 = enemy5.baseScale;
								_this25.x = x9;
								_this25.y = y16;
								enemy5.mask.radius = 40 * enemy5.baseScale;
								enemy5.maxHSpeed = 3 * enemy5.baseScale;
								if(enemy5.position.x < 350.) {
									if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
										enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy5.maxHSpeed);
									} else {
										enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy5.maxHSpeed,0);
									}
								} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
									enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy5.maxHSpeed,0);
								} else {
									enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy5.maxHSpeed);
								}
								enemy5.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
								enemy5.flapPower = 6 * enemy5.baseScale;
								enemy5.vaccel = 0.5 * enemy5.baseScale;
								enemy5.flipSpeed = 0.2 * enemy5.baseScale;
								var tmp14;
								switch(size1) {
								case 1:
									tmp14 = 50;
									break;
								case 2:
									tmp14 = 100;
									break;
								case 3:
									tmp14 = 150;
									break;
								default:
									tmp14 = 0;
								}
								enemy5.set_hp(tmp14);
								enemy5.size = size1;
								var _this26 = enemy5.position;
								_this26.x = -120;
								_this26.y = y15;
								break;
							case 1:
								var y17 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy6 = enemies_EnemyC.pool.get();
								enemy6.revive();
								enemy6.baseScale = size1 / 4 + 0.25;
								var _this27 = enemy6.scale;
								var x10 = enemy6.baseScale;
								var y18 = enemy6.baseScale;
								_this27.x = x10;
								_this27.y = y18;
								enemy6.mask.radius = 40 * enemy6.baseScale;
								enemy6.maxHSpeed = 3 * enemy6.baseScale;
								if(enemy6.position.x < 350.) {
									if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
										enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy6.maxHSpeed);
									} else {
										enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy6.maxHSpeed,0);
									}
								} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
									enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy6.maxHSpeed,0);
								} else {
									enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy6.maxHSpeed);
								}
								enemy6.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
								enemy6.flapPower = 6 * enemy6.baseScale;
								enemy6.vaccel = 0.5 * enemy6.baseScale;
								enemy6.flipSpeed = 0.2 * enemy6.baseScale;
								var tmp15;
								switch(size1) {
								case 1:
									tmp15 = 50;
									break;
								case 2:
									tmp15 = 100;
									break;
								case 3:
									tmp15 = 150;
									break;
								default:
									tmp15 = 0;
								}
								enemy6.set_hp(tmp15);
								enemy6.size = size1;
								var _this28 = enemy6.position;
								_this28.x = 820;
								_this28.y = y17;
								break;
							case 2:
								var x14 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy7 = enemies_EnemyC.pool.get();
								enemy7.revive();
								enemy7.baseScale = size1 / 4 + 0.25;
								var _this29 = enemy7.scale;
								var x15 = enemy7.baseScale;
								var y19 = enemy7.baseScale;
								_this29.x = x15;
								_this29.y = y19;
								enemy7.mask.radius = 40 * enemy7.baseScale;
								enemy7.maxHSpeed = 3 * enemy7.baseScale;
								if(enemy7.position.x < 350.) {
									if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
										enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy7.maxHSpeed);
									} else {
										enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy7.maxHSpeed,0);
									}
								} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
									enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy7.maxHSpeed,0);
								} else {
									enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy7.maxHSpeed);
								}
								enemy7.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
								enemy7.flapPower = 6 * enemy7.baseScale;
								enemy7.vaccel = 0.5 * enemy7.baseScale;
								enemy7.flipSpeed = 0.2 * enemy7.baseScale;
								var tmp16;
								switch(size1) {
								case 1:
									tmp16 = 50;
									break;
								case 2:
									tmp16 = 100;
									break;
								case 3:
									tmp16 = 150;
									break;
								default:
									tmp16 = 0;
								}
								enemy7.set_hp(tmp16);
								enemy7.size = size1;
								var _this30 = enemy7.position;
								_this30.x = x14;
								_this30.y = -120;
								break;
							}
							break;
						case 3:
							switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
							case 0:
								var y20 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy8 = enemies_EnemyD.pool.get();
								enemy8.revive();
								var _this31 = enemy8.position;
								_this31.x = -60;
								_this31.y = y20;
								enemy8.set_hp(150);
								var actionCB3 = function() {
									var n = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
									var _this32 = G.sfxGroup;
									var volume = n / 15;
									var channel3 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this32,false);
									channel3._volume = volume;
									channel3.channel.set_volume(_this32.muted?0:volume * _this32._volume);
									_this32.channels.push(channel3);
									var _g11 = 0;
									while(_g11 < n) {
										++_g11;
										var child3 = enemies_EnemyD.childGroup.createAlive();
										var x16 = enemy8.position.x;
										var y21 = enemy8.position.y + enemy8.sprite.position.y;
										var _this33 = child3.position;
										_this33.x = x16;
										_this33.y = y21;
										var _this34 = child3.motion.velocity;
										var angle3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
										var speed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
										var rad6 = angle3 * kala_math_Mathf.CONST_RAD;
										var tmp17;
										if(_this34._speedUpdated) {
											tmp17 = _this34._speed;
										} else {
											_this34._speedUpdated = true;
											var tmp18 = _this34._x;
											var deg9;
											if(_this34._angleUpdated) {
												deg9 = _this34._angle;
											} else {
												_this34._angleUpdated = true;
												deg9 = _this34._angle = Math.atan2(_this34._y,_this34._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp17 = _this34._speed = tmp18 / Math.cos(deg9 * kala_math_Mathf.CONST_RAD);
										}
										_this34._x = tmp17 * Math.cos(rad6);
										var tmp19;
										if(_this34._speedUpdated) {
											tmp19 = _this34._speed;
										} else {
											_this34._speedUpdated = true;
											var tmp20 = _this34._x;
											var deg10;
											if(_this34._angleUpdated) {
												deg10 = _this34._angle;
											} else {
												_this34._angleUpdated = true;
												deg10 = _this34._angle = Math.atan2(_this34._y,_this34._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp19 = _this34._speed = tmp20 / Math.cos(deg10 * kala_math_Mathf.CONST_RAD);
										}
										_this34._y = tmp19 * Math.sin(rad6);
										_this34._angleUpdated = true;
										_this34._angle = angle3;
										var deg11;
										if(_this34._angleUpdated) {
											deg11 = _this34._angle;
										} else {
											_this34._angleUpdated = true;
											deg11 = _this34._angle = Math.atan2(_this34._y,_this34._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad7 = deg11 * kala_math_Mathf.CONST_RAD;
										_this34._x = speed * Math.cos(rad7);
										_this34._y = speed * Math.sin(rad7);
										_this34._speedUpdated = true;
										_this34._speed = speed;
										child3.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
										child3.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
										child3.opacity = 0;
										child3.set_hp(9);
									}
								};
								var _gthis3 = enemy8;
								var value6 = enemy8.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x17 = Math.max(enemy8.halfWidth,Math.min(700 - enemy8.halfWidth,value6));
								var value7 = enemy8.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y22 = Math.max(enemy8.halfHeight,Math.min(200,value7));
								var x18 = enemy8.position.x;
								var y110 = enemy8.position.y;
								var t3 = Math.sqrt((x18 - x17) * (x18 - x17) + (y110 - y22) * (y110 - y22)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this35 = enemy8.tween;
								var target3 = null;
								var ease3 = null;
								if(target3 == null) {
									target3 = _this35.object;
								}
								if(ease3 == null) {
									ease3 = kala_behaviors_tween_Ease.linear;
								}
								enemy8.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this35,null,target3,ease3,null);
								var _this36 = enemy8.moveRandomTimeline;
								var task3 = kala_behaviors_tween_TweenTask.create();
								task3.init(enemy8,{ x : x17, y : y22},t3,kala_behaviors_tween_Ease.sineInOut,null);
								task3.backwardEase = null;
								_this36.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
								_this36.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_6) {
									actionCB3();
								}));
								_this36.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this36.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_7) {
									_gthis3.moveRandom(actionCB3);
								}));
								_this36.manager._tweens.push(_this36);
								_this36.nextNode();
								break;
							case 1:
								var y23 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy9 = enemies_EnemyD.pool.get();
								enemy9.revive();
								var _this37 = enemy9.position;
								_this37.x = 760;
								_this37.y = y23;
								enemy9.set_hp(150);
								var actionCB4 = function() {
									var n1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
									var _this38 = G.sfxGroup;
									var volume1 = n1 / 15;
									var channel4 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this38,false);
									channel4._volume = volume1;
									channel4.channel.set_volume(_this38.muted?0:volume1 * _this38._volume);
									_this38.channels.push(channel4);
									var _g12 = 0;
									while(_g12 < n1) {
										++_g12;
										var child4 = enemies_EnemyD.childGroup.createAlive();
										var x19 = enemy9.position.x;
										var y24 = enemy9.position.y + enemy9.sprite.position.y;
										var _this39 = child4.position;
										_this39.x = x19;
										_this39.y = y24;
										var _this40 = child4.motion.velocity;
										var angle4 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
										var speed1 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
										var rad8 = angle4 * kala_math_Mathf.CONST_RAD;
										var tmp21;
										if(_this40._speedUpdated) {
											tmp21 = _this40._speed;
										} else {
											_this40._speedUpdated = true;
											var tmp22 = _this40._x;
											var deg12;
											if(_this40._angleUpdated) {
												deg12 = _this40._angle;
											} else {
												_this40._angleUpdated = true;
												deg12 = _this40._angle = Math.atan2(_this40._y,_this40._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp21 = _this40._speed = tmp22 / Math.cos(deg12 * kala_math_Mathf.CONST_RAD);
										}
										_this40._x = tmp21 * Math.cos(rad8);
										var tmp23;
										if(_this40._speedUpdated) {
											tmp23 = _this40._speed;
										} else {
											_this40._speedUpdated = true;
											var tmp24 = _this40._x;
											var deg13;
											if(_this40._angleUpdated) {
												deg13 = _this40._angle;
											} else {
												_this40._angleUpdated = true;
												deg13 = _this40._angle = Math.atan2(_this40._y,_this40._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp23 = _this40._speed = tmp24 / Math.cos(deg13 * kala_math_Mathf.CONST_RAD);
										}
										_this40._y = tmp23 * Math.sin(rad8);
										_this40._angleUpdated = true;
										_this40._angle = angle4;
										var deg14;
										if(_this40._angleUpdated) {
											deg14 = _this40._angle;
										} else {
											_this40._angleUpdated = true;
											deg14 = _this40._angle = Math.atan2(_this40._y,_this40._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad9 = deg14 * kala_math_Mathf.CONST_RAD;
										_this40._x = speed1 * Math.cos(rad9);
										_this40._y = speed1 * Math.sin(rad9);
										_this40._speedUpdated = true;
										_this40._speed = speed1;
										child4.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
										child4.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
										child4.opacity = 0;
										child4.set_hp(9);
									}
								};
								var _gthis4 = enemy9;
								var value8 = enemy9.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x20 = Math.max(enemy9.halfWidth,Math.min(700 - enemy9.halfWidth,value8));
								var value9 = enemy9.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y25 = Math.max(enemy9.halfHeight,Math.min(200,value9));
								var x110 = enemy9.position.x;
								var y111 = enemy9.position.y;
								var t4 = Math.sqrt((x110 - x20) * (x110 - x20) + (y111 - y25) * (y111 - y25)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this41 = enemy9.tween;
								var target4 = null;
								var ease4 = null;
								if(target4 == null) {
									target4 = _this41.object;
								}
								if(ease4 == null) {
									ease4 = kala_behaviors_tween_Ease.linear;
								}
								enemy9.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this41,null,target4,ease4,null);
								var _this42 = enemy9.moveRandomTimeline;
								var task4 = kala_behaviors_tween_TweenTask.create();
								task4.init(enemy9,{ x : x20, y : y25},t4,kala_behaviors_tween_Ease.sineInOut,null);
								task4.backwardEase = null;
								_this42.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task4));
								_this42.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_8) {
									actionCB4();
								}));
								_this42.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this42.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_9) {
									_gthis4.moveRandom(actionCB4);
								}));
								_this42.manager._tweens.push(_this42);
								_this42.nextNode();
								break;
							case 2:
								var x21 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy10 = enemies_EnemyD.pool.get();
								enemy10.revive();
								var _this43 = enemy10.position;
								_this43.x = x21;
								_this43.y = -160;
								enemy10.set_hp(150);
								var actionCB5 = function() {
									var n2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
									var _this44 = G.sfxGroup;
									var volume2 = n2 / 15;
									var channel5 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this44,false);
									channel5._volume = volume2;
									channel5.channel.set_volume(_this44.muted?0:volume2 * _this44._volume);
									_this44.channels.push(channel5);
									var _g13 = 0;
									while(_g13 < n2) {
										++_g13;
										var child5 = enemies_EnemyD.childGroup.createAlive();
										var x22 = enemy10.position.x;
										var y26 = enemy10.position.y + enemy10.sprite.position.y;
										var _this45 = child5.position;
										_this45.x = x22;
										_this45.y = y26;
										var _this46 = child5.motion.velocity;
										var angle5 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
										var speed2 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
										var rad10 = angle5 * kala_math_Mathf.CONST_RAD;
										var tmp25;
										if(_this46._speedUpdated) {
											tmp25 = _this46._speed;
										} else {
											_this46._speedUpdated = true;
											var tmp26 = _this46._x;
											var deg15;
											if(_this46._angleUpdated) {
												deg15 = _this46._angle;
											} else {
												_this46._angleUpdated = true;
												deg15 = _this46._angle = Math.atan2(_this46._y,_this46._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp25 = _this46._speed = tmp26 / Math.cos(deg15 * kala_math_Mathf.CONST_RAD);
										}
										_this46._x = tmp25 * Math.cos(rad10);
										var tmp27;
										if(_this46._speedUpdated) {
											tmp27 = _this46._speed;
										} else {
											_this46._speedUpdated = true;
											var tmp28 = _this46._x;
											var deg16;
											if(_this46._angleUpdated) {
												deg16 = _this46._angle;
											} else {
												_this46._angleUpdated = true;
												deg16 = _this46._angle = Math.atan2(_this46._y,_this46._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp27 = _this46._speed = tmp28 / Math.cos(deg16 * kala_math_Mathf.CONST_RAD);
										}
										_this46._y = tmp27 * Math.sin(rad10);
										_this46._angleUpdated = true;
										_this46._angle = angle5;
										var deg17;
										if(_this46._angleUpdated) {
											deg17 = _this46._angle;
										} else {
											_this46._angleUpdated = true;
											deg17 = _this46._angle = Math.atan2(_this46._y,_this46._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad11 = deg17 * kala_math_Mathf.CONST_RAD;
										_this46._x = speed2 * Math.cos(rad11);
										_this46._y = speed2 * Math.sin(rad11);
										_this46._speedUpdated = true;
										_this46._speed = speed2;
										child5.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
										child5.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
										child5.opacity = 0;
										child5.set_hp(9);
									}
								};
								var _gthis5 = enemy10;
								var value10 = enemy10.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x23 = Math.max(enemy10.halfWidth,Math.min(700 - enemy10.halfWidth,value10));
								var value11 = enemy10.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y27 = Math.max(enemy10.halfHeight,Math.min(200,value11));
								var x111 = enemy10.position.x;
								var y112 = enemy10.position.y;
								var t5 = Math.sqrt((x111 - x23) * (x111 - x23) + (y112 - y27) * (y112 - y27)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this47 = enemy10.tween;
								var target5 = null;
								var ease5 = null;
								if(target5 == null) {
									target5 = _this47.object;
								}
								if(ease5 == null) {
									ease5 = kala_behaviors_tween_Ease.linear;
								}
								enemy10.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this47,null,target5,ease5,null);
								var _this48 = enemy10.moveRandomTimeline;
								var task5 = kala_behaviors_tween_TweenTask.create();
								task5.init(enemy10,{ x : x23, y : y27},t5,kala_behaviors_tween_Ease.sineInOut,null);
								task5.backwardEase = null;
								_this48.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task5));
								_this48.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_10) {
									actionCB5();
								}));
								_this48.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this48.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_11) {
									_gthis5.moveRandom(actionCB5);
								}));
								_this48.manager._tweens.push(_this48);
								_this48.nextNode();
								break;
							}
							break;
						}
					}
				} else {
					this.framesLeftUntilBoss--;
					if(this.maxOnScreenEnemy - this.onScreenEnemyCount >= 1) {
						switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,3)) {
						case 0:
							var size2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(1,3);
							if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50) {
								var y28 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy11 = enemies_EnemyA.pool.get();
								enemy11.revive();
								if(enemy11.splitting) {
									enemy11.position.oy = enemy11.scale.oy = enemy11.originY;
								} else {
									enemy11.baseScale = size2 / 4 + 0.25;
									enemy11.position.oy = enemy11.scale.oy = (enemy11.sprite.get_height() - 90) * enemy11.baseScale;
								}
								var _this49 = enemy11.scale;
								var x24 = enemy11.baseScale;
								var y29 = enemy11.baseScale;
								_this49.x = x24;
								_this49.y = y29;
								enemy11.mask.radius = enemy11.baseRadius * enemy11.baseScale;
								enemy11.hspeed = 2 * enemy11.baseScale + 2;
								var tmp29;
								switch(size2) {
								case 1:
									tmp29 = 25;
									break;
								case 2:
									tmp29 = 50;
									break;
								case 3:
									tmp29 = 100;
									break;
								default:
									tmp29 = 0;
								}
								enemy11.set_hp(tmp29);
								enemy11.size = size2;
								var _this50 = enemy11.position;
								_this50.x = -140;
								_this50.y = y28;
							} else {
								var y30 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy12 = enemies_EnemyA.pool.get();
								enemy12.revive();
								if(enemy12.splitting) {
									enemy12.position.oy = enemy12.scale.oy = enemy12.originY;
								} else {
									enemy12.baseScale = size2 / 4 + 0.25;
									enemy12.position.oy = enemy12.scale.oy = (enemy12.sprite.get_height() - 90) * enemy12.baseScale;
								}
								var _this51 = enemy12.scale;
								var x25 = enemy12.baseScale;
								var y31 = enemy12.baseScale;
								_this51.x = x25;
								_this51.y = y31;
								enemy12.mask.radius = enemy12.baseRadius * enemy12.baseScale;
								enemy12.hspeed = 2 * enemy12.baseScale + 2;
								var tmp30;
								switch(size2) {
								case 1:
									tmp30 = 25;
									break;
								case 2:
									tmp30 = 50;
									break;
								case 3:
									tmp30 = 100;
									break;
								default:
									tmp30 = 0;
								}
								enemy12.set_hp(tmp30);
								enemy12.size = size2;
								var _this52 = enemy12.position;
								_this52.x = 840;
								_this52.y = y30;
							}
							break;
						case 1:
							switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
							case 0:
								var y32 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy13 = enemies_EnemyB.pool.get();
								enemy13.revive();
								var _this53 = enemy13.position;
								_this53.x = -60;
								_this53.y = y32;
								var _this54 = enemy13.scale;
								_this54.x = 1;
								_this54.y = 1;
								enemy13.set_hp(200);
								enemy13.bodyAtkOn = false;
								enemy13.isSubEnemy = false;
								var actionCB6 = function() {
									var _this55 = G.sfxGroup;
									var channel6 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this55,false);
									channel6._volume = 0.4;
									channel6.channel.set_volume(_this55.muted?0:0.4 * _this55._volume);
									_this55.channels.push(channel6);
									var _g3 = 0;
									while(_g3 < 6) {
										var angle6 = 60 * _g3++;
										var child6 = enemies_EnemyB.childGroup.createAlive();
										var x26 = enemy13.position.x;
										var y33 = enemy13.position.y;
										var _this56 = child6.position;
										_this56.x = x26;
										_this56.y = y33;
										child6.set_hp(20);
										var _this57 = child6.motion.velocity;
										var rad12 = angle6 * kala_math_Mathf.CONST_RAD;
										var tmp31;
										if(_this57._speedUpdated) {
											tmp31 = _this57._speed;
										} else {
											_this57._speedUpdated = true;
											var tmp32 = _this57._x;
											var deg18;
											if(_this57._angleUpdated) {
												deg18 = _this57._angle;
											} else {
												_this57._angleUpdated = true;
												deg18 = _this57._angle = Math.atan2(_this57._y,_this57._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp31 = _this57._speed = tmp32 / Math.cos(deg18 * kala_math_Mathf.CONST_RAD);
										}
										_this57._x = tmp31 * Math.cos(rad12);
										var tmp33;
										if(_this57._speedUpdated) {
											tmp33 = _this57._speed;
										} else {
											_this57._speedUpdated = true;
											var tmp34 = _this57._x;
											var deg19;
											if(_this57._angleUpdated) {
												deg19 = _this57._angle;
											} else {
												_this57._angleUpdated = true;
												deg19 = _this57._angle = Math.atan2(_this57._y,_this57._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp33 = _this57._speed = tmp34 / Math.cos(deg19 * kala_math_Mathf.CONST_RAD);
										}
										_this57._y = tmp33 * Math.sin(rad12);
										_this57._angleUpdated = true;
										_this57._angle = angle6;
										var deg20;
										if(_this57._angleUpdated) {
											deg20 = _this57._angle;
										} else {
											_this57._angleUpdated = true;
											deg20 = _this57._angle = Math.atan2(_this57._y,_this57._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad13 = deg20 * kala_math_Mathf.CONST_RAD;
										_this57._x = 5 * Math.cos(rad13);
										_this57._y = 5 * Math.sin(rad13);
										_this57._speedUpdated = true;
										_this57._speed = 5;
										child6.motion.turnSpeed = 0;
										child6.bodyAtkOn = true;
										child6.isSubEnemy = true;
									}
								};
								var _gthis6 = enemy13;
								var value12 = enemy13.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x27 = Math.max(enemy13.halfWidth,Math.min(700 - enemy13.halfWidth,value12));
								var value13 = enemy13.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y34 = Math.max(enemy13.halfHeight,Math.min(200,value13));
								var x112 = enemy13.position.x;
								var y113 = enemy13.position.y;
								var t6 = Math.sqrt((x112 - x27) * (x112 - x27) + (y113 - y34) * (y113 - y34)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this58 = enemy13.tween;
								var target6 = null;
								var ease6 = null;
								if(target6 == null) {
									target6 = _this58.object;
								}
								if(ease6 == null) {
									ease6 = kala_behaviors_tween_Ease.linear;
								}
								enemy13.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this58,null,target6,ease6,null);
								var _this59 = enemy13.moveRandomTimeline;
								var task6 = kala_behaviors_tween_TweenTask.create();
								task6.init(enemy13,{ x : x27, y : y34},t6,kala_behaviors_tween_Ease.sineInOut,null);
								task6.backwardEase = null;
								_this59.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task6));
								_this59.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_12) {
									actionCB6();
								}));
								_this59.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this59.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_13) {
									_gthis6.moveRandom(actionCB6);
								}));
								_this59.manager._tweens.push(_this59);
								_this59.nextNode();
								break;
							case 1:
								var y35 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy14 = enemies_EnemyB.pool.get();
								enemy14.revive();
								var _this60 = enemy14.position;
								_this60.x = 760;
								_this60.y = y35;
								var _this61 = enemy14.scale;
								_this61.x = 1;
								_this61.y = 1;
								enemy14.set_hp(200);
								enemy14.bodyAtkOn = false;
								enemy14.isSubEnemy = false;
								var actionCB7 = function() {
									var _this62 = G.sfxGroup;
									var channel7 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this62,false);
									channel7._volume = 0.4;
									channel7.channel.set_volume(_this62.muted?0:0.4 * _this62._volume);
									_this62.channels.push(channel7);
									var _g4 = 0;
									while(_g4 < 6) {
										var angle7 = 60 * _g4++;
										var child7 = enemies_EnemyB.childGroup.createAlive();
										var x28 = enemy14.position.x;
										var y36 = enemy14.position.y;
										var _this63 = child7.position;
										_this63.x = x28;
										_this63.y = y36;
										child7.set_hp(20);
										var _this64 = child7.motion.velocity;
										var rad14 = angle7 * kala_math_Mathf.CONST_RAD;
										var tmp35;
										if(_this64._speedUpdated) {
											tmp35 = _this64._speed;
										} else {
											_this64._speedUpdated = true;
											var tmp36 = _this64._x;
											var deg21;
											if(_this64._angleUpdated) {
												deg21 = _this64._angle;
											} else {
												_this64._angleUpdated = true;
												deg21 = _this64._angle = Math.atan2(_this64._y,_this64._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp35 = _this64._speed = tmp36 / Math.cos(deg21 * kala_math_Mathf.CONST_RAD);
										}
										_this64._x = tmp35 * Math.cos(rad14);
										var tmp37;
										if(_this64._speedUpdated) {
											tmp37 = _this64._speed;
										} else {
											_this64._speedUpdated = true;
											var tmp38 = _this64._x;
											var deg22;
											if(_this64._angleUpdated) {
												deg22 = _this64._angle;
											} else {
												_this64._angleUpdated = true;
												deg22 = _this64._angle = Math.atan2(_this64._y,_this64._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp37 = _this64._speed = tmp38 / Math.cos(deg22 * kala_math_Mathf.CONST_RAD);
										}
										_this64._y = tmp37 * Math.sin(rad14);
										_this64._angleUpdated = true;
										_this64._angle = angle7;
										var deg23;
										if(_this64._angleUpdated) {
											deg23 = _this64._angle;
										} else {
											_this64._angleUpdated = true;
											deg23 = _this64._angle = Math.atan2(_this64._y,_this64._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad15 = deg23 * kala_math_Mathf.CONST_RAD;
										_this64._x = 5 * Math.cos(rad15);
										_this64._y = 5 * Math.sin(rad15);
										_this64._speedUpdated = true;
										_this64._speed = 5;
										child7.motion.turnSpeed = 0;
										child7.bodyAtkOn = true;
										child7.isSubEnemy = true;
									}
								};
								var _gthis7 = enemy14;
								var value14 = enemy14.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x29 = Math.max(enemy14.halfWidth,Math.min(700 - enemy14.halfWidth,value14));
								var value15 = enemy14.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y37 = Math.max(enemy14.halfHeight,Math.min(200,value15));
								var x113 = enemy14.position.x;
								var y114 = enemy14.position.y;
								var t7 = Math.sqrt((x113 - x29) * (x113 - x29) + (y114 - y37) * (y114 - y37)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this65 = enemy14.tween;
								var target7 = null;
								var ease7 = null;
								if(target7 == null) {
									target7 = _this65.object;
								}
								if(ease7 == null) {
									ease7 = kala_behaviors_tween_Ease.linear;
								}
								enemy14.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this65,null,target7,ease7,null);
								var _this66 = enemy14.moveRandomTimeline;
								var task7 = kala_behaviors_tween_TweenTask.create();
								task7.init(enemy14,{ x : x29, y : y37},t7,kala_behaviors_tween_Ease.sineInOut,null);
								task7.backwardEase = null;
								_this66.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task7));
								_this66.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_14) {
									actionCB7();
								}));
								_this66.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this66.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_15) {
									_gthis7.moveRandom(actionCB7);
								}));
								_this66.manager._tweens.push(_this66);
								_this66.nextNode();
								break;
							case 2:
								var x30 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy15 = enemies_EnemyB.pool.get();
								enemy15.revive();
								var _this67 = enemy15.position;
								_this67.x = x30;
								_this67.y = -60;
								var _this68 = enemy15.scale;
								_this68.x = 1;
								_this68.y = 1;
								enemy15.set_hp(200);
								enemy15.bodyAtkOn = false;
								enemy15.isSubEnemy = false;
								var actionCB8 = function() {
									var _this69 = G.sfxGroup;
									var channel8 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this69,false);
									channel8._volume = 0.4;
									channel8.channel.set_volume(_this69.muted?0:0.4 * _this69._volume);
									_this69.channels.push(channel8);
									var _g5 = 0;
									while(_g5 < 6) {
										var angle8 = 60 * _g5++;
										var child8 = enemies_EnemyB.childGroup.createAlive();
										var x31 = enemy15.position.x;
										var y38 = enemy15.position.y;
										var _this70 = child8.position;
										_this70.x = x31;
										_this70.y = y38;
										child8.set_hp(20);
										var _this71 = child8.motion.velocity;
										var rad16 = angle8 * kala_math_Mathf.CONST_RAD;
										var tmp39;
										if(_this71._speedUpdated) {
											tmp39 = _this71._speed;
										} else {
											_this71._speedUpdated = true;
											var tmp40 = _this71._x;
											var deg24;
											if(_this71._angleUpdated) {
												deg24 = _this71._angle;
											} else {
												_this71._angleUpdated = true;
												deg24 = _this71._angle = Math.atan2(_this71._y,_this71._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp39 = _this71._speed = tmp40 / Math.cos(deg24 * kala_math_Mathf.CONST_RAD);
										}
										_this71._x = tmp39 * Math.cos(rad16);
										var tmp41;
										if(_this71._speedUpdated) {
											tmp41 = _this71._speed;
										} else {
											_this71._speedUpdated = true;
											var tmp42 = _this71._x;
											var deg25;
											if(_this71._angleUpdated) {
												deg25 = _this71._angle;
											} else {
												_this71._angleUpdated = true;
												deg25 = _this71._angle = Math.atan2(_this71._y,_this71._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp41 = _this71._speed = tmp42 / Math.cos(deg25 * kala_math_Mathf.CONST_RAD);
										}
										_this71._y = tmp41 * Math.sin(rad16);
										_this71._angleUpdated = true;
										_this71._angle = angle8;
										var deg26;
										if(_this71._angleUpdated) {
											deg26 = _this71._angle;
										} else {
											_this71._angleUpdated = true;
											deg26 = _this71._angle = Math.atan2(_this71._y,_this71._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad17 = deg26 * kala_math_Mathf.CONST_RAD;
										_this71._x = 5 * Math.cos(rad17);
										_this71._y = 5 * Math.sin(rad17);
										_this71._speedUpdated = true;
										_this71._speed = 5;
										child8.motion.turnSpeed = 0;
										child8.bodyAtkOn = true;
										child8.isSubEnemy = true;
									}
								};
								var _gthis8 = enemy15;
								var value16 = enemy15.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x32 = Math.max(enemy15.halfWidth,Math.min(700 - enemy15.halfWidth,value16));
								var value17 = enemy15.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y39 = Math.max(enemy15.halfHeight,Math.min(200,value17));
								var x114 = enemy15.position.x;
								var y115 = enemy15.position.y;
								var t8 = Math.sqrt((x114 - x32) * (x114 - x32) + (y115 - y39) * (y115 - y39)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this72 = enemy15.tween;
								var target8 = null;
								var ease8 = null;
								if(target8 == null) {
									target8 = _this72.object;
								}
								if(ease8 == null) {
									ease8 = kala_behaviors_tween_Ease.linear;
								}
								enemy15.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this72,null,target8,ease8,null);
								var _this73 = enemy15.moveRandomTimeline;
								var task8 = kala_behaviors_tween_TweenTask.create();
								task8.init(enemy15,{ x : x32, y : y39},t8,kala_behaviors_tween_Ease.sineInOut,null);
								task8.backwardEase = null;
								_this73.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task8));
								_this73.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_16) {
									actionCB8();
								}));
								_this73.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this73.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_17) {
									_gthis8.moveRandom(actionCB8);
								}));
								_this73.manager._tweens.push(_this73);
								_this73.nextNode();
								break;
							}
							break;
						case 2:
							var size3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(1,3);
							switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
							case 0:
								var y40 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy16 = enemies_EnemyC.pool.get();
								enemy16.revive();
								enemy16.baseScale = size3 / 4 + 0.25;
								var _this74 = enemy16.scale;
								var x33 = enemy16.baseScale;
								var y41 = enemy16.baseScale;
								_this74.x = x33;
								_this74.y = y41;
								enemy16.mask.radius = 40 * enemy16.baseScale;
								enemy16.maxHSpeed = 3 * enemy16.baseScale;
								if(enemy16.position.x < 350.) {
									if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
										enemy16.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy16.maxHSpeed);
									} else {
										enemy16.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy16.maxHSpeed,0);
									}
								} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
									enemy16.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy16.maxHSpeed,0);
								} else {
									enemy16.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy16.maxHSpeed);
								}
								enemy16.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
								enemy16.flapPower = 6 * enemy16.baseScale;
								enemy16.vaccel = 0.5 * enemy16.baseScale;
								enemy16.flipSpeed = 0.2 * enemy16.baseScale;
								var tmp43;
								switch(size3) {
								case 1:
									tmp43 = 50;
									break;
								case 2:
									tmp43 = 100;
									break;
								case 3:
									tmp43 = 150;
									break;
								default:
									tmp43 = 0;
								}
								enemy16.set_hp(tmp43);
								enemy16.size = size3;
								var _this75 = enemy16.position;
								_this75.x = -120;
								_this75.y = y40;
								break;
							case 1:
								var y42 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy17 = enemies_EnemyC.pool.get();
								enemy17.revive();
								enemy17.baseScale = size3 / 4 + 0.25;
								var _this76 = enemy17.scale;
								var x34 = enemy17.baseScale;
								var y43 = enemy17.baseScale;
								_this76.x = x34;
								_this76.y = y43;
								enemy17.mask.radius = 40 * enemy17.baseScale;
								enemy17.maxHSpeed = 3 * enemy17.baseScale;
								if(enemy17.position.x < 350.) {
									if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
										enemy17.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy17.maxHSpeed);
									} else {
										enemy17.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy17.maxHSpeed,0);
									}
								} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
									enemy17.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy17.maxHSpeed,0);
								} else {
									enemy17.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy17.maxHSpeed);
								}
								enemy17.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
								enemy17.flapPower = 6 * enemy17.baseScale;
								enemy17.vaccel = 0.5 * enemy17.baseScale;
								enemy17.flipSpeed = 0.2 * enemy17.baseScale;
								var tmp44;
								switch(size3) {
								case 1:
									tmp44 = 50;
									break;
								case 2:
									tmp44 = 100;
									break;
								case 3:
									tmp44 = 150;
									break;
								default:
									tmp44 = 0;
								}
								enemy17.set_hp(tmp44);
								enemy17.size = size3;
								var _this77 = enemy17.position;
								_this77.x = 820;
								_this77.y = y42;
								break;
							case 2:
								var x35 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy18 = enemies_EnemyC.pool.get();
								enemy18.revive();
								enemy18.baseScale = size3 / 4 + 0.25;
								var _this78 = enemy18.scale;
								var x36 = enemy18.baseScale;
								var y44 = enemy18.baseScale;
								_this78.x = x36;
								_this78.y = y44;
								enemy18.mask.radius = 40 * enemy18.baseScale;
								enemy18.maxHSpeed = 3 * enemy18.baseScale;
								if(enemy18.position.x < 350.) {
									if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
										enemy18.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy18.maxHSpeed);
									} else {
										enemy18.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy18.maxHSpeed,0);
									}
								} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
									enemy18.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy18.maxHSpeed,0);
								} else {
									enemy18.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy18.maxHSpeed);
								}
								enemy18.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
								enemy18.flapPower = 6 * enemy18.baseScale;
								enemy18.vaccel = 0.5 * enemy18.baseScale;
								enemy18.flipSpeed = 0.2 * enemy18.baseScale;
								var tmp45;
								switch(size3) {
								case 1:
									tmp45 = 50;
									break;
								case 2:
									tmp45 = 100;
									break;
								case 3:
									tmp45 = 150;
									break;
								default:
									tmp45 = 0;
								}
								enemy18.set_hp(tmp45);
								enemy18.size = size3;
								var _this79 = enemy18.position;
								_this79.x = x35;
								_this79.y = -120;
								break;
							}
							break;
						case 3:
							switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
							case 0:
								var y45 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy19 = enemies_EnemyD.pool.get();
								enemy19.revive();
								var _this80 = enemy19.position;
								_this80.x = -60;
								_this80.y = y45;
								enemy19.set_hp(150);
								var actionCB9 = function() {
									var n3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
									var _this81 = G.sfxGroup;
									var volume3 = n3 / 15;
									var channel9 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this81,false);
									channel9._volume = volume3;
									channel9.channel.set_volume(_this81.muted?0:volume3 * _this81._volume);
									_this81.channels.push(channel9);
									var _g14 = 0;
									while(_g14 < n3) {
										++_g14;
										var child9 = enemies_EnemyD.childGroup.createAlive();
										var x37 = enemy19.position.x;
										var y46 = enemy19.position.y + enemy19.sprite.position.y;
										var _this82 = child9.position;
										_this82.x = x37;
										_this82.y = y46;
										var _this83 = child9.motion.velocity;
										var angle9 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
										var speed3 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
										var rad18 = angle9 * kala_math_Mathf.CONST_RAD;
										var tmp46;
										if(_this83._speedUpdated) {
											tmp46 = _this83._speed;
										} else {
											_this83._speedUpdated = true;
											var tmp47 = _this83._x;
											var deg27;
											if(_this83._angleUpdated) {
												deg27 = _this83._angle;
											} else {
												_this83._angleUpdated = true;
												deg27 = _this83._angle = Math.atan2(_this83._y,_this83._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp46 = _this83._speed = tmp47 / Math.cos(deg27 * kala_math_Mathf.CONST_RAD);
										}
										_this83._x = tmp46 * Math.cos(rad18);
										var tmp48;
										if(_this83._speedUpdated) {
											tmp48 = _this83._speed;
										} else {
											_this83._speedUpdated = true;
											var tmp49 = _this83._x;
											var deg28;
											if(_this83._angleUpdated) {
												deg28 = _this83._angle;
											} else {
												_this83._angleUpdated = true;
												deg28 = _this83._angle = Math.atan2(_this83._y,_this83._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp48 = _this83._speed = tmp49 / Math.cos(deg28 * kala_math_Mathf.CONST_RAD);
										}
										_this83._y = tmp48 * Math.sin(rad18);
										_this83._angleUpdated = true;
										_this83._angle = angle9;
										var deg29;
										if(_this83._angleUpdated) {
											deg29 = _this83._angle;
										} else {
											_this83._angleUpdated = true;
											deg29 = _this83._angle = Math.atan2(_this83._y,_this83._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad19 = deg29 * kala_math_Mathf.CONST_RAD;
										_this83._x = speed3 * Math.cos(rad19);
										_this83._y = speed3 * Math.sin(rad19);
										_this83._speedUpdated = true;
										_this83._speed = speed3;
										child9.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
										child9.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
										child9.opacity = 0;
										child9.set_hp(9);
									}
								};
								var _gthis9 = enemy19;
								var value18 = enemy19.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x38 = Math.max(enemy19.halfWidth,Math.min(700 - enemy19.halfWidth,value18));
								var value19 = enemy19.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y47 = Math.max(enemy19.halfHeight,Math.min(200,value19));
								var x115 = enemy19.position.x;
								var y116 = enemy19.position.y;
								var t9 = Math.sqrt((x115 - x38) * (x115 - x38) + (y116 - y47) * (y116 - y47)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this84 = enemy19.tween;
								var target9 = null;
								var ease9 = null;
								if(target9 == null) {
									target9 = _this84.object;
								}
								if(ease9 == null) {
									ease9 = kala_behaviors_tween_Ease.linear;
								}
								enemy19.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this84,null,target9,ease9,null);
								var _this85 = enemy19.moveRandomTimeline;
								var task9 = kala_behaviors_tween_TweenTask.create();
								task9.init(enemy19,{ x : x38, y : y47},t9,kala_behaviors_tween_Ease.sineInOut,null);
								task9.backwardEase = null;
								_this85.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task9));
								_this85.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_18) {
									actionCB9();
								}));
								_this85.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this85.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_19) {
									_gthis9.moveRandom(actionCB9);
								}));
								_this85.manager._tweens.push(_this85);
								_this85.nextNode();
								break;
							case 1:
								var y48 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy20 = enemies_EnemyD.pool.get();
								enemy20.revive();
								var _this86 = enemy20.position;
								_this86.x = 760;
								_this86.y = y48;
								enemy20.set_hp(150);
								var actionCB10 = function() {
									var n4 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
									var _this87 = G.sfxGroup;
									var volume4 = n4 / 15;
									var channel10 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this87,false);
									channel10._volume = volume4;
									channel10.channel.set_volume(_this87.muted?0:volume4 * _this87._volume);
									_this87.channels.push(channel10);
									var _g15 = 0;
									while(_g15 < n4) {
										++_g15;
										var child10 = enemies_EnemyD.childGroup.createAlive();
										var x39 = enemy20.position.x;
										var y49 = enemy20.position.y + enemy20.sprite.position.y;
										var _this88 = child10.position;
										_this88.x = x39;
										_this88.y = y49;
										var _this89 = child10.motion.velocity;
										var angle10 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
										var speed4 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
										var rad20 = angle10 * kala_math_Mathf.CONST_RAD;
										var tmp50;
										if(_this89._speedUpdated) {
											tmp50 = _this89._speed;
										} else {
											_this89._speedUpdated = true;
											var tmp51 = _this89._x;
											var deg30;
											if(_this89._angleUpdated) {
												deg30 = _this89._angle;
											} else {
												_this89._angleUpdated = true;
												deg30 = _this89._angle = Math.atan2(_this89._y,_this89._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp50 = _this89._speed = tmp51 / Math.cos(deg30 * kala_math_Mathf.CONST_RAD);
										}
										_this89._x = tmp50 * Math.cos(rad20);
										var tmp52;
										if(_this89._speedUpdated) {
											tmp52 = _this89._speed;
										} else {
											_this89._speedUpdated = true;
											var tmp53 = _this89._x;
											var deg31;
											if(_this89._angleUpdated) {
												deg31 = _this89._angle;
											} else {
												_this89._angleUpdated = true;
												deg31 = _this89._angle = Math.atan2(_this89._y,_this89._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp52 = _this89._speed = tmp53 / Math.cos(deg31 * kala_math_Mathf.CONST_RAD);
										}
										_this89._y = tmp52 * Math.sin(rad20);
										_this89._angleUpdated = true;
										_this89._angle = angle10;
										var deg32;
										if(_this89._angleUpdated) {
											deg32 = _this89._angle;
										} else {
											_this89._angleUpdated = true;
											deg32 = _this89._angle = Math.atan2(_this89._y,_this89._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad21 = deg32 * kala_math_Mathf.CONST_RAD;
										_this89._x = speed4 * Math.cos(rad21);
										_this89._y = speed4 * Math.sin(rad21);
										_this89._speedUpdated = true;
										_this89._speed = speed4;
										child10.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
										child10.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
										child10.opacity = 0;
										child10.set_hp(9);
									}
								};
								var _gthis10 = enemy20;
								var value20 = enemy20.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x40 = Math.max(enemy20.halfWidth,Math.min(700 - enemy20.halfWidth,value20));
								var value21 = enemy20.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y50 = Math.max(enemy20.halfHeight,Math.min(200,value21));
								var x116 = enemy20.position.x;
								var y117 = enemy20.position.y;
								var t10 = Math.sqrt((x116 - x40) * (x116 - x40) + (y117 - y50) * (y117 - y50)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this90 = enemy20.tween;
								var target10 = null;
								var ease10 = null;
								if(target10 == null) {
									target10 = _this90.object;
								}
								if(ease10 == null) {
									ease10 = kala_behaviors_tween_Ease.linear;
								}
								enemy20.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this90,null,target10,ease10,null);
								var _this91 = enemy20.moveRandomTimeline;
								var task10 = kala_behaviors_tween_TweenTask.create();
								task10.init(enemy20,{ x : x40, y : y50},t10,kala_behaviors_tween_Ease.sineInOut,null);
								task10.backwardEase = null;
								_this91.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task10));
								_this91.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_20) {
									actionCB10();
								}));
								_this91.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this91.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_21) {
									_gthis10.moveRandom(actionCB10);
								}));
								_this91.manager._tweens.push(_this91);
								_this91.nextNode();
								break;
							case 2:
								var x41 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
								states_PlayState.instance.onScreenEnemyCount++;
								var enemy21 = enemies_EnemyD.pool.get();
								enemy21.revive();
								var _this92 = enemy21.position;
								_this92.x = x41;
								_this92.y = -160;
								enemy21.set_hp(150);
								var actionCB11 = function() {
									var n5 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
									var _this93 = G.sfxGroup;
									var volume5 = n5 / 15;
									var channel11 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this93,false);
									channel11._volume = volume5;
									channel11.channel.set_volume(_this93.muted?0:volume5 * _this93._volume);
									_this93.channels.push(channel11);
									var _g16 = 0;
									while(_g16 < n5) {
										++_g16;
										var child11 = enemies_EnemyD.childGroup.createAlive();
										var x42 = enemy21.position.x;
										var y51 = enemy21.position.y + enemy21.sprite.position.y;
										var _this94 = child11.position;
										_this94.x = x42;
										_this94.y = y51;
										var _this95 = child11.motion.velocity;
										var angle11 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
										var speed5 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
										var rad22 = angle11 * kala_math_Mathf.CONST_RAD;
										var tmp54;
										if(_this95._speedUpdated) {
											tmp54 = _this95._speed;
										} else {
											_this95._speedUpdated = true;
											var tmp55 = _this95._x;
											var deg33;
											if(_this95._angleUpdated) {
												deg33 = _this95._angle;
											} else {
												_this95._angleUpdated = true;
												deg33 = _this95._angle = Math.atan2(_this95._y,_this95._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp54 = _this95._speed = tmp55 / Math.cos(deg33 * kala_math_Mathf.CONST_RAD);
										}
										_this95._x = tmp54 * Math.cos(rad22);
										var tmp56;
										if(_this95._speedUpdated) {
											tmp56 = _this95._speed;
										} else {
											_this95._speedUpdated = true;
											var tmp57 = _this95._x;
											var deg34;
											if(_this95._angleUpdated) {
												deg34 = _this95._angle;
											} else {
												_this95._angleUpdated = true;
												deg34 = _this95._angle = Math.atan2(_this95._y,_this95._x) * kala_math_Mathf.CONST_DEG;
											}
											tmp56 = _this95._speed = tmp57 / Math.cos(deg34 * kala_math_Mathf.CONST_RAD);
										}
										_this95._y = tmp56 * Math.sin(rad22);
										_this95._angleUpdated = true;
										_this95._angle = angle11;
										var deg35;
										if(_this95._angleUpdated) {
											deg35 = _this95._angle;
										} else {
											_this95._angleUpdated = true;
											deg35 = _this95._angle = Math.atan2(_this95._y,_this95._x) * kala_math_Mathf.CONST_DEG;
										}
										var rad23 = deg35 * kala_math_Mathf.CONST_RAD;
										_this95._x = speed5 * Math.cos(rad23);
										_this95._y = speed5 * Math.sin(rad23);
										_this95._speedUpdated = true;
										_this95._speed = speed5;
										child11.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
										child11.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
										child11.opacity = 0;
										child11.set_hp(9);
									}
								};
								var _gthis11 = enemy21;
								var value22 = enemy21.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var x43 = Math.max(enemy21.halfWidth,Math.min(700 - enemy21.halfWidth,value22));
								var value23 = enemy21.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
								var y52 = Math.max(enemy21.halfHeight,Math.min(200,value23));
								var x117 = enemy21.position.x;
								var y118 = enemy21.position.y;
								var t11 = Math.sqrt((x117 - x43) * (x117 - x43) + (y118 - y52) * (y118 - y52)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
								var _this96 = enemy21.tween;
								var target11 = null;
								var ease11 = null;
								if(target11 == null) {
									target11 = _this96.object;
								}
								if(ease11 == null) {
									ease11 = kala_behaviors_tween_Ease.linear;
								}
								enemy21.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this96,null,target11,ease11,null);
								var _this97 = enemy21.moveRandomTimeline;
								var task11 = kala_behaviors_tween_TweenTask.create();
								task11.init(enemy21,{ x : x43, y : y52},t11,kala_behaviors_tween_Ease.sineInOut,null);
								task11.backwardEase = null;
								_this97.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task11));
								_this97.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_22) {
									actionCB11();
								}));
								_this97.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
								_this97.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_23) {
									_gthis11.moveRandom(actionCB11);
								}));
								_this97.manager._tweens.push(_this97);
								_this97.nextNode();
								break;
							}
							break;
						}
					}
				}
			} else if(this.maxOnScreenEnemy - this.onScreenEnemyCount >= 2) {
				this.framesLeftUntilBoss = 2000;
				this.killsLeftUntilBoss = 12;
				this.boss.revive();
			}
		}
	}
	,goTo: function(state) {
		var _gthis = this;
		this.closing = true;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.blurOverlay,{ opacity : 1},36,kala_behaviors_tween_Ease.sineIn,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			var tmp = HxOverrides.iter(_gthis.enemyGroup.members);
			while(tmp.hasNext()) {
				var enemy = tmp.next();
				if(enemy.alive) {
					enemy.put();
				}
			}
			var tmp1 = HxOverrides.iter(enemies_EnemyB.childGroup.members);
			while(tmp1.hasNext()) {
				var enemy1 = tmp1.next();
				if(enemy1.alive) {
					enemy1.put();
				}
			}
			var tmp2 = HxOverrides.iter(enemies_EnemyD.childGroup.members);
			while(tmp2.hasNext()) {
				var enemy2 = tmp2.next();
				if(enemy2.alive) {
					enemy2.put();
				}
			}
			_gthis.boss.sleep();
			enemies_Boss.lightningGroup.killAll();
			enemies_Gem.group.killAll();
			player_Minion.group.killAll();
			player_Bullet.mainGroup.killAll();
			player_Bullet.minionGroup.killAll();
			player_Lightning.group.killAll();
			player_Web.group.killAll();
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
		Save.save();
	}
	,onStartHandle: function(_) {
		kala_Kala.set_updateRate(30);
		this.closing = false;
		this.active = true;
		this.maxOnScreenEnemy = 2;
		this.onScreenEnemyCount = 0;
		this.framesLeftUntilBoss = 2000;
		this.killsLeftUntilBoss = 12;
		if(G.tutorialPassed) {
			this.backButton.revive();
			this.backButton.opacity = 0.6;
		} else {
			this.backButton.kill();
		}
		if(this.tutorialState == -1) {
			this.tutorialText.kill();
			this.tutorialFinger.kill();
		} else {
			this.tutorialText.revive();
			this.tutorialText.set_text(G.touchControl?"Touch on the left side of the screen to move left.":"Press [LEFT ARROW] to move left.");
			if(G.touchControl) {
				this.tutorialFinger.revive();
				this.tutorialFinger.opacity = 1;
				this.tutorialFinger.flipX = false;
				this.tutorialFinger.position.x = 0;
			} else {
				this.tutorialFinger.kill();
			}
		}
		this.uiGroup.opacity = 1;
		this.gemText.set_text("X " + UpgradeData.money);
		this.player.onStart();
		this.blurOverlay.opacity = 1;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.blurOverlay,{ opacity : 0},36,kala_behaviors_tween_Ease.sineOut,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
	}
	,tutorialUpdate: function(_,_1) {
		switch(this.tutorialState) {
		case -1:
			break;
		case 0:
			if(this.player.position.x < 125) {
				this.tutorialState = 1;
				this.tutorialText.set_text("Now try to go back to the center of the screen.");
				this.tutorialFinger.flipX = true;
				this.tutorialFinger.position.x = 700 - this.tutorialFinger.get_width();
			}
			break;
		case 1:
			if(this.player.position.x > 340.) {
				this.tutorialState = 2;
				this.tutorialText.set_text(G.touchControl?"Charge your enegry by touching on both sides of the screen at the same time.":"Charge your enegry by pressing\n[LEFR ARROW] & [RIGHT ARROW] at the same time.");
				this.tutorialFinger.kill();
			}
			break;
		case 2:
			if(this.player.charging) {
				this.tutorialState = 3;
				this.tutorialText.set_text(G.touchControl?"Charge your enegry by touching on both sides of the screen at the same time.":"Charge your enegry by pressing\n[LEFR ARROW] & [RIGHT ARROW] at the same time.");
			}
			break;
		case 3:
			if(this.player.charging) {
				this.tutorialState = 4;
				this.tutorialText.set_text("Depend on how much energy charged, you can shoot web or lightning.");
			}
			break;
		case 4:
			if(!this.player.charging) {
				this.tutorialState = 5;
				this.player.webShot = 0;
				this.tutorialText.set_text("Webs will slow your enemies. Try shooting some.");
			}
			break;
		case 5:
			if(this.enemyGroup.countAlive() < 6) {
				var size = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2);
				var x = kala_math__$Random_Random_$Impl_$.instance.GetIn(45,655);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy = enemies_EnemyC.pool.get();
				enemy.revive();
				enemy.baseScale = size / 4 + 0.25;
				var _this = enemy.scale;
				var x1 = enemy.baseScale;
				var y = enemy.baseScale;
				_this.x = x1;
				_this.y = y;
				enemy.mask.radius = 40 * enemy.baseScale;
				enemy.maxHSpeed = 3 * enemy.baseScale;
				if(enemy.position.x < 350.) {
					if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
						enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy.maxHSpeed);
					} else {
						enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy.maxHSpeed,0);
					}
				} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
					enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy.maxHSpeed,0);
				} else {
					enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy.maxHSpeed);
				}
				enemy.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
				enemy.flapPower = 6 * enemy.baseScale;
				enemy.vaccel = 0.5 * enemy.baseScale;
				enemy.flipSpeed = 0.2 * enemy.baseScale;
				var tmp;
				switch(size) {
				case 1:
					tmp = 50;
					break;
				case 2:
					tmp = 100;
					break;
				case 3:
					tmp = 150;
					break;
				default:
					tmp = 0;
				}
				enemy.set_hp(tmp);
				enemy.size = size;
				var _this1 = enemy.position;
				_this1.x = x;
				_this1.y = -90;
			}
			if(this.player.webShot > 2) {
				this.tutorialState = 6;
				this.tutorialText.set_text("You will shoot lightning instead of web if enough energy is charged. Lightning can deal large amount of damage to multiple enemies at once. Try using it to destroy all these flying creatures.");
				while(this.enemyGroup.countAlive() < 12) {
					var size1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(1,2);
					var x2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(45,655);
					states_PlayState.instance.onScreenEnemyCount++;
					var enemy1 = enemies_EnemyC.pool.get();
					enemy1.revive();
					enemy1.baseScale = size1 / 4 + 0.25;
					var _this2 = enemy1.scale;
					var x3 = enemy1.baseScale;
					var y1 = enemy1.baseScale;
					_this2.x = x3;
					_this2.y = y1;
					enemy1.mask.radius = 40 * enemy1.baseScale;
					enemy1.maxHSpeed = 3 * enemy1.baseScale;
					if(enemy1.position.x < 350.) {
						if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
							enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy1.maxHSpeed);
						} else {
							enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy1.maxHSpeed,0);
						}
					} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
						enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy1.maxHSpeed,0);
					} else {
						enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy1.maxHSpeed);
					}
					enemy1.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
					enemy1.flapPower = 6 * enemy1.baseScale;
					enemy1.vaccel = 0.5 * enemy1.baseScale;
					enemy1.flipSpeed = 0.2 * enemy1.baseScale;
					var tmp1;
					switch(size1) {
					case 1:
						tmp1 = 50;
						break;
					case 2:
						tmp1 = 100;
						break;
					case 3:
						tmp1 = 150;
						break;
					default:
						tmp1 = 0;
					}
					enemy1.set_hp(tmp1);
					enemy1.size = size1;
					var _this3 = enemy1.position;
					_this3.x = x2;
					_this3.y = -90;
				}
			}
			break;
		case 6:
			if(this.enemyGroup.countAlive() < 7) {
				this.tutorialState = 7;
				this.tutorialText.set_text("Enemies will drop crystals when destroyed. Collect these to upgrade your ability.");
			}
			break;
		case 7:
			if(this.enemyGroup.countAlive() == 0) {
				this.tutorialState = 8;
				this.tutorialText.set_text("Good job! You can go back to this tutorial by pressing the HELP button on main menu. Good luck and have fun!");
			}
			break;
		}
		if(this.tutorialState > 7) {
			this.tutorialState++;
			if(this.tutorialState == 150) {
				this.tutorialState = 999;
				G.tutorialPassed = true;
				Save.save();
				this.goTo(states_UpgradeState.instance);
			}
		}
	}
	,spawnRandomEnemy: function() {
		switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,3)) {
		case 0:
			var size = kala_math__$Random_Random_$Impl_$.instance.GetIn(1,3);
			if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50) {
				var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy = enemies_EnemyA.pool.get();
				enemy.revive();
				if(enemy.splitting) {
					enemy.position.oy = enemy.scale.oy = enemy.originY;
				} else {
					enemy.baseScale = size / 4 + 0.25;
					enemy.position.oy = enemy.scale.oy = (enemy.sprite.get_height() - 90) * enemy.baseScale;
				}
				var _this = enemy.scale;
				var x = enemy.baseScale;
				var y1 = enemy.baseScale;
				_this.x = x;
				_this.y = y1;
				enemy.mask.radius = enemy.baseRadius * enemy.baseScale;
				enemy.hspeed = 2 * enemy.baseScale + 2;
				var tmp;
				switch(size) {
				case 1:
					tmp = 25;
					break;
				case 2:
					tmp = 50;
					break;
				case 3:
					tmp = 100;
					break;
				default:
					tmp = 0;
				}
				enemy.set_hp(tmp);
				enemy.size = size;
				var _this1 = enemy.position;
				_this1.x = -140;
				_this1.y = y;
			} else {
				var y2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy1 = enemies_EnemyA.pool.get();
				enemy1.revive();
				if(enemy1.splitting) {
					enemy1.position.oy = enemy1.scale.oy = enemy1.originY;
				} else {
					enemy1.baseScale = size / 4 + 0.25;
					enemy1.position.oy = enemy1.scale.oy = (enemy1.sprite.get_height() - 90) * enemy1.baseScale;
				}
				var _this2 = enemy1.scale;
				var x1 = enemy1.baseScale;
				var y3 = enemy1.baseScale;
				_this2.x = x1;
				_this2.y = y3;
				enemy1.mask.radius = enemy1.baseRadius * enemy1.baseScale;
				enemy1.hspeed = 2 * enemy1.baseScale + 2;
				var tmp1;
				switch(size) {
				case 1:
					tmp1 = 25;
					break;
				case 2:
					tmp1 = 50;
					break;
				case 3:
					tmp1 = 100;
					break;
				default:
					tmp1 = 0;
				}
				enemy1.set_hp(tmp1);
				enemy1.size = size;
				var _this3 = enemy1.position;
				_this3.x = 840;
				_this3.y = y2;
			}
			break;
		case 1:
			switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
			case 0:
				var y4 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy2 = enemies_EnemyB.pool.get();
				enemy2.revive();
				var _this4 = enemy2.position;
				_this4.x = -60;
				_this4.y = y4;
				var _this5 = enemy2.scale;
				_this5.x = 1;
				_this5.y = 1;
				enemy2.set_hp(200);
				enemy2.bodyAtkOn = false;
				enemy2.isSubEnemy = false;
				var actionCB = function() {
					var _this6 = G.sfxGroup;
					var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this6,false);
					channel._volume = 0.4;
					channel.channel.set_volume(_this6.muted?0:0.4 * _this6._volume);
					_this6.channels.push(channel);
					var _g = 0;
					while(_g < 6) {
						var angle = 60 * _g++;
						var child = enemies_EnemyB.childGroup.createAlive();
						var x2 = enemy2.position.x;
						var y5 = enemy2.position.y;
						var _this7 = child.position;
						_this7.x = x2;
						_this7.y = y5;
						child.set_hp(20);
						var _this8 = child.motion.velocity;
						var rad = angle * kala_math_Mathf.CONST_RAD;
						var tmp2;
						if(_this8._speedUpdated) {
							tmp2 = _this8._speed;
						} else {
							_this8._speedUpdated = true;
							var tmp3 = _this8._x;
							var deg;
							if(_this8._angleUpdated) {
								deg = _this8._angle;
							} else {
								_this8._angleUpdated = true;
								deg = _this8._angle = Math.atan2(_this8._y,_this8._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp2 = _this8._speed = tmp3 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
						}
						_this8._x = tmp2 * Math.cos(rad);
						var tmp4;
						if(_this8._speedUpdated) {
							tmp4 = _this8._speed;
						} else {
							_this8._speedUpdated = true;
							var tmp5 = _this8._x;
							var deg1;
							if(_this8._angleUpdated) {
								deg1 = _this8._angle;
							} else {
								_this8._angleUpdated = true;
								deg1 = _this8._angle = Math.atan2(_this8._y,_this8._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp4 = _this8._speed = tmp5 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
						}
						_this8._y = tmp4 * Math.sin(rad);
						_this8._angleUpdated = true;
						_this8._angle = angle;
						var deg2;
						if(_this8._angleUpdated) {
							deg2 = _this8._angle;
						} else {
							_this8._angleUpdated = true;
							deg2 = _this8._angle = Math.atan2(_this8._y,_this8._x) * kala_math_Mathf.CONST_DEG;
						}
						var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
						_this8._x = 5 * Math.cos(rad1);
						_this8._y = 5 * Math.sin(rad1);
						_this8._speedUpdated = true;
						_this8._speed = 5;
						child.motion.turnSpeed = 0;
						child.bodyAtkOn = true;
						child.isSubEnemy = true;
					}
				};
				var _gthis = enemy2;
				var value = enemy2.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var x3 = Math.max(enemy2.halfWidth,Math.min(700 - enemy2.halfWidth,value));
				var value1 = enemy2.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var y6 = Math.max(enemy2.halfHeight,Math.min(200,value1));
				var x11 = enemy2.position.x;
				var y11 = enemy2.position.y;
				var t = Math.sqrt((x11 - x3) * (x11 - x3) + (y11 - y6) * (y11 - y6)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
				var _this9 = enemy2.tween;
				var target = null;
				var ease = null;
				if(target == null) {
					target = _this9.object;
				}
				if(ease == null) {
					ease = kala_behaviors_tween_Ease.linear;
				}
				enemy2.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this9,null,target,ease,null);
				var _this10 = enemy2.moveRandomTimeline;
				var task = kala_behaviors_tween_TweenTask.create();
				task.init(enemy2,{ x : x3, y : y6},t,kala_behaviors_tween_Ease.sineInOut,null);
				task.backwardEase = null;
				_this10.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
				_this10.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
					actionCB();
				}));
				_this10.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
				_this10.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
					_gthis.moveRandom(actionCB);
				}));
				_this10.manager._tweens.push(_this10);
				_this10.nextNode();
				break;
			case 1:
				var y7 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy3 = enemies_EnemyB.pool.get();
				enemy3.revive();
				var _this11 = enemy3.position;
				_this11.x = 760;
				_this11.y = y7;
				var _this12 = enemy3.scale;
				_this12.x = 1;
				_this12.y = 1;
				enemy3.set_hp(200);
				enemy3.bodyAtkOn = false;
				enemy3.isSubEnemy = false;
				var actionCB1 = function() {
					var _this13 = G.sfxGroup;
					var channel1 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this13,false);
					channel1._volume = 0.4;
					channel1.channel.set_volume(_this13.muted?0:0.4 * _this13._volume);
					_this13.channels.push(channel1);
					var _g1 = 0;
					while(_g1 < 6) {
						var angle1 = 60 * _g1++;
						var child1 = enemies_EnemyB.childGroup.createAlive();
						var x4 = enemy3.position.x;
						var y8 = enemy3.position.y;
						var _this14 = child1.position;
						_this14.x = x4;
						_this14.y = y8;
						child1.set_hp(20);
						var _this15 = child1.motion.velocity;
						var rad2 = angle1 * kala_math_Mathf.CONST_RAD;
						var tmp6;
						if(_this15._speedUpdated) {
							tmp6 = _this15._speed;
						} else {
							_this15._speedUpdated = true;
							var tmp7 = _this15._x;
							var deg3;
							if(_this15._angleUpdated) {
								deg3 = _this15._angle;
							} else {
								_this15._angleUpdated = true;
								deg3 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp6 = _this15._speed = tmp7 / Math.cos(deg3 * kala_math_Mathf.CONST_RAD);
						}
						_this15._x = tmp6 * Math.cos(rad2);
						var tmp8;
						if(_this15._speedUpdated) {
							tmp8 = _this15._speed;
						} else {
							_this15._speedUpdated = true;
							var tmp9 = _this15._x;
							var deg4;
							if(_this15._angleUpdated) {
								deg4 = _this15._angle;
							} else {
								_this15._angleUpdated = true;
								deg4 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp8 = _this15._speed = tmp9 / Math.cos(deg4 * kala_math_Mathf.CONST_RAD);
						}
						_this15._y = tmp8 * Math.sin(rad2);
						_this15._angleUpdated = true;
						_this15._angle = angle1;
						var deg5;
						if(_this15._angleUpdated) {
							deg5 = _this15._angle;
						} else {
							_this15._angleUpdated = true;
							deg5 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
						}
						var rad3 = deg5 * kala_math_Mathf.CONST_RAD;
						_this15._x = 5 * Math.cos(rad3);
						_this15._y = 5 * Math.sin(rad3);
						_this15._speedUpdated = true;
						_this15._speed = 5;
						child1.motion.turnSpeed = 0;
						child1.bodyAtkOn = true;
						child1.isSubEnemy = true;
					}
				};
				var _gthis1 = enemy3;
				var value2 = enemy3.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var x5 = Math.max(enemy3.halfWidth,Math.min(700 - enemy3.halfWidth,value2));
				var value3 = enemy3.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var y9 = Math.max(enemy3.halfHeight,Math.min(200,value3));
				var x12 = enemy3.position.x;
				var y12 = enemy3.position.y;
				var t1 = Math.sqrt((x12 - x5) * (x12 - x5) + (y12 - y9) * (y12 - y9)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
				var _this16 = enemy3.tween;
				var target1 = null;
				var ease1 = null;
				if(target1 == null) {
					target1 = _this16.object;
				}
				if(ease1 == null) {
					ease1 = kala_behaviors_tween_Ease.linear;
				}
				enemy3.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this16,null,target1,ease1,null);
				var _this17 = enemy3.moveRandomTimeline;
				var task1 = kala_behaviors_tween_TweenTask.create();
				task1.init(enemy3,{ x : x5, y : y9},t1,kala_behaviors_tween_Ease.sineInOut,null);
				task1.backwardEase = null;
				_this17.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
				_this17.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
					actionCB1();
				}));
				_this17.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
				_this17.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_3) {
					_gthis1.moveRandom(actionCB1);
				}));
				_this17.manager._tweens.push(_this17);
				_this17.nextNode();
				break;
			case 2:
				var x6 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy4 = enemies_EnemyB.pool.get();
				enemy4.revive();
				var _this18 = enemy4.position;
				_this18.x = x6;
				_this18.y = -60;
				var _this19 = enemy4.scale;
				_this19.x = 1;
				_this19.y = 1;
				enemy4.set_hp(200);
				enemy4.bodyAtkOn = false;
				enemy4.isSubEnemy = false;
				var actionCB2 = function() {
					var _this20 = G.sfxGroup;
					var channel2 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this20,false);
					channel2._volume = 0.4;
					channel2.channel.set_volume(_this20.muted?0:0.4 * _this20._volume);
					_this20.channels.push(channel2);
					var _g2 = 0;
					while(_g2 < 6) {
						var angle2 = 60 * _g2++;
						var child2 = enemies_EnemyB.childGroup.createAlive();
						var x7 = enemy4.position.x;
						var y10 = enemy4.position.y;
						var _this21 = child2.position;
						_this21.x = x7;
						_this21.y = y10;
						child2.set_hp(20);
						var _this22 = child2.motion.velocity;
						var rad4 = angle2 * kala_math_Mathf.CONST_RAD;
						var tmp10;
						if(_this22._speedUpdated) {
							tmp10 = _this22._speed;
						} else {
							_this22._speedUpdated = true;
							var tmp11 = _this22._x;
							var deg6;
							if(_this22._angleUpdated) {
								deg6 = _this22._angle;
							} else {
								_this22._angleUpdated = true;
								deg6 = _this22._angle = Math.atan2(_this22._y,_this22._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp10 = _this22._speed = tmp11 / Math.cos(deg6 * kala_math_Mathf.CONST_RAD);
						}
						_this22._x = tmp10 * Math.cos(rad4);
						var tmp12;
						if(_this22._speedUpdated) {
							tmp12 = _this22._speed;
						} else {
							_this22._speedUpdated = true;
							var tmp13 = _this22._x;
							var deg7;
							if(_this22._angleUpdated) {
								deg7 = _this22._angle;
							} else {
								_this22._angleUpdated = true;
								deg7 = _this22._angle = Math.atan2(_this22._y,_this22._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp12 = _this22._speed = tmp13 / Math.cos(deg7 * kala_math_Mathf.CONST_RAD);
						}
						_this22._y = tmp12 * Math.sin(rad4);
						_this22._angleUpdated = true;
						_this22._angle = angle2;
						var deg8;
						if(_this22._angleUpdated) {
							deg8 = _this22._angle;
						} else {
							_this22._angleUpdated = true;
							deg8 = _this22._angle = Math.atan2(_this22._y,_this22._x) * kala_math_Mathf.CONST_DEG;
						}
						var rad5 = deg8 * kala_math_Mathf.CONST_RAD;
						_this22._x = 5 * Math.cos(rad5);
						_this22._y = 5 * Math.sin(rad5);
						_this22._speedUpdated = true;
						_this22._speed = 5;
						child2.motion.turnSpeed = 0;
						child2.bodyAtkOn = true;
						child2.isSubEnemy = true;
					}
				};
				var _gthis2 = enemy4;
				var value4 = enemy4.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var x8 = Math.max(enemy4.halfWidth,Math.min(700 - enemy4.halfWidth,value4));
				var value5 = enemy4.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var y13 = Math.max(enemy4.halfHeight,Math.min(200,value5));
				var x13 = enemy4.position.x;
				var y14 = enemy4.position.y;
				var t2 = Math.sqrt((x13 - x8) * (x13 - x8) + (y14 - y13) * (y14 - y13)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
				var _this23 = enemy4.tween;
				var target2 = null;
				var ease2 = null;
				if(target2 == null) {
					target2 = _this23.object;
				}
				if(ease2 == null) {
					ease2 = kala_behaviors_tween_Ease.linear;
				}
				enemy4.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this23,null,target2,ease2,null);
				var _this24 = enemy4.moveRandomTimeline;
				var task2 = kala_behaviors_tween_TweenTask.create();
				task2.init(enemy4,{ x : x8, y : y13},t2,kala_behaviors_tween_Ease.sineInOut,null);
				task2.backwardEase = null;
				_this24.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
				_this24.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_4) {
					actionCB2();
				}));
				_this24.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
				_this24.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_5) {
					_gthis2.moveRandom(actionCB2);
				}));
				_this24.manager._tweens.push(_this24);
				_this24.nextNode();
				break;
			}
			break;
		case 2:
			var size1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(1,3);
			switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
			case 0:
				var y15 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy5 = enemies_EnemyC.pool.get();
				enemy5.revive();
				enemy5.baseScale = size1 / 4 + 0.25;
				var _this25 = enemy5.scale;
				var x9 = enemy5.baseScale;
				var y16 = enemy5.baseScale;
				_this25.x = x9;
				_this25.y = y16;
				enemy5.mask.radius = 40 * enemy5.baseScale;
				enemy5.maxHSpeed = 3 * enemy5.baseScale;
				if(enemy5.position.x < 350.) {
					if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
						enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy5.maxHSpeed);
					} else {
						enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy5.maxHSpeed,0);
					}
				} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
					enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy5.maxHSpeed,0);
				} else {
					enemy5.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy5.maxHSpeed);
				}
				enemy5.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
				enemy5.flapPower = 6 * enemy5.baseScale;
				enemy5.vaccel = 0.5 * enemy5.baseScale;
				enemy5.flipSpeed = 0.2 * enemy5.baseScale;
				var tmp14;
				switch(size1) {
				case 1:
					tmp14 = 50;
					break;
				case 2:
					tmp14 = 100;
					break;
				case 3:
					tmp14 = 150;
					break;
				default:
					tmp14 = 0;
				}
				enemy5.set_hp(tmp14);
				enemy5.size = size1;
				var _this26 = enemy5.position;
				_this26.x = -120;
				_this26.y = y15;
				break;
			case 1:
				var y17 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy6 = enemies_EnemyC.pool.get();
				enemy6.revive();
				enemy6.baseScale = size1 / 4 + 0.25;
				var _this27 = enemy6.scale;
				var x10 = enemy6.baseScale;
				var y18 = enemy6.baseScale;
				_this27.x = x10;
				_this27.y = y18;
				enemy6.mask.radius = 40 * enemy6.baseScale;
				enemy6.maxHSpeed = 3 * enemy6.baseScale;
				if(enemy6.position.x < 350.) {
					if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
						enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy6.maxHSpeed);
					} else {
						enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy6.maxHSpeed,0);
					}
				} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
					enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy6.maxHSpeed,0);
				} else {
					enemy6.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy6.maxHSpeed);
				}
				enemy6.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
				enemy6.flapPower = 6 * enemy6.baseScale;
				enemy6.vaccel = 0.5 * enemy6.baseScale;
				enemy6.flipSpeed = 0.2 * enemy6.baseScale;
				var tmp15;
				switch(size1) {
				case 1:
					tmp15 = 50;
					break;
				case 2:
					tmp15 = 100;
					break;
				case 3:
					tmp15 = 150;
					break;
				default:
					tmp15 = 0;
				}
				enemy6.set_hp(tmp15);
				enemy6.size = size1;
				var _this28 = enemy6.position;
				_this28.x = 820;
				_this28.y = y17;
				break;
			case 2:
				var x14 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy7 = enemies_EnemyC.pool.get();
				enemy7.revive();
				enemy7.baseScale = size1 / 4 + 0.25;
				var _this29 = enemy7.scale;
				var x15 = enemy7.baseScale;
				var y19 = enemy7.baseScale;
				_this29.x = x15;
				_this29.y = y19;
				enemy7.mask.radius = 40 * enemy7.baseScale;
				enemy7.maxHSpeed = 3 * enemy7.baseScale;
				if(enemy7.position.x < 350.) {
					if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
						enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy7.maxHSpeed);
					} else {
						enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy7.maxHSpeed,0);
					}
				} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
					enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy7.maxHSpeed,0);
				} else {
					enemy7.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy7.maxHSpeed);
				}
				enemy7.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
				enemy7.flapPower = 6 * enemy7.baseScale;
				enemy7.vaccel = 0.5 * enemy7.baseScale;
				enemy7.flipSpeed = 0.2 * enemy7.baseScale;
				var tmp16;
				switch(size1) {
				case 1:
					tmp16 = 50;
					break;
				case 2:
					tmp16 = 100;
					break;
				case 3:
					tmp16 = 150;
					break;
				default:
					tmp16 = 0;
				}
				enemy7.set_hp(tmp16);
				enemy7.size = size1;
				var _this30 = enemy7.position;
				_this30.x = x14;
				_this30.y = -120;
				break;
			}
			break;
		case 3:
			switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
			case 0:
				var y20 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy8 = enemies_EnemyD.pool.get();
				enemy8.revive();
				var _this31 = enemy8.position;
				_this31.x = -60;
				_this31.y = y20;
				enemy8.set_hp(150);
				var actionCB3 = function() {
					var n = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
					var _this32 = G.sfxGroup;
					var volume = n / 15;
					var channel3 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this32,false);
					channel3._volume = volume;
					channel3.channel.set_volume(_this32.muted?0:volume * _this32._volume);
					_this32.channels.push(channel3);
					var _g11 = 0;
					while(_g11 < n) {
						++_g11;
						var child3 = enemies_EnemyD.childGroup.createAlive();
						var x16 = enemy8.position.x;
						var y21 = enemy8.position.y + enemy8.sprite.position.y;
						var _this33 = child3.position;
						_this33.x = x16;
						_this33.y = y21;
						var _this34 = child3.motion.velocity;
						var angle3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
						var speed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
						var rad6 = angle3 * kala_math_Mathf.CONST_RAD;
						var tmp17;
						if(_this34._speedUpdated) {
							tmp17 = _this34._speed;
						} else {
							_this34._speedUpdated = true;
							var tmp18 = _this34._x;
							var deg9;
							if(_this34._angleUpdated) {
								deg9 = _this34._angle;
							} else {
								_this34._angleUpdated = true;
								deg9 = _this34._angle = Math.atan2(_this34._y,_this34._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp17 = _this34._speed = tmp18 / Math.cos(deg9 * kala_math_Mathf.CONST_RAD);
						}
						_this34._x = tmp17 * Math.cos(rad6);
						var tmp19;
						if(_this34._speedUpdated) {
							tmp19 = _this34._speed;
						} else {
							_this34._speedUpdated = true;
							var tmp20 = _this34._x;
							var deg10;
							if(_this34._angleUpdated) {
								deg10 = _this34._angle;
							} else {
								_this34._angleUpdated = true;
								deg10 = _this34._angle = Math.atan2(_this34._y,_this34._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp19 = _this34._speed = tmp20 / Math.cos(deg10 * kala_math_Mathf.CONST_RAD);
						}
						_this34._y = tmp19 * Math.sin(rad6);
						_this34._angleUpdated = true;
						_this34._angle = angle3;
						var deg11;
						if(_this34._angleUpdated) {
							deg11 = _this34._angle;
						} else {
							_this34._angleUpdated = true;
							deg11 = _this34._angle = Math.atan2(_this34._y,_this34._x) * kala_math_Mathf.CONST_DEG;
						}
						var rad7 = deg11 * kala_math_Mathf.CONST_RAD;
						_this34._x = speed * Math.cos(rad7);
						_this34._y = speed * Math.sin(rad7);
						_this34._speedUpdated = true;
						_this34._speed = speed;
						child3.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
						child3.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
						child3.opacity = 0;
						child3.set_hp(9);
					}
				};
				var _gthis3 = enemy8;
				var value6 = enemy8.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var x17 = Math.max(enemy8.halfWidth,Math.min(700 - enemy8.halfWidth,value6));
				var value7 = enemy8.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var y22 = Math.max(enemy8.halfHeight,Math.min(200,value7));
				var x18 = enemy8.position.x;
				var y110 = enemy8.position.y;
				var t3 = Math.sqrt((x18 - x17) * (x18 - x17) + (y110 - y22) * (y110 - y22)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
				var _this35 = enemy8.tween;
				var target3 = null;
				var ease3 = null;
				if(target3 == null) {
					target3 = _this35.object;
				}
				if(ease3 == null) {
					ease3 = kala_behaviors_tween_Ease.linear;
				}
				enemy8.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this35,null,target3,ease3,null);
				var _this36 = enemy8.moveRandomTimeline;
				var task3 = kala_behaviors_tween_TweenTask.create();
				task3.init(enemy8,{ x : x17, y : y22},t3,kala_behaviors_tween_Ease.sineInOut,null);
				task3.backwardEase = null;
				_this36.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
				_this36.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_6) {
					actionCB3();
				}));
				_this36.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
				_this36.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_7) {
					_gthis3.moveRandom(actionCB3);
				}));
				_this36.manager._tweens.push(_this36);
				_this36.nextNode();
				break;
			case 1:
				var y23 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy9 = enemies_EnemyD.pool.get();
				enemy9.revive();
				var _this37 = enemy9.position;
				_this37.x = 760;
				_this37.y = y23;
				enemy9.set_hp(150);
				var actionCB4 = function() {
					var n1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
					var _this38 = G.sfxGroup;
					var volume1 = n1 / 15;
					var channel4 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this38,false);
					channel4._volume = volume1;
					channel4.channel.set_volume(_this38.muted?0:volume1 * _this38._volume);
					_this38.channels.push(channel4);
					var _g12 = 0;
					while(_g12 < n1) {
						++_g12;
						var child4 = enemies_EnemyD.childGroup.createAlive();
						var x19 = enemy9.position.x;
						var y24 = enemy9.position.y + enemy9.sprite.position.y;
						var _this39 = child4.position;
						_this39.x = x19;
						_this39.y = y24;
						var _this40 = child4.motion.velocity;
						var angle4 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
						var speed1 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
						var rad8 = angle4 * kala_math_Mathf.CONST_RAD;
						var tmp21;
						if(_this40._speedUpdated) {
							tmp21 = _this40._speed;
						} else {
							_this40._speedUpdated = true;
							var tmp22 = _this40._x;
							var deg12;
							if(_this40._angleUpdated) {
								deg12 = _this40._angle;
							} else {
								_this40._angleUpdated = true;
								deg12 = _this40._angle = Math.atan2(_this40._y,_this40._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp21 = _this40._speed = tmp22 / Math.cos(deg12 * kala_math_Mathf.CONST_RAD);
						}
						_this40._x = tmp21 * Math.cos(rad8);
						var tmp23;
						if(_this40._speedUpdated) {
							tmp23 = _this40._speed;
						} else {
							_this40._speedUpdated = true;
							var tmp24 = _this40._x;
							var deg13;
							if(_this40._angleUpdated) {
								deg13 = _this40._angle;
							} else {
								_this40._angleUpdated = true;
								deg13 = _this40._angle = Math.atan2(_this40._y,_this40._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp23 = _this40._speed = tmp24 / Math.cos(deg13 * kala_math_Mathf.CONST_RAD);
						}
						_this40._y = tmp23 * Math.sin(rad8);
						_this40._angleUpdated = true;
						_this40._angle = angle4;
						var deg14;
						if(_this40._angleUpdated) {
							deg14 = _this40._angle;
						} else {
							_this40._angleUpdated = true;
							deg14 = _this40._angle = Math.atan2(_this40._y,_this40._x) * kala_math_Mathf.CONST_DEG;
						}
						var rad9 = deg14 * kala_math_Mathf.CONST_RAD;
						_this40._x = speed1 * Math.cos(rad9);
						_this40._y = speed1 * Math.sin(rad9);
						_this40._speedUpdated = true;
						_this40._speed = speed1;
						child4.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
						child4.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
						child4.opacity = 0;
						child4.set_hp(9);
					}
				};
				var _gthis4 = enemy9;
				var value8 = enemy9.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var x20 = Math.max(enemy9.halfWidth,Math.min(700 - enemy9.halfWidth,value8));
				var value9 = enemy9.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var y25 = Math.max(enemy9.halfHeight,Math.min(200,value9));
				var x110 = enemy9.position.x;
				var y111 = enemy9.position.y;
				var t4 = Math.sqrt((x110 - x20) * (x110 - x20) + (y111 - y25) * (y111 - y25)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
				var _this41 = enemy9.tween;
				var target4 = null;
				var ease4 = null;
				if(target4 == null) {
					target4 = _this41.object;
				}
				if(ease4 == null) {
					ease4 = kala_behaviors_tween_Ease.linear;
				}
				enemy9.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this41,null,target4,ease4,null);
				var _this42 = enemy9.moveRandomTimeline;
				var task4 = kala_behaviors_tween_TweenTask.create();
				task4.init(enemy9,{ x : x20, y : y25},t4,kala_behaviors_tween_Ease.sineInOut,null);
				task4.backwardEase = null;
				_this42.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task4));
				_this42.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_8) {
					actionCB4();
				}));
				_this42.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
				_this42.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_9) {
					_gthis4.moveRandom(actionCB4);
				}));
				_this42.manager._tweens.push(_this42);
				_this42.nextNode();
				break;
			case 2:
				var x21 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy10 = enemies_EnemyD.pool.get();
				enemy10.revive();
				var _this43 = enemy10.position;
				_this43.x = x21;
				_this43.y = -160;
				enemy10.set_hp(150);
				var actionCB5 = function() {
					var n2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
					var _this44 = G.sfxGroup;
					var volume2 = n2 / 15;
					var channel5 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this44,false);
					channel5._volume = volume2;
					channel5.channel.set_volume(_this44.muted?0:volume2 * _this44._volume);
					_this44.channels.push(channel5);
					var _g13 = 0;
					while(_g13 < n2) {
						++_g13;
						var child5 = enemies_EnemyD.childGroup.createAlive();
						var x22 = enemy10.position.x;
						var y26 = enemy10.position.y + enemy10.sprite.position.y;
						var _this45 = child5.position;
						_this45.x = x22;
						_this45.y = y26;
						var _this46 = child5.motion.velocity;
						var angle5 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
						var speed2 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
						var rad10 = angle5 * kala_math_Mathf.CONST_RAD;
						var tmp25;
						if(_this46._speedUpdated) {
							tmp25 = _this46._speed;
						} else {
							_this46._speedUpdated = true;
							var tmp26 = _this46._x;
							var deg15;
							if(_this46._angleUpdated) {
								deg15 = _this46._angle;
							} else {
								_this46._angleUpdated = true;
								deg15 = _this46._angle = Math.atan2(_this46._y,_this46._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp25 = _this46._speed = tmp26 / Math.cos(deg15 * kala_math_Mathf.CONST_RAD);
						}
						_this46._x = tmp25 * Math.cos(rad10);
						var tmp27;
						if(_this46._speedUpdated) {
							tmp27 = _this46._speed;
						} else {
							_this46._speedUpdated = true;
							var tmp28 = _this46._x;
							var deg16;
							if(_this46._angleUpdated) {
								deg16 = _this46._angle;
							} else {
								_this46._angleUpdated = true;
								deg16 = _this46._angle = Math.atan2(_this46._y,_this46._x) * kala_math_Mathf.CONST_DEG;
							}
							tmp27 = _this46._speed = tmp28 / Math.cos(deg16 * kala_math_Mathf.CONST_RAD);
						}
						_this46._y = tmp27 * Math.sin(rad10);
						_this46._angleUpdated = true;
						_this46._angle = angle5;
						var deg17;
						if(_this46._angleUpdated) {
							deg17 = _this46._angle;
						} else {
							_this46._angleUpdated = true;
							deg17 = _this46._angle = Math.atan2(_this46._y,_this46._x) * kala_math_Mathf.CONST_DEG;
						}
						var rad11 = deg17 * kala_math_Mathf.CONST_RAD;
						_this46._x = speed2 * Math.cos(rad11);
						_this46._y = speed2 * Math.sin(rad11);
						_this46._speedUpdated = true;
						_this46._speed = speed2;
						child5.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
						child5.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
						child5.opacity = 0;
						child5.set_hp(9);
					}
				};
				var _gthis5 = enemy10;
				var value10 = enemy10.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var x23 = Math.max(enemy10.halfWidth,Math.min(700 - enemy10.halfWidth,value10));
				var value11 = enemy10.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
				var y27 = Math.max(enemy10.halfHeight,Math.min(200,value11));
				var x111 = enemy10.position.x;
				var y112 = enemy10.position.y;
				var t5 = Math.sqrt((x111 - x23) * (x111 - x23) + (y112 - y27) * (y112 - y27)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
				var _this47 = enemy10.tween;
				var target5 = null;
				var ease5 = null;
				if(target5 == null) {
					target5 = _this47.object;
				}
				if(ease5 == null) {
					ease5 = kala_behaviors_tween_Ease.linear;
				}
				enemy10.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this47,null,target5,ease5,null);
				var _this48 = enemy10.moveRandomTimeline;
				var task5 = kala_behaviors_tween_TweenTask.create();
				task5.init(enemy10,{ x : x23, y : y27},t5,kala_behaviors_tween_Ease.sineInOut,null);
				task5.backwardEase = null;
				_this48.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task5));
				_this48.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_10) {
					actionCB5();
				}));
				_this48.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
				_this48.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_11) {
					_gthis5.moveRandom(actionCB5);
				}));
				_this48.manager._tweens.push(_this48);
				_this48.nextNode();
				break;
			}
			break;
		}
	}
	,resetBossRevivingCondition: function() {
		this.framesLeftUntilBoss = 2000;
		this.killsLeftUntilBoss = 12;
	}
	,__class__: states_PlayState
});
var kala_behaviors_display_SpriteAnimation = function(sprite) {
	this.animations = new haxe_ds_StringMap();
	kala_behaviors_Behavior.call(this,null);
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onAnimComplete = handle;
	if(sprite != null) {
		this.addTo(sprite);
	}
};
$hxClasses["kala.behaviors.display.SpriteAnimation"] = kala_behaviors_display_SpriteAnimation;
kala_behaviors_display_SpriteAnimation.__name__ = ["kala","behaviors","display","SpriteAnimation"];
kala_behaviors_display_SpriteAnimation.__super__ = kala_behaviors_Behavior;
kala_behaviors_display_SpriteAnimation.prototype = $extend(kala_behaviors_Behavior.prototype,{
	animations: null
	,anim: null
	,frame: null
	,delay: null
	,reversed: null
	,timeLeft: null
	,onAnimComplete: null
	,_lastAddedKey: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		this.removeAllAnimations();
		this.anim = null;
		this.timeLeft = 0;
	}
	,destroy: function() {
		kala_behaviors_Behavior.prototype.destroy.call(this);
		this.anim = null;
		this.removeAllAnimations();
		this.animations = null;
		while(this._cbHandles.length > 0) this._cbHandles.pop().destroy();
		this._cbHandles = null;
		this.onAnimComplete = null;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		object.onPostUpdate._callbacks.push(new kala_Callback($bind(this,this.update),this));
		object.animation = this;
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			this.object.onPostUpdate.removePrivateCB(this,$bind(this,this.update));
			this.object.animation = null;
		}
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,play: function(key,delay,reversed,forceReplay) {
		if(forceReplay == null) {
			forceReplay = false;
		}
		if(reversed == null) {
			reversed = false;
		}
		if(key == null) {
			if(this._lastAddedKey == null) {
				return null;
			}
			key = this._lastAddedKey;
		}
		if(this.anim != null && key == this.anim.key && !forceReplay && (delay == null || _$UInt_UInt_$Impl_$.toFloat(delay) == this.delay) && reversed == this.reversed) {
			return this;
		}
		var _this = this.animations;
		this.anim = __map_reserved[key] != null?_this.getReserved(key):_this.h[key];
		if(this.anim != null) {
			var value = this.timeLeft = delay == null?this.anim.delay:_$UInt_UInt_$Impl_$.toFloat(delay);
			if(value > -1 && this.timeLeft > value) {
				this.timeLeft = value;
			}
			this.delay = value;
			this.reversed = reversed;
			var _this1 = this.object.frameRect;
			var rect = this.anim.frames[this.frame = reversed?this.anim.frames.length - 1:0];
			_this1.x = rect.x;
			_this1.y = rect.y;
			_this1.width = rect.width;
			_this1.height = rect.height;
			if(this.anim.image != null) {
				this.object.image = this.anim.image;
			}
		} else {
			return null;
		}
		return this;
	}
	,pause: function() {
		this.delay = -1;
	}
	,addAnim: function(key,image,sheetX,sheetY,frameWidth,frameHeight,totalFrames,framesPerRow,delay) {
		if(image == null && (this.object == null || this.object.image == null) || this.object == null && (sheetX < 0 || sheetY < 0 || frameWidth == 0 || frameHeight == 0)) {
			return null;
		}
		if(image == null) {
			image = this.object.image;
		} else {
			this.object.image = image;
		}
		if(sheetX < 0) {
			sheetX = this.object.frameRect.x;
		} else {
			this.object.frameRect.x = sheetX;
		}
		if(sheetY < 0) {
			sheetY = this.object.frameRect.y;
		} else {
			this.object.frameRect.y = sheetY;
		}
		if(frameWidth == 0) {
			frameWidth = this.object.frameRect.width;
		} else {
			this.object.frameRect.width = frameWidth;
		}
		if(frameHeight == 0) {
			frameHeight = this.object.frameRect.height;
		} else {
			this.object.frameRect.height = frameHeight;
		}
		var anim = new kala_behaviors_display_SpriteAnimationData(key,image,delay);
		var col = 0;
		var row = 0;
		var _g1 = 0;
		var _g = totalFrames;
		while(_g1 < _g) {
			++_g1;
			anim.frames.push(new kala_math_RectI(sheetX + frameWidth * col,sheetY + frameHeight * row,frameWidth,frameHeight));
			++col;
			if(col == framesPerRow) {
				col = 0;
				++row;
			}
		}
		var _this = this.animations;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,anim);
		} else {
			_this.h[key] = anim;
		}
		this._lastAddedKey = key;
		return this;
	}
	,addAnimFromSpriteData: function(key,image,data,delay) {
		if(key == null) {
			key = data.key;
		}
		if(image == null) {
			if(data.image == null) {
				image = this.object.image;
			} else {
				image = data.image;
			}
		}
		this.object.image = image;
		var _this = this.object.frameRect;
		var rect = data.frames[0];
		_this.x = rect.x;
		_this.y = rect.y;
		_this.width = rect.width;
		_this.height = rect.height;
		var anim = new kala_behaviors_display_SpriteAnimationData(key,image,delay);
		var _g = 0;
		var _g1 = data.frames;
		while(_g < _g1.length) {
			var frame = _g1[_g];
			++_g;
			anim.frames.push(new kala_math_RectI(frame.x,frame.y,frame.width,frame.height));
		}
		var _this1 = this.animations;
		if(__map_reserved[key] != null) {
			_this1.setReserved(key,anim);
		} else {
			_this1.h[key] = anim;
		}
		this._lastAddedKey = key;
		return this;
	}
	,removeAnim: function(key) {
		this.animations.remove(key);
		if(this._lastAddedKey == key) {
			this._lastAddedKey = null;
		}
		return this;
	}
	,getAnimations: function() {
		var array = [];
		var tmp = this.animations.keys();
		while(tmp.hasNext()) {
			var key = tmp.next();
			var _this = this.animations;
			array.push(__map_reserved[key] != null?_this.getReserved(key):_this.h[key]);
		}
		return array;
	}
	,removeAllAnimations: function() {
		var tmp = this.animations.keys();
		while(tmp.hasNext()) this.animations.remove(tmp.next());
	}
	,update: function(obj,elapsed) {
		if(this.anim != null && this.delay > -1) {
			this.timeLeft -= elapsed;
			if(this.timeLeft <= 0) {
				this.timeLeft = this.delay;
				if(!this.reversed) {
					if(this.frame < this.anim.frames.length - 1) {
						var _g = this;
						var _this = _g.object.frameRect;
						var rect = _g.anim.frames[_g.frame = _g.frame + 1];
						_this.x = rect.x;
						_this.y = rect.y;
						_this.width = rect.width;
						_this.height = rect.height;
					} else {
						var _this1 = this.object.frameRect;
						this.frame = 0;
						var rect1 = this.anim.frames[0];
						_this1.x = rect1.x;
						_this1.y = rect1.y;
						_this1.width = rect1.width;
						_this1.height = rect1.height;
						var tmp = HxOverrides.iter(this.onAnimComplete._callbacks);
						while(tmp.hasNext()) tmp.next().cbFunction(this);
					}
				} else if(this.frame > 0) {
					var _g1 = this;
					var _this2 = _g1.object.frameRect;
					var rect2 = _g1.anim.frames[_g1.frame = _g1.frame - 1];
					_this2.x = rect2.x;
					_this2.y = rect2.y;
					_this2.width = rect2.width;
					_this2.height = rect2.height;
				} else {
					var _this3 = this.object.frameRect;
					var rect3 = this.anim.frames[this.frame = this.anim.frames.length - 1];
					_this3.x = rect3.x;
					_this3.y = rect3.y;
					_this3.width = rect3.width;
					_this3.height = rect3.height;
					var tmp1 = HxOverrides.iter(this.onAnimComplete._callbacks);
					while(tmp1.hasNext()) tmp1.next().cbFunction(this);
				}
			}
		}
	}
	,set_frame: function(value) {
		var _this = this.object.frameRect;
		var rect = this.anim.frames[this.frame = value];
		_this.x = rect.x;
		_this.y = rect.y;
		_this.width = rect.width;
		_this.height = rect.height;
		return value;
	}
	,set_delay: function(value) {
		if(value > -1 && this.timeLeft > value) {
			this.timeLeft = value;
		}
		return this.delay = value;
	}
	,__class__: kala_behaviors_display_SpriteAnimation
	,__properties__: {set_delay:"set_delay",set_frame:"set_frame"}
});
var enemies_Boss = function() {
	var _gthis = this;
	enemies_Enemy.call(this);
	this.sprite.loadSpriteData(R.boss);
	this.hpText.position.x = this.halfWidth = this.sprite.get_width() / 2;
	this.hpText.position.y = 50;
	this.hpText.set_size(90);
	var x = this.halfWidth;
	var radius = this.halfWidth - 90;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this = circle.position;
	_this.x = x;
	_this.y = 0;
	circle.radius = radius;
	this.collider._shapes.push(circle);
	this.mask = circle;
	this.mask.dynamicPosition = false;
	this.leftThrone = new kala_objects_sprite_Sprite().loadSpriteData(R.bossThroneBig);
	var _this1 = this.leftThrone;
	_this1.scale.ox = _this1.rotation.px = _this1.get_width() / 2;
	_this1.scale.oy = _this1.rotation.py = _this1.get_height() / 2;
	this.leftThrone.position.x = -this.leftThrone.get_width();
	this.leftThrone.position.y = 200;
	this.rightThrone = new kala_objects_sprite_Sprite().loadSpriteData(R.bossThroneSmall);
	var _this2 = this.rightThrone;
	_this2.scale.ox = _this2.rotation.px = _this2.get_width() / 2;
	_this2.scale.oy = _this2.rotation.py = _this2.get_height() / 2;
	this.rightThrone.position.x = 700;
	this.rightThrone.position.y = 280;
	this.leftThroneCollider = new kala_behaviors_collision_basic_Collider(this.leftThrone);
	var x1 = this.leftThrone.get_width() / 2 - 5;
	var y = this.leftThrone.get_height() / 2 + 2;
	var circle1 = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle1.reset();
	var _this3 = circle1.position;
	_this3.x = x1;
	_this3.y = y;
	circle1.radius = 107;
	this.leftThroneCollider._shapes.push(circle1);
	this.leftThroneMask = circle1;
	this.rightThroneCollider = new kala_behaviors_collision_basic_Collider(this.rightThrone);
	var x2 = this.rightThrone.get_width() / 2 - 4;
	var y1 = this.rightThrone.get_height() / 2 - 6;
	var circle2 = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle2.reset();
	var _this4 = circle2.position;
	_this4.x = x2;
	_this4.y = y1;
	circle2.radius = 65;
	this.rightThroneCollider._shapes.push(circle2);
	this.rightThroneMask = circle2;
	var _this5 = this.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this5.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this6 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this5,null,target,ease,null);
	_this6.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
	var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
	timeline.init(_this6.manager,_this6,null,null,null);
	timeline.loopsLeft = 0 - 1;
	_this6.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(this.scale,{ y : 0.9},20,kala_behaviors_tween_Ease.quadIn,null);
	task.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(this.scale,{ y : 1},20,kala_behaviors_tween_Ease.quadInOut,null);
	task1.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	var _this7 = timeline.parent;
	var timeline1 = kala_behaviors_tween_TweenTimeline.pool.get();
	timeline1.init(_this7.manager,_this7,null,null,null);
	timeline1.loopsLeft = 0 - 1;
	_this7.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline1));
	timeline1.nodes.push(kala_behaviors_tween_TweenNode.WAIT_EX(function(_) {
		return kala_math__$Random_Random_$Impl_$.instance.GetIn(50,100);
	}));
	timeline1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
		if(_gthis.hp > 0) {
			var x3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50?kala_math__$Random_Random_$Impl_$.instance.GetIn(80,620):player_Player.instance.position.x;
			var lightning = enemies_Boss.lightningGroup.createAlive();
			lightning.position.x = x3;
			lightning.scale.x = 0;
			var _this8 = lightning.tween;
			var target1 = null;
			var ease1 = null;
			if(target1 == null) {
				target1 = _this8.object;
			}
			if(ease1 == null) {
				ease1 = kala_behaviors_tween_Ease.linear;
			}
			var _this9 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this8,null,target1,ease1,null);
			_this9.nodes.push(kala_behaviors_tween_TweenNode.WAIT(40));
			_this9.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
				var _this10 = G.sfxGroup;
				var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.lightning,false),_this10,false);
				channel._volume = 0.5;
				channel.channel.set_volume(_this10.muted?0:0.5 * _this10._volume);
				_this10.channels.push(channel);
			}));
			_this9.manager._tweens.push(_this9);
			_this9.nextNode();
			var _this11 = lightning.tween;
			var target2 = null;
			var ease2 = null;
			if(target2 == null) {
				target2 = _this11.object;
			}
			if(ease2 == null) {
				ease2 = kala_behaviors_tween_Ease.linear;
			}
			var _this12 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this11,null,target2,ease2,null);
			var vars = { x : kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1};
			var task2 = kala_behaviors_tween_TweenTask.create();
			task2.init(lightning.scale,vars,50,kala_behaviors_tween_Ease.elasticIn,null);
			task2.backwardEase = null;
			_this12.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
			_this12.nodes.push(kala_behaviors_tween_TweenNode.WAIT(25));
			var task3 = kala_behaviors_tween_TweenTask.create();
			task3.init(lightning.scale,{ x : 0},30,kala_behaviors_tween_Ease.elasticInOut,null);
			task3.backwardEase = null;
			_this12.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
			_this12.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_3) {
				lightning.kill();
			}));
			_this12.manager._tweens.push(_this12);
			_this12.nextNode();
		}
	}));
	var _this13 = timeline1.parent;
	_this13.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
	_this13.manager._tweens.push(_this13);
	_this13.nextNode();
	this.bodyAtkOn = false;
};
$hxClasses["enemies.Boss"] = enemies_Boss;
enemies_Boss.__name__ = ["enemies","Boss"];
enemies_Boss.__super__ = enemies_Enemy;
enemies_Boss.prototype = $extend(enemies_Enemy.prototype,{
	leftThrone: null
	,rightThrone: null
	,leftThroneCollider: null
	,leftThroneMask: null
	,rightThroneCollider: null
	,rightThroneMask: null
	,timeline: null
	,revive: function() {
		this.deathEffect.alive = false;
		this.alive = this.leftThrone.alive = this.rightThrone.alive = true;
		this.set_hp(2000);
		this.position.y = -this.sprite.get_height();
		if(this.timeline != null) {
			this.timeline.cancel();
		}
		var _this = this.tween;
		var target = kala_behaviors_tween_Ease.sineInOut;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		this.timeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var _this1 = this.timeline;
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this,{ y : 0},75,kala_behaviors_tween_Ease.sineOut,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
		timeline.init(_this1.manager,_this1,null,null,null);
		timeline.loopsLeft = 0 - 1;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
		timeline.nodes.push(kala_behaviors_tween_TweenNode.WAIT_EX(function(_) {
			return kala_math__$Random_Random_$Impl_$.instance.GetIn(60,120);
		}));
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.leftThrone,{ x : -160},200,null,null);
		task1.backwardEase = null;
		timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		timeline.nodes.push(kala_behaviors_tween_TweenNode.WAIT_EX(function(_1) {
			return kala_math__$Random_Random_$Impl_$.instance.GetIn(30,60);
		}));
		var vars = { x : -this.leftThrone.get_width()};
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(this.leftThrone,vars,200,null,null);
		task2.backwardEase = null;
		timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		var _this2 = timeline.parent;
		var timeline1 = kala_behaviors_tween_TweenTimeline.pool.get();
		timeline1.init(_this2.manager,_this2,null,null,null);
		timeline1.loopsLeft = 0 - 1;
		_this2.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline1));
		timeline1.nodes.push(kala_behaviors_tween_TweenNode.WAIT_EX(function(_2) {
			return kala_math__$Random_Random_$Impl_$.instance.GetIn(40,80);
		}));
		var vars1 = { x : 700 - this.rightThrone.get_width() + 100};
		var task3 = kala_behaviors_tween_TweenTask.create();
		task3.init(this.rightThrone,vars1,100,null,null);
		task3.backwardEase = null;
		timeline1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
		timeline1.nodes.push(kala_behaviors_tween_TweenNode.WAIT_EX(function(_3) {
			return kala_math__$Random_Random_$Impl_$.instance.GetIn(30,60);
		}));
		var task4 = kala_behaviors_tween_TweenTask.create();
		task4.init(this.rightThrone,{ x : 700},100,null,null);
		task4.backwardEase = null;
		timeline1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task4));
		var _this3 = timeline1.parent;
		_this3.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this3.manager._tweens.push(_this3);
		_this3.nextNode();
		this.player = states_PlayState.instance.player;
	}
	,kill: function() {
		var _gthis = this;
		this.timeline.cancel();
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var vars = { y : -this.sprite.get_height()};
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this,vars,150,kala_behaviors_tween_Ease.sineIn,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var vars1 = { x : -this.leftThrone.get_width()};
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.leftThrone,vars1,120,null,null);
		task1.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(this.rightThrone,{ x : 700},120,null,null);
		task2.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
		timeline.init(_this1.manager,_this1,null,null,null);
		timeline.loopsLeft = 8 - 1;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
		timeline.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			var _g1 = 0;
			var _g = Math.round(15 * UpgradeData.gemDropFactor);
			while(_g1 < _g) {
				++_g1;
				var x = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,700);
				var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(-90,-20);
				var gem = enemies_Gem.group.createAlive();
				var _this2 = gem.position;
				_this2.x = x;
				_this2.y = y;
				gem.scale.x = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
				gem.scale.y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
				gem.angleOffset = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-90,90);
				gem.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-4,4);
				gem.vspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-2,-6);
				gem.time = 30;
			}
		}));
		timeline.nodes.push(kala_behaviors_tween_TweenNode.WAIT(20));
		var _this3 = timeline.parent;
		_this3.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.sleep();
		}));
		_this3.manager._tweens.push(_this3);
		_this3.nextNode();
		this.deathEffect.alive = true;
	}
	,update: function(elapsed) {
		enemies_Enemy.prototype.update.call(this,elapsed);
		this.leftThrone.rotation.angle++;
		this.rightThrone.rotation.angle -= 0.7;
	}
	,updateAlive: function(elapsed) {
		enemies_Enemy.prototype.updateAlive.call(this,elapsed);
		this.mask.position.y = -235 + 100 * this.scale.y;
		if(this.player.lives > 0 && this.player.flicker.flickersLeft == 0) {
			if(this.player.position.x < 350.) {
				if(this.leftThroneMask.get_available() && this.leftThroneMask.testCircle(this.player.mask)) {
					this.player.getHit();
				}
			} else if(this.rightThroneMask.get_available() && this.rightThroneMask.testCircle(this.player.mask)) {
				this.player.getHit();
			}
		}
	}
	,sleep: function() {
		this.alive = this.leftThrone.alive = this.rightThrone.alive = false;
		this.leftThrone.position.x = -this.leftThrone.get_width();
		this.rightThrone.position.x = 700;
		this.position.y = -this.sprite.get_height();
	}
	,__class__: enemies_Boss
});
var kala_behaviors_collision_BaseCollisionShape = function() {
	this.position = new kala_math_Vec2T(0,0,0,0);
};
$hxClasses["kala.behaviors.collision.BaseCollisionShape"] = kala_behaviors_collision_BaseCollisionShape;
kala_behaviors_collision_BaseCollisionShape.__name__ = ["kala","behaviors","collision","BaseCollisionShape"];
kala_behaviors_collision_BaseCollisionShape.prototype = {
	position: null
	,active: null
	,reset: function() {
		var _this = this.position;
		_this.ox = 0;
		_this.oy = 0;
		this.active = true;
	}
	,destroy: function() {
		this.position = null;
	}
	,put: function() {
	}
	,testPoint: function(pointX,pointY) {
		return false;
	}
	,update: function(objectMatrix) {
	}
	,get_available: function() {
		return false;
	}
	,__class__: kala_behaviors_collision_BaseCollisionShape
	,__properties__: {get_available:"get_available"}
};
var kala_behaviors_collision_basic_shapes_CollisionShape = function() {
	kala_behaviors_collision_BaseCollisionShape.call(this);
};
$hxClasses["kala.behaviors.collision.basic.shapes.CollisionShape"] = kala_behaviors_collision_basic_shapes_CollisionShape;
kala_behaviors_collision_basic_shapes_CollisionShape.__name__ = ["kala","behaviors","collision","basic","shapes","CollisionShape"];
kala_behaviors_collision_basic_shapes_CollisionShape.__super__ = kala_behaviors_collision_BaseCollisionShape;
kala_behaviors_collision_basic_shapes_CollisionShape.prototype = $extend(kala_behaviors_collision_BaseCollisionShape.prototype,{
	type: null
	,dynamicPosition: null
	,absX: null
	,absY: null
	,reset: function() {
		kala_behaviors_collision_BaseCollisionShape.prototype.reset.call(this);
		this.dynamicPosition = true;
	}
	,test: function(shape) {
		switch(shape.type) {
		case 0:
			return this.testCircle(shape);
		case 1:
			return this.testRect(shape);
		}
	}
	,testCircle: function(circle) {
		return false;
	}
	,testRect: function(rect) {
		return false;
	}
	,drawDebug: function(fill,lineStrenght,canvas) {
		if(lineStrenght == null) {
			lineStrenght = 1;
		}
		if(fill == null) {
			fill = false;
		}
		var _this = canvas.get_g2();
		var this1 = new kha_math_FastMatrix3(1,0,this.absX,0,1,this.absY,0,0,1);
		_this.setTransformation(this1);
		_this.transformations[_this.transformations.length - 1] = this1;
	}
	,update: function(objectMatrix) {
		var matrix;
		if(this.dynamicPosition) {
			var this1 = this.position;
			var x = this1.x - this1.ox;
			var this2 = this.position;
			var this3 = new kha_math_FastMatrix3(1,0,x,0,1,this2.y - this2.oy,0,0,1);
			matrix = new kha_math_FastMatrix3(objectMatrix._00 * this3._00 + objectMatrix._10 * this3._01 + objectMatrix._20 * this3._02,objectMatrix._00 * this3._10 + objectMatrix._10 * this3._11 + objectMatrix._20 * this3._12,objectMatrix._00 * this3._20 + objectMatrix._10 * this3._21 + objectMatrix._20 * this3._22,objectMatrix._01 * this3._00 + objectMatrix._11 * this3._01 + objectMatrix._21 * this3._02,objectMatrix._01 * this3._10 + objectMatrix._11 * this3._11 + objectMatrix._21 * this3._12,objectMatrix._01 * this3._20 + objectMatrix._11 * this3._21 + objectMatrix._21 * this3._22,objectMatrix._02 * this3._00 + objectMatrix._12 * this3._01 + objectMatrix._22 * this3._02,objectMatrix._02 * this3._10 + objectMatrix._12 * this3._11 + objectMatrix._22 * this3._12,objectMatrix._02 * this3._20 + objectMatrix._12 * this3._21 + objectMatrix._22 * this3._22);
		} else {
			var this4 = this.position;
			var x1 = this4.x - this4.ox;
			var this5 = this.position;
			var this6 = new kha_math_FastMatrix3(1,0,x1,0,1,this5.y - this5.oy,0,0,1);
			matrix = new kha_math_FastMatrix3(this6._00 * objectMatrix._00 + this6._10 * objectMatrix._01 + this6._20 * objectMatrix._02,this6._00 * objectMatrix._10 + this6._10 * objectMatrix._11 + this6._20 * objectMatrix._12,this6._00 * objectMatrix._20 + this6._10 * objectMatrix._21 + this6._20 * objectMatrix._22,this6._01 * objectMatrix._00 + this6._11 * objectMatrix._01 + this6._21 * objectMatrix._02,this6._01 * objectMatrix._10 + this6._11 * objectMatrix._11 + this6._21 * objectMatrix._12,this6._01 * objectMatrix._20 + this6._11 * objectMatrix._21 + this6._21 * objectMatrix._22,this6._02 * objectMatrix._00 + this6._12 * objectMatrix._01 + this6._22 * objectMatrix._02,this6._02 * objectMatrix._10 + this6._12 * objectMatrix._11 + this6._22 * objectMatrix._12,this6._02 * objectMatrix._20 + this6._12 * objectMatrix._21 + this6._22 * objectMatrix._22);
		}
		this.absX = matrix._20;
		this.absY = matrix._21;
	}
	,get_available: function() {
		if(this.absX != null) {
			return this.absY != null;
		} else {
			return false;
		}
	}
	,__class__: kala_behaviors_collision_basic_shapes_CollisionShape
});
var kala_util_pool_Pool = function(factoryFunction) {
	this._objects = [];
	this.factoryFunction = factoryFunction;
};
$hxClasses["kala.util.pool.Pool"] = kala_util_pool_Pool;
kala_util_pool_Pool.__name__ = ["kala","util","pool","Pool"];
kala_util_pool_Pool.prototype = {
	factoryFunction: null
	,_objects: null
	,destroy: function() {
		this.factoryFunction = null;
		this._objects = null;
	}
	,get: function() {
		if(this._objects.length > 0) {
			return this._objects.pop();
		}
		if(this.factoryFunction != null) {
			return this.factoryFunction();
		}
		return null;
	}
	,putUnsafe: function(obj) {
		if(obj != null) {
			this._objects.push(obj);
		}
	}
	,put: function(obj) {
		if(obj != null && this._objects.indexOf(obj) == -1) {
			this._objects.push(obj);
		}
	}
	,__class__: kala_util_pool_Pool
};
var kala_behaviors_collision_basic_shapes_CollisionCircle = function() {
	kala_behaviors_collision_basic_shapes_CollisionShape.call(this);
	this.type = 0;
};
$hxClasses["kala.behaviors.collision.basic.shapes.CollisionCircle"] = kala_behaviors_collision_basic_shapes_CollisionCircle;
kala_behaviors_collision_basic_shapes_CollisionCircle.__name__ = ["kala","behaviors","collision","basic","shapes","CollisionCircle"];
kala_behaviors_collision_basic_shapes_CollisionCircle.get = function() {
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	return circle;
};
kala_behaviors_collision_basic_shapes_CollisionCircle.__super__ = kala_behaviors_collision_basic_shapes_CollisionShape;
kala_behaviors_collision_basic_shapes_CollisionCircle.prototype = $extend(kala_behaviors_collision_basic_shapes_CollisionShape.prototype,{
	radius: null
	,testCircle: function(circle) {
		var circleAX = this.absX;
		var circleAY = this.absY;
		var circleARadius = this.radius;
		var circleBX = circle.absX;
		var circleBY = circle.absY;
		var totalRadius = circleARadius + circle.radius;
		return (circleAX - circleBX) * (circleAX - circleBX) + (circleAY - circleBY) * (circleAY - circleBY) < totalRadius * totalRadius;
	}
	,testRect: function(rect) {
		var circleX = this.absX;
		var circleY = this.absY;
		var circleRadius = this.radius;
		var rectX = rect.absX;
		var rectY = rect.absY;
		var rectWidth = rect.width;
		var rectHeight = rect.height;
		var dx = circleX - Math.max(rectX,Math.min(rectX + rectWidth,circleX));
		var dy = circleY - Math.max(rectY,Math.min(rectY + rectHeight,circleY));
		return dx * dx + dy * dy < circleRadius * circleRadius;
	}
	,drawDebug: function(fill,lineStrenght,canvas) {
		if(lineStrenght == null) {
			lineStrenght = 1;
		}
		if(fill == null) {
			fill = false;
		}
		kala_behaviors_collision_basic_shapes_CollisionShape.prototype.drawDebug.call(this,fill,lineStrenght,canvas);
		if(fill) {
			kha_graphics2_GraphicsExtension.fillCircle(canvas.get_g2(),0,0,this.radius);
		} else {
			kha_graphics2_GraphicsExtension.drawCircle(canvas.get_g2(),0,0,this.radius,lineStrenght);
		}
	}
	,__class__: kala_behaviors_collision_basic_shapes_CollisionCircle
});
var kala_objects_text_BasicText = function(text,font,size) {
	if(size == null) {
		size = 24;
	}
	kala_objects_Object.call(this);
	this._text = text;
	this.set_size(size);
	this.set_font(font);
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onTextChange = handle;
};
$hxClasses["kala.objects.text.BasicText"] = kala_objects_text_BasicText;
kala_objects_text_BasicText.__name__ = ["kala","objects","text","BasicText"];
kala_objects_text_BasicText.__super__ = kala_objects_Object;
kala_objects_text_BasicText.prototype = $extend(kala_objects_Object.prototype,{
	_text: null
	,font: null
	,size: null
	,bold: null
	,italic: null
	,underlined: null
	,onTextChange: null
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		this.set_bold(false);
		this.italic = false;
		this.underlined = false;
		kala_objects_Object.prototype.reset.call(this,resetBehaviors);
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_Object.prototype.destroy.call(this,destroyBehaviors);
		this.set_font(null);
		this.onTextChange = null;
	}
	,draw: function(data,canvas) {
		this.applyDrawingData(data,canvas);
		var g2 = canvas.get_g2();
		g2.set_font(this.font);
		g2.set_fontSize(this.size);
		g2.drawString(this.get_text(),0,0);
	}
	,isVisible: function() {
		if(kala_objects_Object.prototype.isVisible.call(this) && this._text != null && this._text.length > 0 && this.font != null) {
			return _$UInt_UInt_$Impl_$.gt(this.size,0);
		} else {
			return false;
		}
	}
	,get_width: function() {
		var this1 = this.font;
		var str = this.get_text();
		var size = this.size;
		if(js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)) {
			return 0;
		} else {
			return this1.width(size,str);
		}
	}
	,get_height: function() {
		var this1 = this.font;
		var size = this.size;
		if(js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)) {
			return 0;
		} else {
			return this1.height(size);
		}
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		var prvText = this._text;
		this._text = value;
		var tmp = HxOverrides.iter(this.onTextChange._callbacks);
		while(tmp.hasNext()) tmp.next().cbFunction(this,prvText);
		return value;
	}
	,set_font: function(value) {
		if(value == null) {
			this.font = kala_Kala.defaultFont;
		} else {
			this.font = value;
		}
		return this.font;
	}
	,set_size: function(value) {
		return this.size = value;
	}
	,set_bold: function(value) {
		return this.bold = value;
	}
	,__class__: kala_objects_text_BasicText
	,__properties__: $extend(kala_objects_Object.prototype.__properties__,{set_bold:"set_bold",set_size:"set_size",set_font:"set_font",set_text:"set_text",get_text:"get_text"})
});
var kala_behaviors_collision_BaseCollider = function(object) {
	this.available = false;
	this.shapes = [];
	this.debugLineStrenght = 2;
	this.debugFill = false;
	this.debugColor = -65536;
	kala_behaviors_Behavior.call(this,object);
};
$hxClasses["kala.behaviors.collision.BaseCollider"] = kala_behaviors_collision_BaseCollider;
kala_behaviors_collision_BaseCollider.__name__ = ["kala","behaviors","collision","BaseCollider"];
kala_behaviors_collision_BaseCollider.__super__ = kala_behaviors_Behavior;
kala_behaviors_collision_BaseCollider.prototype = $extend(kala_behaviors_Behavior.prototype,{
	debugColor: null
	,debugFill: null
	,debugLineStrenght: null
	,shapes: null
	,available: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		while(this.shapes.length > 0) this.shapes.pop().put();
		this.available = false;
	}
	,destroy: function() {
		kala_behaviors_Behavior.prototype.destroy.call(this);
		while(this.shapes.length > 0) this.shapes.pop().put();
		this.shapes = null;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		object.onPostDraw._callbacks.push(new kala_Callback($bind(this,this.postDrawUpdate),this));
		return this;
	}
	,remove: function() {
		this.available = false;
		this.object.onPostDraw.removePrivateCB(this,$bind(this,this.postDrawUpdate));
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,testPoint: function(pointX,pointY) {
		if(!this.available) {
			return false;
		}
		var _g = 0;
		var _g1 = this.shapes;
		while(_g < _g1.length) {
			var shape = _g1[_g];
			++_g;
			if(shape.active && shape.testPoint(pointX,pointY)) {
				return true;
			}
		}
		return false;
	}
	,drawDebug: function(color,fill,lineStrenght,canvas) {
		if(lineStrenght == null) {
			lineStrenght = 1;
		}
		if(fill == null) {
			fill = false;
		}
		if(this.object == null) {
			return false;
		}
		canvas.get_g2().set_color(color);
		canvas.get_g2().set_opacity(1);
		return true;
	}
	,postDrawUpdate: function(obj,data,canvas) {
		this.available = true;
		var _g = 0;
		var _g1 = this.shapes;
		while(_g < _g1.length) {
			var shape = _g1[_g];
			++_g;
			if(!shape.active) {
				continue;
			}
			shape.update(obj._cachedDrawingMatrix);
		}
	}
	,__class__: kala_behaviors_collision_BaseCollider
});
var kala_behaviors_collision_basic_Collider = function(object) {
	kala_behaviors_collision_BaseCollider.call(this,object);
	this._shapes = this.shapes;
};
$hxClasses["kala.behaviors.collision.basic.Collider"] = kala_behaviors_collision_basic_Collider;
kala_behaviors_collision_basic_Collider.__name__ = ["kala","behaviors","collision","basic","Collider"];
kala_behaviors_collision_basic_Collider.__super__ = kala_behaviors_collision_BaseCollider;
kala_behaviors_collision_basic_Collider.prototype = $extend(kala_behaviors_collision_BaseCollider.prototype,{
	_shapes: null
	,destroy: function() {
		kala_behaviors_collision_BaseCollider.prototype.destroy.call(this);
		this._shapes = null;
	}
	,drawDebug: function(color,fill,lineStrenght,canvas) {
		if(lineStrenght == null) {
			lineStrenght = 1;
		}
		if(fill == null) {
			fill = false;
		}
		if(!kala_behaviors_collision_BaseCollider.prototype.drawDebug.call(this,color,fill,lineStrenght,canvas)) {
			return false;
		}
		var _g = 0;
		var _g1 = this._shapes;
		while(_g < _g1.length) {
			var shape = _g1[_g];
			++_g;
			if(shape.active) {
				shape.drawDebug(fill,lineStrenght,canvas);
			}
		}
		return true;
	}
	,removeShape: function(shape) {
		return HxOverrides.remove(this._shapes,shape);
	}
	,addShape: function(shape) {
		this._shapes.push(shape);
		return shape;
	}
	,addCircle: function(x,y,radius) {
		var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
		circle.reset();
		var _this = circle.position;
		_this.x = x;
		_this.y = y;
		circle.radius = radius;
		this._shapes.push(circle);
		return circle;
	}
	,addRect: function(x,y,width,height) {
		var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
		rect.reset();
		var _this = rect.position;
		_this.x = x;
		_this.y = y;
		rect.width = width;
		rect.height = height;
		this._shapes.push(rect);
		return rect;
	}
	,addObjectRect: function(scaleX,scaleY) {
		if(scaleY == null) {
			scaleY = 1;
		}
		if(scaleX == null) {
			scaleX = 1;
		}
		var width = this.object.get_width() * scaleX;
		var height = this.object.get_height() * scaleY;
		var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
		rect.reset();
		var _this = rect.position;
		_this.x = 0;
		_this.y = 0;
		rect.width = width;
		rect.height = height;
		this._shapes.push(rect);
		var _this1 = rect.position;
		var x = (this.object.get_width() - rect.width) / 2;
		var y = (this.object.get_height() - rect.height) / 2;
		_this1.x = x;
		_this1.y = y;
		return rect;
	}
	,test: function(collider) {
		if(!this.available) {
			return false;
		}
		var _g = 0;
		var _g1 = this._shapes;
		while(_g < _g1.length) {
			var shapeA = _g1[_g];
			++_g;
			if(!shapeA.active) {
				continue;
			}
			var _g2 = 0;
			var _g3 = collider._shapes;
			while(_g2 < _g3.length) {
				var shapeB = _g3[_g2];
				++_g2;
				var tmp;
				if(shapeB.active) {
					switch(shapeB.type) {
					case 0:
						tmp = shapeA.testCircle(shapeB);
						break;
					case 1:
						tmp = shapeA.testRect(shapeB);
						break;
					}
				} else {
					tmp = false;
				}
				if(tmp) {
					return true;
				}
			}
		}
		return false;
	}
	,__class__: kala_behaviors_collision_basic_Collider
});
var enemies_EnemyA = function() {
	enemies_Enemy.call(this);
	this.sprite.loadSpriteData(R.enemyA);
	var x = this.halfWidth = this.scale.ox = this.position.ox = this.sprite.get_width() / 2;
	var y = this.halfHeight = this.sprite.get_height() / 2;
	var radius = this.baseRadius = (this.sprite.get_height() - 90) / 2;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this = circle.position;
	_this.x = x;
	_this.y = y;
	circle.radius = radius;
	this.collider._shapes.push(circle);
	this.mask = circle;
	this.deathEffect.image = this.sprite.image;
	var _this1 = this.deathEffect.frameRect;
	var rect = this.sprite.frameRect;
	_this1.x = rect.x;
	_this1.y = rect.y;
	_this1.width = rect.width;
	_this1.height = rect.height;
	var _this2 = this.deathEffect.position;
	var originX = this.sprite.position.ox;
	var originY = this.sprite.position.oy;
	_this2.ox = originX;
	_this2.oy = originY;
	this.gemDropQuantity = 5;
	this.isSubEnemy = false;
};
$hxClasses["enemies.EnemyA"] = enemies_EnemyA;
enemies_EnemyA.__name__ = ["enemies","EnemyA"];
enemies_EnemyA.create = function(size,x,y) {
	states_PlayState.instance.onScreenEnemyCount++;
	var enemy = enemies_EnemyA.pool.get();
	enemy.revive();
	if(enemy.splitting) {
		enemy.position.oy = enemy.scale.oy = enemy.originY;
	} else {
		enemy.baseScale = size / 4 + 0.25;
		enemy.position.oy = enemy.scale.oy = (enemy.sprite.get_height() - 90) * enemy.baseScale;
	}
	var _this = enemy.scale;
	var x1 = enemy.baseScale;
	var y1 = enemy.baseScale;
	_this.x = x1;
	_this.y = y1;
	enemy.mask.radius = enemy.baseRadius * enemy.baseScale;
	enemy.hspeed = 2 * enemy.baseScale + 2;
	var tmp;
	switch(size) {
	case 1:
		tmp = 25;
		break;
	case 2:
		tmp = 50;
		break;
	case 3:
		tmp = 100;
		break;
	default:
		tmp = 0;
	}
	enemy.set_hp(tmp);
	enemy.size = size;
	var _this1 = enemy.position;
	_this1.x = x;
	_this1.y = y;
	return enemy;
};
enemies_EnemyA.createRandomPos = function(size) {
	if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50) {
		var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy = enemies_EnemyA.pool.get();
		enemy.revive();
		if(enemy.splitting) {
			enemy.position.oy = enemy.scale.oy = enemy.originY;
		} else {
			enemy.baseScale = size / 4 + 0.25;
			enemy.position.oy = enemy.scale.oy = (enemy.sprite.get_height() - 90) * enemy.baseScale;
		}
		var _this = enemy.scale;
		var x = enemy.baseScale;
		var y1 = enemy.baseScale;
		_this.x = x;
		_this.y = y1;
		enemy.mask.radius = enemy.baseRadius * enemy.baseScale;
		enemy.hspeed = 2 * enemy.baseScale + 2;
		var tmp;
		switch(size) {
		case 1:
			tmp = 25;
			break;
		case 2:
			tmp = 50;
			break;
		case 3:
			tmp = 100;
			break;
		default:
			tmp = 0;
		}
		enemy.set_hp(tmp);
		enemy.size = size;
		var _this1 = enemy.position;
		_this1.x = -140;
		_this1.y = y;
	} else {
		var y2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,200);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy1 = enemies_EnemyA.pool.get();
		enemy1.revive();
		if(enemy1.splitting) {
			enemy1.position.oy = enemy1.scale.oy = enemy1.originY;
		} else {
			enemy1.baseScale = size / 4 + 0.25;
			enemy1.position.oy = enemy1.scale.oy = (enemy1.sprite.get_height() - 90) * enemy1.baseScale;
		}
		var _this2 = enemy1.scale;
		var x1 = enemy1.baseScale;
		var y3 = enemy1.baseScale;
		_this2.x = x1;
		_this2.y = y3;
		enemy1.mask.radius = enemy1.baseRadius * enemy1.baseScale;
		enemy1.hspeed = 2 * enemy1.baseScale + 2;
		var tmp1;
		switch(size) {
		case 1:
			tmp1 = 25;
			break;
		case 2:
			tmp1 = 50;
			break;
		case 3:
			tmp1 = 100;
			break;
		default:
			tmp1 = 0;
		}
		enemy1.set_hp(tmp1);
		enemy1.size = size;
		var _this3 = enemy1.position;
		_this3.x = 840;
		_this3.y = y2;
	}
};
enemies_EnemyA.__super__ = enemies_Enemy;
enemies_EnemyA.prototype = $extend(enemies_Enemy.prototype,{
	size: null
	,baseScale: null
	,baseRadius: null
	,hspeed: null
	,vspeed: null
	,splitting: null
	,originY: null
	,revive: function() {
		enemies_Enemy.prototype.revive.call(this);
		this.vspeed = -3;
		this.splitting = false;
	}
	,kill: function() {
		if(this.size > 1) {
			this.splitting = true;
			this.baseScale = (this.size - 1) / 4 + 0.25;
			this.originY = (this.sprite.get_height() - 90) * this.baseScale;
			this.hspeed = 0;
		} else {
			this.gemDropY = (-this.position.oy + this.halfHeight) * this.baseScale;
			enemies_Enemy.prototype.kill.call(this);
		}
	}
	,put: function() {
		enemies_Enemy.prototype.put.call(this);
		enemies_EnemyA.pool._objects.push(this);
	}
	,updateAlive: function(elapsed) {
		enemies_Enemy.prototype.updateAlive.call(this,elapsed);
		if(this.splitting) {
			if(this.scale.oy > this.originY) {
				this.position.oy = this.scale.oy -= 4;
			}
			if(this.scale.y > this.baseScale) {
				this.scale.y -= 0.02;
			}
			if(this.scale.x > this.baseScale) {
				this.scale.x -= 0.02;
			} else {
				var _g = this;
				var value = _g.size - 1;
				if(_g.splitting) {
					_g.position.oy = _g.scale.oy = _g.originY;
				} else {
					_g.baseScale = value / 4 + 0.25;
					_g.position.oy = _g.scale.oy = (_g.sprite.get_height() - 90) * _g.baseScale;
				}
				var _this = _g.scale;
				var x = _g.baseScale;
				var y = _g.baseScale;
				_this.x = x;
				_this.y = y;
				_g.mask.radius = _g.baseRadius * _g.baseScale;
				_g.hspeed = 2 * _g.baseScale + 2;
				var tmp;
				switch(value) {
				case 1:
					tmp = 25;
					break;
				case 2:
					tmp = 50;
					break;
				case 3:
					tmp = 100;
					break;
				default:
					tmp = 0;
				}
				_g.set_hp(tmp);
				_g.size = value;
				this.splitting = false;
				var size = this.size;
				var x1 = this.position.x;
				var y1 = this.position.y;
				states_PlayState.instance.onScreenEnemyCount++;
				var enemy = enemies_EnemyA.pool.get();
				enemy.revive();
				if(enemy.splitting) {
					enemy.position.oy = enemy.scale.oy = enemy.originY;
				} else {
					enemy.baseScale = size / 4 + 0.25;
					enemy.position.oy = enemy.scale.oy = (enemy.sprite.get_height() - 90) * enemy.baseScale;
				}
				var _this1 = enemy.scale;
				var x2 = enemy.baseScale;
				var y2 = enemy.baseScale;
				_this1.x = x2;
				_this1.y = y2;
				enemy.mask.radius = enemy.baseRadius * enemy.baseScale;
				enemy.hspeed = 2 * enemy.baseScale + 2;
				var tmp1;
				switch(size) {
				case 1:
					tmp1 = 25;
					break;
				case 2:
					tmp1 = 50;
					break;
				case 3:
					tmp1 = 100;
					break;
				default:
					tmp1 = 0;
				}
				enemy.set_hp(tmp1);
				enemy.size = size;
				var _this2 = enemy.position;
				_this2.x = x1;
				_this2.y = y1;
				enemy.hspeed *= -1;
				enemy.vspeed = this.vspeed;
				enemy.scale.y = this.scale.y;
			}
			return;
		}
		if(this.hspeed < 0 && this.position.x < this.mask.radius || this.hspeed > 0 && this.position.x > 700 - this.mask.radius) {
			this.hspeed = -this.hspeed;
		}
		if(this.position.y > 400 && this.vspeed > 0) {
			var _this3 = G.sfxGroup;
			var volume = this.size / 5;
			var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.bounce,false),_this3,false);
			channel._volume = volume;
			channel.channel.set_volume(_this3.muted?0:volume * _this3._volume);
			_this3.channels.push(channel);
			this.scale.y *= 0.8;
			this.vspeed = -12;
		} else if(this.scale.y < this.baseScale) {
			this.scale.y += 0.02 * elapsed;
		}
		var _g1 = this;
		_g1.position.x = _g1.position.x + this.hspeed * this.scale.x * elapsed;
		var _g2 = this;
		_g2.position.y = _g2.position.y + this.vspeed * this.scale.y * elapsed;
		this.vspeed += 0.2 * elapsed;
		var _this4 = this.hpText;
		var x3 = this.halfWidth;
		var y3 = this.halfHeight;
		var _this5 = _this4.position;
		_this5.x = x3;
		_this5.y = y3;
	}
	,set_size: function(value) {
		if(this.splitting) {
			this.position.oy = this.scale.oy = this.originY;
		} else {
			this.baseScale = value / 4 + 0.25;
			this.position.oy = this.scale.oy = (this.sprite.get_height() - 90) * this.baseScale;
		}
		var _this = this.scale;
		var x = this.baseScale;
		var y = this.baseScale;
		_this.x = x;
		_this.y = y;
		this.mask.radius = this.baseRadius * this.baseScale;
		this.hspeed = 2 * this.baseScale + 2;
		var tmp;
		switch(value) {
		case 1:
			tmp = 25;
			break;
		case 2:
			tmp = 50;
			break;
		case 3:
			tmp = 100;
			break;
		default:
			tmp = 0;
		}
		this.set_hp(tmp);
		return this.size = value;
	}
	,__class__: enemies_EnemyA
	,__properties__: $extend(enemies_Enemy.prototype.__properties__,{set_size:"set_size"})
});
var kala_behaviors_tween_Ease = function() { };
$hxClasses["kala.behaviors.tween.Ease"] = kala_behaviors_tween_Ease;
kala_behaviors_tween_Ease.__name__ = ["kala","behaviors","tween","Ease"];
kala_behaviors_tween_Ease.linear = function(t) {
	return t;
};
kala_behaviors_tween_Ease.quadIn = function(t) {
	return t * t;
};
kala_behaviors_tween_Ease.quadOut = function(t) {
	return -t * (t - 2);
};
kala_behaviors_tween_Ease.quadInOut = function(t) {
	if(t <= .5) {
		return t * t * 2;
	} else {
		return 1 - --t * t * 2;
	}
};
kala_behaviors_tween_Ease.cubeIn = function(t) {
	return t * t * t;
};
kala_behaviors_tween_Ease.cubeOut = function(t) {
	return 1 + --t * t * t;
};
kala_behaviors_tween_Ease.cubeInOut = function(t) {
	if(t <= .5) {
		return t * t * t * 4;
	} else {
		return 1 + --t * t * t * 4;
	}
};
kala_behaviors_tween_Ease.quartIn = function(t) {
	return t * t * t * t;
};
kala_behaviors_tween_Ease.quartOut = function(t) {
	return 1 - --t * t * t * t;
};
kala_behaviors_tween_Ease.quartInOut = function(t) {
	if(t <= .5) {
		return t * t * t * t * 8;
	} else {
		t = t * 2 - 2;
		return (1 - t * t * t * t) / 2 + .5;
	}
};
kala_behaviors_tween_Ease.quintIn = function(t) {
	return t * t * t * t * t;
};
kala_behaviors_tween_Ease.quintOut = function(t) {
	return --t * t * t * t * t + 1;
};
kala_behaviors_tween_Ease.quintInOut = function(t) {
	t *= 2;
	if(t < 1) {
		return t * t * t * t * t / 2;
	} else {
		t -= 2;
		return (t * t * t * t * t + 2) / 2;
	}
};
kala_behaviors_tween_Ease.sineIn = function(t) {
	return -Math.cos(kala_behaviors_tween_Ease.PI2 * t) + 1;
};
kala_behaviors_tween_Ease.sineOut = function(t) {
	return Math.sin(kala_behaviors_tween_Ease.PI2 * t);
};
kala_behaviors_tween_Ease.sineInOut = function(t) {
	return -Math.cos(Math.PI * t) / 2 + .5;
};
kala_behaviors_tween_Ease.bounceIn = function(t) {
	t = 1 - t;
	if(t < kala_behaviors_tween_Ease.B1) {
		return 1 - 7.5625 * t * t;
	}
	if(t < kala_behaviors_tween_Ease.B2) {
		return 1 - (7.5625 * (t - kala_behaviors_tween_Ease.B3) * (t - kala_behaviors_tween_Ease.B3) + .75);
	}
	if(t < kala_behaviors_tween_Ease.B4) {
		return 1 - (7.5625 * (t - kala_behaviors_tween_Ease.B5) * (t - kala_behaviors_tween_Ease.B5) + .9375);
	}
	return 1 - (7.5625 * (t - kala_behaviors_tween_Ease.B6) * (t - kala_behaviors_tween_Ease.B6) + .984375);
};
kala_behaviors_tween_Ease.bounceOut = function(t) {
	if(t < kala_behaviors_tween_Ease.B1) {
		return 7.5625 * t * t;
	}
	if(t < kala_behaviors_tween_Ease.B2) {
		return 7.5625 * (t - kala_behaviors_tween_Ease.B3) * (t - kala_behaviors_tween_Ease.B3) + .75;
	}
	if(t < kala_behaviors_tween_Ease.B4) {
		return 7.5625 * (t - kala_behaviors_tween_Ease.B5) * (t - kala_behaviors_tween_Ease.B5) + .9375;
	}
	return 7.5625 * (t - kala_behaviors_tween_Ease.B6) * (t - kala_behaviors_tween_Ease.B6) + .984375;
};
kala_behaviors_tween_Ease.bounceInOut = function(t) {
	if(t < .5) {
		t = 1 - t * 2;
		if(t < kala_behaviors_tween_Ease.B1) {
			return (1 - 7.5625 * t * t) / 2;
		}
		if(t < kala_behaviors_tween_Ease.B2) {
			return (1 - (7.5625 * (t - kala_behaviors_tween_Ease.B3) * (t - kala_behaviors_tween_Ease.B3) + .75)) / 2;
		}
		if(t < kala_behaviors_tween_Ease.B4) {
			return (1 - (7.5625 * (t - kala_behaviors_tween_Ease.B5) * (t - kala_behaviors_tween_Ease.B5) + .9375)) / 2;
		}
		return (1 - (7.5625 * (t - kala_behaviors_tween_Ease.B6) * (t - kala_behaviors_tween_Ease.B6) + .984375)) / 2;
	}
	t = t * 2 - 1;
	if(t < kala_behaviors_tween_Ease.B1) {
		return 7.5625 * t * t / 2 + .5;
	}
	if(t < kala_behaviors_tween_Ease.B2) {
		return (7.5625 * (t - kala_behaviors_tween_Ease.B3) * (t - kala_behaviors_tween_Ease.B3) + .75) / 2 + .5;
	}
	if(t < kala_behaviors_tween_Ease.B4) {
		return (7.5625 * (t - kala_behaviors_tween_Ease.B5) * (t - kala_behaviors_tween_Ease.B5) + .9375) / 2 + .5;
	}
	return (7.5625 * (t - kala_behaviors_tween_Ease.B6) * (t - kala_behaviors_tween_Ease.B6) + .984375) / 2 + .5;
};
kala_behaviors_tween_Ease.circIn = function(t) {
	return -(Math.sqrt(1 - t * t) - 1);
};
kala_behaviors_tween_Ease.circOut = function(t) {
	return Math.sqrt(1 - (t - 1) * (t - 1));
};
kala_behaviors_tween_Ease.circInOut = function(t) {
	if(t <= .5) {
		return (Math.sqrt(1 - t * t * 4) - 1) / -2;
	} else {
		return (Math.sqrt(1 - (t * 2 - 2) * (t * 2 - 2)) + 1) / 2;
	}
};
kala_behaviors_tween_Ease.expoIn = function(t) {
	return Math.pow(2,10 * (t - 1));
};
kala_behaviors_tween_Ease.expoOut = function(t) {
	return -Math.pow(2,-10 * t) + 1;
};
kala_behaviors_tween_Ease.expoInOut = function(t) {
	if(t < .5) {
		return Math.pow(2,10 * (t * 2 - 1)) / 2;
	} else {
		return (-Math.pow(2,-10 * (t * 2 - 1)) + 2) / 2;
	}
};
kala_behaviors_tween_Ease.backIn = function(t) {
	return t * t * (2.70158 * t - 1.70158);
};
kala_behaviors_tween_Ease.backOut = function(t) {
	return 1 - --t * t * (-2.70158 * t - 1.70158);
};
kala_behaviors_tween_Ease.backInOut = function(t) {
	t *= 2;
	if(t < 1) {
		return t * t * (2.70158 * t - 1.70158) / 2;
	}
	--t;
	return (1 - --t * t * (-2.70158 * t - 1.70158)) / 2 + .5;
};
kala_behaviors_tween_Ease.elasticIn = function(t) {
	return -(kala_behaviors_tween_Ease.ELASTIC_AMPLITUDE * Math.pow(2,10 * --t) * Math.sin((t - kala_behaviors_tween_Ease.ELASTIC_PERIOD / (2 * Math.PI) * Math.asin(1 / kala_behaviors_tween_Ease.ELASTIC_AMPLITUDE)) * (2 * Math.PI) / kala_behaviors_tween_Ease.ELASTIC_PERIOD));
};
kala_behaviors_tween_Ease.elasticOut = function(t) {
	return kala_behaviors_tween_Ease.ELASTIC_AMPLITUDE * Math.pow(2,-10 * t) * Math.sin((t - kala_behaviors_tween_Ease.ELASTIC_PERIOD / (2 * Math.PI) * Math.asin(1 / kala_behaviors_tween_Ease.ELASTIC_AMPLITUDE)) * (2 * Math.PI) / kala_behaviors_tween_Ease.ELASTIC_PERIOD) + 1;
};
kala_behaviors_tween_Ease.elasticInOut = function(t) {
	if(t < 0.5) {
		t -= 0.5;
		return -0.5 * (Math.pow(2,10 * t) * Math.sin((t - kala_behaviors_tween_Ease.ELASTIC_PERIOD / 4) * (2 * Math.PI) / kala_behaviors_tween_Ease.ELASTIC_PERIOD));
	}
	t -= 0.5;
	return Math.pow(2,-10 * t) * Math.sin((t - kala_behaviors_tween_Ease.ELASTIC_PERIOD / 4) * (2 * Math.PI) / kala_behaviors_tween_Ease.ELASTIC_PERIOD) * 0.5 + 1;
};
var kala_behaviors_tween_TweenTimeline = function() {
	this._crTweenTasks = [];
	this._prvTweenTasks = [];
	this.nodes = [];
	this.children = [];
};
$hxClasses["kala.behaviors.tween.TweenTimeline"] = kala_behaviors_tween_TweenTimeline;
kala_behaviors_tween_TweenTimeline.__name__ = ["kala","behaviors","tween","TweenTimeline"];
kala_behaviors_tween_TweenTimeline.get = function() {
	return kala_behaviors_tween_TweenTimeline.pool.get();
};
kala_behaviors_tween_TweenTimeline.create = function() {
	return new kala_behaviors_tween_TweenTimeline();
};
kala_behaviors_tween_TweenTimeline.prototype = {
	manager: null
	,parent: null
	,children: null
	,nodes: null
	,pos: null
	,node: null
	,loopsLeft: null
	,waitTimeLeft: null
	,_target: null
	,_ease: null
	,_tweenUpdateCB: null
	,paused: null
	,batching: null
	,_batchCalling: null
	,_prvTweenTasks: null
	,_crTweenTasks: null
	,start: function() {
		this.manager._tweens.push(this);
		this.nextNode();
	}
	,tween: function(target,vars,duration,ease,backwardEase,onUpdateCB) {
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(target,vars,duration,ease,onUpdateCB);
		task.backwardEase = backwardEase;
		this.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		return this;
	}
	,tweenXY: function(target,x,y,duration,ease,backwardEase,onUpdateCB) {
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(target,{ x : x, y : y},duration,ease,onUpdateCB);
		task.backwardEase = backwardEase;
		this.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		return this;
	}
	,tweenAngle: function(target,fromAngle,toAngle,duration,ease,backwardEase,onUpdateCB) {
		if(target == null) {
			target = this.get_target();
		}
		if(fromAngle != null) {
			target.rotation.angle = fromAngle;
		}
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(target.rotation,{ angle : toAngle},duration,ease,onUpdateCB);
		task.backwardEase = backwardEase;
		this.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		return this;
	}
	,tweenBack: function(duration,ease,onUpdateCB) {
		if(duration == null) {
			duration = 0;
		}
		this.nodes.push(kala_behaviors_tween_TweenNode.BACKWARD_TWEEN(_$UInt_UInt_$Impl_$.toFloat(duration),ease,onUpdateCB));
		return this;
	}
	,wait: function(duration) {
		this.nodes.push(kala_behaviors_tween_TweenNode.WAIT(duration));
		return this;
	}
	,waitEx: function(f) {
		this.nodes.push(kala_behaviors_tween_TweenNode.WAIT_EX(f));
		return this;
	}
	,call: function(callback) {
		this.nodes.push(kala_behaviors_tween_TweenNode.CALL(callback));
		return this;
	}
	,startBatch: function(times) {
		if(times == null) {
			times = 0;
		}
		this.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		return this;
	}
	,endBatch: function() {
		this.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		return this;
	}
	,startLoop: function(times) {
		if(times == null) {
			times = 0;
		}
		var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
		timeline.init(this.manager,this,null,null,null);
		timeline.loopsLeft = times - 1;
		this.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
		return timeline;
	}
	,endLoop: function() {
		return this.parent;
	}
	,jump: function(f) {
		this.nodes.push(kala_behaviors_tween_TweenNode.JUMP(f));
		return this;
	}
	,set: function(target,ease) {
		this.nodes.push(kala_behaviors_tween_TweenNode.SET(target,ease));
		return this;
	}
	,pause: function() {
		this.paused = true;
	}
	,resume: function() {
		this.paused = false;
	}
	,cancel: function() {
		if(this.manager != null) {
			HxOverrides.remove(this.manager._tweens,this);
			this.manager = null;
		}
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			this.parent = null;
		}
		while(this.children.length > 0) this.children.pop().cancel();
		while(this._prvTweenTasks.length > 0) {
			var _this = this._prvTweenTasks.pop();
			_this._varNames.splice(0,_this._varNames.length);
			_this._varStartValues.splice(0,_this._varStartValues.length);
			_this._varRanges.splice(0,_this._varRanges.length);
			if(_this != null) {
				kala_behaviors_tween_TweenTask.pool._objects.push(_this);
			}
		}
		while(this._crTweenTasks.length > 0) {
			var _this1 = this._crTweenTasks.pop();
			_this1._varNames.splice(0,_this1._varNames.length);
			_this1._varStartValues.splice(0,_this1._varStartValues.length);
			_this1._varRanges.splice(0,_this1._varRanges.length);
			if(_this1 != null) {
				kala_behaviors_tween_TweenTask.pool._objects.push(_this1);
			}
		}
		this._target = null;
		this._ease = null;
		this._tweenUpdateCB = null;
		this.node = null;
		this.nodes.splice(0,this.nodes.length);
		kala_behaviors_tween_TweenTimeline.pool._objects.push(this);
	}
	,init: function(manager,parent,target,ease,tweenUpdateCB) {
		this.parent = parent;
		this.manager = manager;
		this._target = target;
		this._ease = ease;
		this._tweenUpdateCB = tweenUpdateCB;
		this.pos = -1;
		this.waitTimeLeft = 0;
		this.loopsLeft = 0;
		this.paused = false;
		this.batching = false;
		this._batchCalling = false;
		return this;
	}
	,update: function(elapsed) {
		if(this.waitTimeLeft > 0) {
			this.waitTimeLeft -= elapsed;
		}
		if(this.waitTimeLeft <= 0 || this.batching) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.update(elapsed);
			}
			var i = 0;
			var task;
			while(i < this._crTweenTasks.length) {
				task = this._crTweenTasks[i];
				task.elapsed += elapsed;
				task.percent = Math.min(task.elapsed / task.duration,1);
				var _g11 = 0;
				var _g2 = task._varNames.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					var o = task.target;
					var field = task._varNames[i1];
					var value = task._varStartValues[i1] + task._varRanges[i1] * (task.ease == null?task.percent:task.ease(task.percent));
					var tmp;
					var tmp1;
					if(o.__properties__) {
						tmp = o.__properties__["set_" + field];
						tmp1 = tmp;
					} else {
						tmp1 = false;
					}
					if(tmp1) {
						o[tmp](value);
					} else {
						o[field] = value;
					}
				}
				if(task.onUpdateCB != null) {
					task.onUpdateCB(task);
				}
				if(task.percent == 1) {
					if(!this.batching) {
						this._prvTweenTasks.splice(0,this._prvTweenTasks.length);
					}
					this._prvTweenTasks.push(task);
					this._crTweenTasks.splice(i,1);
				} else {
					++i;
				}
			}
		}
		if(this.waitTimeLeft <= 0 && this._crTweenTasks.length == 0 && this.children.length == 0) {
			this.batching = false;
			this.nextNode();
		}
	}
	,nextNode: function() {
		if(this.manager == null) {
			return;
		}
		if(this.pos == this.nodes.length - 1) {
			if(this.loopsLeft == 0) {
				this.cancel();
			} else {
				this.loopsLeft--;
				this.setPos(0);
			}
			return;
		}
		this.setPos(this.pos + 1);
	}
	,setPos: function(index) {
		if(index > this.nodes.length - 1) {
			throw new js__$Boot_HaxeError("Jump index (" + index + ") is out of range (0 - $(node.lenght - 1)).");
		}
		this.pos = index;
		this.node = this.nodes[this.pos];
		var _g = this.node;
		switch(_g[1]) {
		case 0:
			var task = _g[2];
			if(task.target == null) {
				task.target = this.get_target();
			}
			if(task.ease == null) {
				task.ease = this.get_ease();
			}
			if(task.onUpdateCB == null) {
				task.onUpdateCB = this.get_tweenUpdateCB();
			}
			task.initVars();
			this._crTweenTasks.push(task);
			break;
		case 1:
			var onUpdateCB = _g[4];
			var ease = _g[3];
			var duration = _g[2];
			if(this._prvTweenTasks.length == 0) {
				if(this._batchCalling || this.children.length == 0) {
					this.nextNode();
				}
				return;
			}
			if(this._prvTweenTasks.length > 1) {
				this.batching = true;
			}
			var appendedIndex = this._crTweenTasks.length;
			var task1 = null;
			var prvTask;
			while(this._prvTweenTasks.length > 0) {
				task1 = kala_behaviors_tween_TweenTask.pool.get();
				task1.init(null,null,duration,ease,onUpdateCB);
				prvTask = this._prvTweenTasks.pop();
				task1.copyBackward(prvTask);
				prvTask._varNames.splice(0,prvTask._varNames.length);
				prvTask._varStartValues.splice(0,prvTask._varStartValues.length);
				prvTask._varRanges.splice(0,prvTask._varRanges.length);
				if(prvTask != null) {
					kala_behaviors_tween_TweenTask.pool._objects.push(prvTask);
				}
				this._crTweenTasks.splice(appendedIndex,0,task1);
			}
			break;
		case 2:
			var duration1 = _g[2];
			if(duration1 <= 0) {
				this.paused = true;
			} else {
				this.waitTimeLeft = duration1;
			}
			break;
		case 3:
			var duration2 = _g[2](this);
			if(duration2 <= 0) {
				this.paused = true;
			} else {
				this.waitTimeLeft = duration2;
			}
			break;
		case 4:
			_g[2](this);
			this.nextNode();
			break;
		case 5:
			this.batching = this._batchCalling = true;
			while(this._batchCalling) this.nextNode();
			break;
		case 6:
			this._batchCalling = false;
			break;
		case 7:
			this.children.push(_g[2]);
			if(this._batchCalling) {
				this.nextNode();
			}
			break;
		case 8:
			var index1 = _g[2](this);
			if(index1 < 0 || index1 >= this.nodes.length) {
				this.nextNode();
				return;
			}
			this.setPos(index1);
			break;
		case 9:
			var ease1 = _g[3];
			var target = _g[2];
			if(target != null) {
				this.set_target(target);
			}
			if(ease1 != null) {
				this.set_ease(ease1);
			}
			this.nextNode();
			break;
		}
	}
	,get_target: function() {
		if(this.parent == null) {
			return this._target;
		}
		return this.parent.get_target();
	}
	,set_target: function(value) {
		if(this.parent == null) {
			return this._target = value;
		}
		return this.parent.set_target(value);
	}
	,get_ease: function() {
		if(this.parent == null) {
			return this._ease;
		}
		return this.parent.get_ease();
	}
	,set_ease: function(value) {
		if(this.parent == null) {
			return this._ease = value;
		}
		return this.parent.set_ease(value);
	}
	,get_tweenUpdateCB: function() {
		if(this.parent == null) {
			return this._tweenUpdateCB;
		}
		return this.parent.get_tweenUpdateCB();
	}
	,set_tweenUpdateCB: function(value) {
		if(this.parent == null) {
			return this._tweenUpdateCB = value;
		}
		return this.parent.set_tweenUpdateCB(value);
	}
	,__class__: kala_behaviors_tween_TweenTimeline
	,__properties__: {set_tweenUpdateCB:"set_tweenUpdateCB",get_tweenUpdateCB:"get_tweenUpdateCB",set_ease:"set_ease",get_ease:"get_ease",set_target:"set_target",get_target:"get_target"}
};
var kala_behaviors_tween_TweenNode = $hxClasses["kala.behaviors.tween.TweenNode"] = { __ename__ : ["kala","behaviors","tween","TweenNode"], __constructs__ : ["TWEEN","BACKWARD_TWEEN","WAIT","WAIT_EX","CALL","START_BATCH","END_BATCH","CHILD_TIMELINE","JUMP","SET"] };
kala_behaviors_tween_TweenNode.TWEEN = function(task) { var $x = ["TWEEN",0,task]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
kala_behaviors_tween_TweenNode.BACKWARD_TWEEN = function(duration,ease,onUpdateCB) { var $x = ["BACKWARD_TWEEN",1,duration,ease,onUpdateCB]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
kala_behaviors_tween_TweenNode.WAIT = function(duration) { var $x = ["WAIT",2,duration]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
kala_behaviors_tween_TweenNode.WAIT_EX = function(f) { var $x = ["WAIT_EX",3,f]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
kala_behaviors_tween_TweenNode.CALL = function(callback) { var $x = ["CALL",4,callback]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
kala_behaviors_tween_TweenNode.START_BATCH = ["START_BATCH",5];
kala_behaviors_tween_TweenNode.START_BATCH.toString = $estr;
kala_behaviors_tween_TweenNode.START_BATCH.__enum__ = kala_behaviors_tween_TweenNode;
kala_behaviors_tween_TweenNode.END_BATCH = ["END_BATCH",6];
kala_behaviors_tween_TweenNode.END_BATCH.toString = $estr;
kala_behaviors_tween_TweenNode.END_BATCH.__enum__ = kala_behaviors_tween_TweenNode;
kala_behaviors_tween_TweenNode.CHILD_TIMELINE = function(child) { var $x = ["CHILD_TIMELINE",7,child]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
kala_behaviors_tween_TweenNode.JUMP = function(f) { var $x = ["JUMP",8,f]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
kala_behaviors_tween_TweenNode.SET = function(target,ease) { var $x = ["SET",9,target,ease]; $x.__enum__ = kala_behaviors_tween_TweenNode; $x.toString = $estr; return $x; };
var kala_behaviors_tween_TweenTask = function() {
	this._varRanges = [];
	this._varStartValues = [];
	this._varNames = [];
};
$hxClasses["kala.behaviors.tween.TweenTask"] = kala_behaviors_tween_TweenTask;
kala_behaviors_tween_TweenTask.__name__ = ["kala","behaviors","tween","TweenTask"];
kala_behaviors_tween_TweenTask.get = function() {
	return kala_behaviors_tween_TweenTask.pool.get();
};
kala_behaviors_tween_TweenTask.create = function() {
	return new kala_behaviors_tween_TweenTask();
};
kala_behaviors_tween_TweenTask.prototype = {
	target: null
	,vars: null
	,percent: null
	,duration: null
	,elapsed: null
	,backward: null
	,ease: null
	,backwardEase: null
	,onUpdateCB: null
	,_varNames: null
	,_varStartValues: null
	,_varRanges: null
	,init: function(target,vars,duration,ease,onUpdateCB) {
		this.target = target;
		this.vars = vars;
		this.duration = duration;
		this.ease = ease;
		this.onUpdateCB = onUpdateCB;
		this.backward = false;
	}
	,initVars: function() {
		this.percent = 0;
		this.elapsed = 0;
		if(!Reflect.isObject(this.vars)) {
			throw new js__$Boot_HaxeError("Tweening destination values are not contained in a valid object.");
		}
		var startValue;
		var destValue;
		var _g = 0;
		var _g1 = Reflect.fields(this.vars);
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			var o = this.target;
			var tmp;
			if(o == null) {
				startValue = null;
			} else {
				var tmp1;
				if(o.__properties__) {
					tmp = o.__properties__["get_" + name];
					tmp1 = tmp;
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					startValue = o[tmp]();
				} else {
					startValue = o[name];
				}
			}
			if(startValue == null) {
				throw new js__$Boot_HaxeError("Property / member varible \"" + name + "\" does not exist in target \"" + Std.string(this.target) + "\" or exists but its value is currently set to null.");
			}
			if(isNaN(startValue)) {
				throw new js__$Boot_HaxeError("Start value of \"" + name + "\" (" + Std.string(startValue) + ") is not a valid number.");
			}
			var o1 = this.vars;
			var tmp2;
			if(o1 == null) {
				destValue = null;
			} else {
				var tmp3;
				if(o1.__properties__) {
					tmp2 = o1.__properties__["get_" + name];
					tmp3 = tmp2;
				} else {
					tmp3 = false;
				}
				if(tmp3) {
					destValue = o1[tmp2]();
				} else {
					destValue = o1[name];
				}
			}
			if(isNaN(destValue)) {
				throw new js__$Boot_HaxeError("Destination value of \"" + name + "\" is not a valid number.");
			}
			this._varNames.push(name);
			this._varStartValues.push(startValue);
			this._varRanges.push(destValue - startValue);
		}
	}
	,copyBackward: function(task) {
		this.target = task.target;
		this.vars = task.vars;
		if(this.duration == 0) {
			this.duration = task.duration;
		}
		if(this.ease == null) {
			this.ease = task.backwardEase == null?task.ease:task.backwardEase;
		}
		this.backwardEase = task.ease;
		if(this.onUpdateCB == null) {
			this.onUpdateCB = task.onUpdateCB;
		}
		var _g1 = 0;
		var _g = task._varNames.length;
		while(_g1 < _g) {
			var i = _g1++;
			this._varNames.push(task._varNames[i]);
			this._varStartValues.push(task._varStartValues[i] + task._varRanges[i]);
			this._varRanges.push(-task._varRanges[i]);
		}
		this.elapsed = 0;
		this.backward = true;
	}
	,put: function() {
		this._varNames.splice(0,this._varNames.length);
		this._varStartValues.splice(0,this._varStartValues.length);
		this._varRanges.splice(0,this._varRanges.length);
		kala_behaviors_tween_TweenTask.pool._objects.push(this);
	}
	,update: function(elapsed) {
		this.elapsed += elapsed;
		this.percent = Math.min(this.elapsed / this.duration,1);
		var _g1 = 0;
		var _g = this._varNames.length;
		while(_g1 < _g) {
			var i = _g1++;
			var o = this.target;
			var field = this._varNames[i];
			var value = this._varStartValues[i] + this._varRanges[i] * (this.ease == null?this.percent:this.ease(this.percent));
			var tmp;
			var tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["set_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				o[tmp](value);
			} else {
				o[field] = value;
			}
		}
		if(this.onUpdateCB != null) {
			this.onUpdateCB(this);
		}
		if(this.percent == 1) {
			return true;
		} else {
			return false;
		}
	}
	,__class__: kala_behaviors_tween_TweenTask
};
var kala_behaviors_motion_VelocityMotion = function(object) {
	this.accelXY = new kala_math_Velocity();
	this.velocity = new kala_math_Velocity();
	kala_behaviors_Behavior.call(this,object);
};
$hxClasses["kala.behaviors.motion.VelocityMotion"] = kala_behaviors_motion_VelocityMotion;
kala_behaviors_motion_VelocityMotion.__name__ = ["kala","behaviors","motion","VelocityMotion"];
kala_behaviors_motion_VelocityMotion.__super__ = kala_behaviors_Behavior;
kala_behaviors_motion_VelocityMotion.prototype = $extend(kala_behaviors_Behavior.prototype,{
	velocity: null
	,accelXY: null
	,accel: null
	,turnSpeed: null
	,turnAccel: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		var _this = this.velocity;
		_this._angleUpdated = _this._speedUpdated = false;
		_this._x = 0;
		_this._angleUpdated = _this._speedUpdated = false;
		_this._y = 0;
		var _this1 = this.accelXY;
		_this1._angleUpdated = _this1._speedUpdated = false;
		_this1._x = 0;
		_this1._angleUpdated = _this1._speedUpdated = false;
		_this1._y = 0;
		this.accel = 0;
		this.turnSpeed = 0;
		this.turnAccel = 0;
	}
	,destroy: function() {
		kala_behaviors_Behavior.prototype.destroy.call(this);
		this.velocity = null;
		this.accelXY = null;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		object.onPostUpdate._callbacks.push(new kala_Callback($bind(this,this.update),this));
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			this.object.onPostUpdate.removePrivateCB(this,$bind(this,this.update));
		}
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,update: function(obj,elapsed) {
		var factor = elapsed;
		if(kala_Kala.deltaTiming) {
			factor = elapsed / kala_Kala.perfectDelta;
		}
		if(this.accelXY._x != 0) {
			var _g = this.velocity;
			var value = _g._x + this.accelXY._x * factor;
			_g._angleUpdated = _g._speedUpdated = false;
			_g._x = value;
		}
		if(this.accelXY._y != 0) {
			var _g1 = this.velocity;
			var value1 = _g1._y + this.accelXY._y * factor;
			_g1._angleUpdated = _g1._speedUpdated = false;
			_g1._y = value1;
		}
		if(this.accel != 0) {
			var _g2 = this.velocity;
			var tmp;
			if(_g2._speedUpdated) {
				tmp = _g2._speed;
			} else {
				_g2._speedUpdated = true;
				var tmp1 = _g2._x;
				var deg;
				if(_g2._angleUpdated) {
					deg = _g2._angle;
				} else {
					_g2._angleUpdated = true;
					deg = _g2._angle = Math.atan2(_g2._y,_g2._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp = _g2._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
			}
			var value2 = tmp + this.accel * factor;
			var deg1;
			if(_g2._angleUpdated) {
				deg1 = _g2._angle;
			} else {
				_g2._angleUpdated = true;
				deg1 = _g2._angle = Math.atan2(_g2._y,_g2._x) * kala_math_Mathf.CONST_DEG;
			}
			var rad = deg1 * kala_math_Mathf.CONST_RAD;
			_g2._x = value2 * Math.cos(rad);
			_g2._y = value2 * Math.sin(rad);
			_g2._speedUpdated = true;
			_g2._speed = value2;
		}
		this.turnSpeed += this.turnAccel * factor;
		if(this.turnSpeed != 0) {
			var _g3 = this.velocity;
			var tmp2;
			if(_g3._angleUpdated) {
				tmp2 = _g3._angle;
			} else {
				_g3._angleUpdated = true;
				tmp2 = _g3._angle = Math.atan2(_g3._y,_g3._x) * kala_math_Mathf.CONST_DEG;
			}
			var value3 = tmp2 + this.turnSpeed * factor;
			var rad1 = value3 * kala_math_Mathf.CONST_RAD;
			var tmp3;
			if(_g3._speedUpdated) {
				tmp3 = _g3._speed;
			} else {
				_g3._speedUpdated = true;
				var tmp4 = _g3._x;
				var deg2;
				if(_g3._angleUpdated) {
					deg2 = _g3._angle;
				} else {
					_g3._angleUpdated = true;
					deg2 = _g3._angle = Math.atan2(_g3._y,_g3._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp3 = _g3._speed = tmp4 / Math.cos(deg2 * kala_math_Mathf.CONST_RAD);
			}
			_g3._x = tmp3 * Math.cos(rad1);
			var tmp5;
			if(_g3._speedUpdated) {
				tmp5 = _g3._speed;
			} else {
				_g3._speedUpdated = true;
				var tmp6 = _g3._x;
				var deg3;
				if(_g3._angleUpdated) {
					deg3 = _g3._angle;
				} else {
					_g3._angleUpdated = true;
					deg3 = _g3._angle = Math.atan2(_g3._y,_g3._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp5 = _g3._speed = tmp6 / Math.cos(deg3 * kala_math_Mathf.CONST_RAD);
			}
			_g3._y = tmp5 * Math.sin(rad1);
			_g3._angleUpdated = true;
			_g3._angle = value3;
		}
		obj.position.x = obj.position.x + this.velocity._x * factor;
		obj.position.y = obj.position.y + this.velocity._y * factor;
	}
	,__class__: kala_behaviors_motion_VelocityMotion
});
var kala_math_Mathf = function() { };
$hxClasses["kala.math.Mathf"] = kala_math_Mathf;
kala_math_Mathf.__name__ = ["kala","math","Mathf"];
var kala_Callback = function(cbFunction,behavior) {
	this.cbFunction = cbFunction;
	this.owner = behavior;
};
$hxClasses["kala.Callback"] = kala_Callback;
kala_Callback.__name__ = ["kala","Callback"];
kala_Callback.prototype = {
	cbFunction: null
	,owner: null
	,__class__: kala_Callback
};
var enemies_EnemyB = function() {
	enemies_Enemy.call(this);
	this.sprite.loadSpriteData(R.enemyB);
	var x = this.halfWidth = this.sprite.get_width() / 2;
	var y = this.halfHeight = this.sprite.get_height() / 2;
	var _this = this.position;
	_this.ox = x;
	_this.oy = y;
	var _this1 = this.scale;
	_this1.ox = x;
	_this1.oy = y;
	var _this2 = this.rotation;
	_this2.px = x;
	_this2.py = y;
	var _this3 = this.hpText;
	var x1 = this.halfWidth;
	var y1 = this.halfHeight;
	var _this4 = _this3.position;
	_this4.x = x1;
	_this4.y = y1;
	this.hpText.set_size(30);
	this.deathEffect.image = this.sprite.image;
	var _this5 = this.deathEffect.frameRect;
	var rect = this.sprite.frameRect;
	_this5.x = rect.x;
	_this5.y = rect.y;
	_this5.width = rect.width;
	_this5.height = rect.height;
	var _this6 = this.deathEffect.position;
	var originX = this.sprite.position.ox;
	var originY = this.sprite.position.oy;
	_this6.ox = originX;
	_this6.oy = originY;
	var _this7 = this.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this7.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this8 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this7,null,target,ease,null);
	var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
	timeline.init(_this8.manager,_this8,null,null,null);
	timeline.loopsLeft = 0 - 1;
	_this8.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
	var target1 = this;
	if(target1 == null) {
		target1 = timeline.get_target();
	}
	target1.rotation.angle = -15;
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(target1.rotation,{ angle : 15},60,kala_behaviors_tween_Ease.sineInOut,null);
	task.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	var target2 = this;
	if(target2 == null) {
		target2 = timeline.get_target();
	}
	target2.rotation.angle = 15;
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(target2.rotation,{ angle : -15},60,kala_behaviors_tween_Ease.sineInOut,null);
	task1.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	var _this9 = timeline.parent;
	_this9.manager._tweens.push(_this9);
	_this9.nextNode();
};
$hxClasses["enemies.EnemyB"] = enemies_EnemyB;
enemies_EnemyB.__name__ = ["enemies","EnemyB"];
enemies_EnemyB.create = function(x,y) {
	states_PlayState.instance.onScreenEnemyCount++;
	var enemy = enemies_EnemyB.pool.get();
	enemy.revive();
	var _this = enemy.position;
	_this.x = x;
	_this.y = y;
	var _this1 = enemy.scale;
	_this1.x = 1;
	_this1.y = 1;
	enemy.set_hp(200);
	enemy.bodyAtkOn = false;
	enemy.isSubEnemy = false;
	var actionCB = function() {
		var _this2 = G.sfxGroup;
		var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this2,false);
		channel._volume = 0.4;
		channel.channel.set_volume(_this2.muted?0:0.4 * _this2._volume);
		_this2.channels.push(channel);
		var _g = 0;
		while(_g < 6) {
			var angle = 60 * _g++;
			var child = enemies_EnemyB.childGroup.createAlive();
			var x1 = enemy.position.x;
			var y1 = enemy.position.y;
			var _this3 = child.position;
			_this3.x = x1;
			_this3.y = y1;
			child.set_hp(20);
			var _this4 = child.motion.velocity;
			var rad = angle * kala_math_Mathf.CONST_RAD;
			var tmp;
			if(_this4._speedUpdated) {
				tmp = _this4._speed;
			} else {
				_this4._speedUpdated = true;
				var tmp1 = _this4._x;
				var deg;
				if(_this4._angleUpdated) {
					deg = _this4._angle;
				} else {
					_this4._angleUpdated = true;
					deg = _this4._angle = Math.atan2(_this4._y,_this4._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp = _this4._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
			}
			_this4._x = tmp * Math.cos(rad);
			var tmp2;
			if(_this4._speedUpdated) {
				tmp2 = _this4._speed;
			} else {
				_this4._speedUpdated = true;
				var tmp3 = _this4._x;
				var deg1;
				if(_this4._angleUpdated) {
					deg1 = _this4._angle;
				} else {
					_this4._angleUpdated = true;
					deg1 = _this4._angle = Math.atan2(_this4._y,_this4._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp2 = _this4._speed = tmp3 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
			}
			_this4._y = tmp2 * Math.sin(rad);
			_this4._angleUpdated = true;
			_this4._angle = angle;
			var deg2;
			if(_this4._angleUpdated) {
				deg2 = _this4._angle;
			} else {
				_this4._angleUpdated = true;
				deg2 = _this4._angle = Math.atan2(_this4._y,_this4._x) * kala_math_Mathf.CONST_DEG;
			}
			var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
			_this4._x = 5 * Math.cos(rad1);
			_this4._y = 5 * Math.sin(rad1);
			_this4._speedUpdated = true;
			_this4._speed = 5;
			child.motion.turnSpeed = 0;
			child.bodyAtkOn = true;
			child.isSubEnemy = true;
		}
	};
	var _gthis = enemy;
	var value = enemy.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
	var x2 = Math.max(enemy.halfWidth,Math.min(700 - enemy.halfWidth,value));
	var value1 = enemy.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
	var y2 = Math.max(enemy.halfHeight,Math.min(200,value1));
	var x11 = enemy.position.x;
	var y11 = enemy.position.y;
	var t = Math.sqrt((x11 - x2) * (x11 - x2) + (y11 - y2) * (y11 - y2)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
	var _this5 = enemy.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this5.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	enemy.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this5,null,target,ease,null);
	var _this6 = enemy.moveRandomTimeline;
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(enemy,{ x : x2, y : y2},t,kala_behaviors_tween_Ease.sineInOut,null);
	task.backwardEase = null;
	_this6.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	_this6.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
		actionCB();
	}));
	_this6.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
	_this6.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
		_gthis.moveRandom(actionCB);
	}));
	_this6.manager._tweens.push(_this6);
	_this6.nextNode();
};
enemies_EnemyB.createRandomPos = function() {
	switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
	case 0:
		var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy = enemies_EnemyB.pool.get();
		enemy.revive();
		var _this = enemy.position;
		_this.x = -60;
		_this.y = y;
		var _this1 = enemy.scale;
		_this1.x = 1;
		_this1.y = 1;
		enemy.set_hp(200);
		enemy.bodyAtkOn = false;
		enemy.isSubEnemy = false;
		var actionCB = function() {
			var _this2 = G.sfxGroup;
			var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this2,false);
			channel._volume = 0.4;
			channel.channel.set_volume(_this2.muted?0:0.4 * _this2._volume);
			_this2.channels.push(channel);
			var _g = 0;
			while(_g < 6) {
				var angle = 60 * _g++;
				var child = enemies_EnemyB.childGroup.createAlive();
				var x = enemy.position.x;
				var y1 = enemy.position.y;
				var _this3 = child.position;
				_this3.x = x;
				_this3.y = y1;
				child.set_hp(20);
				var _this4 = child.motion.velocity;
				var rad = angle * kala_math_Mathf.CONST_RAD;
				var tmp;
				if(_this4._speedUpdated) {
					tmp = _this4._speed;
				} else {
					_this4._speedUpdated = true;
					var tmp1 = _this4._x;
					var deg;
					if(_this4._angleUpdated) {
						deg = _this4._angle;
					} else {
						_this4._angleUpdated = true;
						deg = _this4._angle = Math.atan2(_this4._y,_this4._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp = _this4._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
				}
				_this4._x = tmp * Math.cos(rad);
				var tmp2;
				if(_this4._speedUpdated) {
					tmp2 = _this4._speed;
				} else {
					_this4._speedUpdated = true;
					var tmp3 = _this4._x;
					var deg1;
					if(_this4._angleUpdated) {
						deg1 = _this4._angle;
					} else {
						_this4._angleUpdated = true;
						deg1 = _this4._angle = Math.atan2(_this4._y,_this4._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp2 = _this4._speed = tmp3 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
				}
				_this4._y = tmp2 * Math.sin(rad);
				_this4._angleUpdated = true;
				_this4._angle = angle;
				var deg2;
				if(_this4._angleUpdated) {
					deg2 = _this4._angle;
				} else {
					_this4._angleUpdated = true;
					deg2 = _this4._angle = Math.atan2(_this4._y,_this4._x) * kala_math_Mathf.CONST_DEG;
				}
				var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
				_this4._x = 5 * Math.cos(rad1);
				_this4._y = 5 * Math.sin(rad1);
				_this4._speedUpdated = true;
				_this4._speed = 5;
				child.motion.turnSpeed = 0;
				child.bodyAtkOn = true;
				child.isSubEnemy = true;
			}
		};
		var _gthis = enemy;
		var value = enemy.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var x1 = Math.max(enemy.halfWidth,Math.min(700 - enemy.halfWidth,value));
		var value1 = enemy.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var y2 = Math.max(enemy.halfHeight,Math.min(200,value1));
		var x11 = enemy.position.x;
		var y11 = enemy.position.y;
		var t = Math.sqrt((x11 - x1) * (x11 - x1) + (y11 - y2) * (y11 - y2)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
		var _this5 = enemy.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this5.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		enemy.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this5,null,target,ease,null);
		var _this6 = enemy.moveRandomTimeline;
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(enemy,{ x : x1, y : y2},t,kala_behaviors_tween_Ease.sineInOut,null);
		task.backwardEase = null;
		_this6.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this6.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			actionCB();
		}));
		_this6.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
		_this6.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.moveRandom(actionCB);
		}));
		_this6.manager._tweens.push(_this6);
		_this6.nextNode();
		break;
	case 1:
		var y3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy1 = enemies_EnemyB.pool.get();
		enemy1.revive();
		var _this7 = enemy1.position;
		_this7.x = 760;
		_this7.y = y3;
		var _this8 = enemy1.scale;
		_this8.x = 1;
		_this8.y = 1;
		enemy1.set_hp(200);
		enemy1.bodyAtkOn = false;
		enemy1.isSubEnemy = false;
		var actionCB1 = function() {
			var _this9 = G.sfxGroup;
			var channel1 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this9,false);
			channel1._volume = 0.4;
			channel1.channel.set_volume(_this9.muted?0:0.4 * _this9._volume);
			_this9.channels.push(channel1);
			var _g1 = 0;
			while(_g1 < 6) {
				var angle1 = 60 * _g1++;
				var child1 = enemies_EnemyB.childGroup.createAlive();
				var x2 = enemy1.position.x;
				var y4 = enemy1.position.y;
				var _this10 = child1.position;
				_this10.x = x2;
				_this10.y = y4;
				child1.set_hp(20);
				var _this11 = child1.motion.velocity;
				var rad2 = angle1 * kala_math_Mathf.CONST_RAD;
				var tmp4;
				if(_this11._speedUpdated) {
					tmp4 = _this11._speed;
				} else {
					_this11._speedUpdated = true;
					var tmp5 = _this11._x;
					var deg3;
					if(_this11._angleUpdated) {
						deg3 = _this11._angle;
					} else {
						_this11._angleUpdated = true;
						deg3 = _this11._angle = Math.atan2(_this11._y,_this11._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp4 = _this11._speed = tmp5 / Math.cos(deg3 * kala_math_Mathf.CONST_RAD);
				}
				_this11._x = tmp4 * Math.cos(rad2);
				var tmp6;
				if(_this11._speedUpdated) {
					tmp6 = _this11._speed;
				} else {
					_this11._speedUpdated = true;
					var tmp7 = _this11._x;
					var deg4;
					if(_this11._angleUpdated) {
						deg4 = _this11._angle;
					} else {
						_this11._angleUpdated = true;
						deg4 = _this11._angle = Math.atan2(_this11._y,_this11._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp6 = _this11._speed = tmp7 / Math.cos(deg4 * kala_math_Mathf.CONST_RAD);
				}
				_this11._y = tmp6 * Math.sin(rad2);
				_this11._angleUpdated = true;
				_this11._angle = angle1;
				var deg5;
				if(_this11._angleUpdated) {
					deg5 = _this11._angle;
				} else {
					_this11._angleUpdated = true;
					deg5 = _this11._angle = Math.atan2(_this11._y,_this11._x) * kala_math_Mathf.CONST_DEG;
				}
				var rad3 = deg5 * kala_math_Mathf.CONST_RAD;
				_this11._x = 5 * Math.cos(rad3);
				_this11._y = 5 * Math.sin(rad3);
				_this11._speedUpdated = true;
				_this11._speed = 5;
				child1.motion.turnSpeed = 0;
				child1.bodyAtkOn = true;
				child1.isSubEnemy = true;
			}
		};
		var _gthis1 = enemy1;
		var value2 = enemy1.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var x3 = Math.max(enemy1.halfWidth,Math.min(700 - enemy1.halfWidth,value2));
		var value3 = enemy1.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var y5 = Math.max(enemy1.halfHeight,Math.min(200,value3));
		var x12 = enemy1.position.x;
		var y12 = enemy1.position.y;
		var t1 = Math.sqrt((x12 - x3) * (x12 - x3) + (y12 - y5) * (y12 - y5)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
		var _this12 = enemy1.tween;
		var target1 = null;
		var ease1 = null;
		if(target1 == null) {
			target1 = _this12.object;
		}
		if(ease1 == null) {
			ease1 = kala_behaviors_tween_Ease.linear;
		}
		enemy1.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this12,null,target1,ease1,null);
		var _this13 = enemy1.moveRandomTimeline;
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(enemy1,{ x : x3, y : y5},t1,kala_behaviors_tween_Ease.sineInOut,null);
		task1.backwardEase = null;
		_this13.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		_this13.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
			actionCB1();
		}));
		_this13.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
		_this13.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_3) {
			_gthis1.moveRandom(actionCB1);
		}));
		_this13.manager._tweens.push(_this13);
		_this13.nextNode();
		break;
	case 2:
		var x4 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy2 = enemies_EnemyB.pool.get();
		enemy2.revive();
		var _this14 = enemy2.position;
		_this14.x = x4;
		_this14.y = -60;
		var _this15 = enemy2.scale;
		_this15.x = 1;
		_this15.y = 1;
		enemy2.set_hp(200);
		enemy2.bodyAtkOn = false;
		enemy2.isSubEnemy = false;
		var actionCB2 = function() {
			var _this16 = G.sfxGroup;
			var channel2 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this16,false);
			channel2._volume = 0.4;
			channel2.channel.set_volume(_this16.muted?0:0.4 * _this16._volume);
			_this16.channels.push(channel2);
			var _g2 = 0;
			while(_g2 < 6) {
				var angle2 = 60 * _g2++;
				var child2 = enemies_EnemyB.childGroup.createAlive();
				var x5 = enemy2.position.x;
				var y6 = enemy2.position.y;
				var _this17 = child2.position;
				_this17.x = x5;
				_this17.y = y6;
				child2.set_hp(20);
				var _this18 = child2.motion.velocity;
				var rad4 = angle2 * kala_math_Mathf.CONST_RAD;
				var tmp8;
				if(_this18._speedUpdated) {
					tmp8 = _this18._speed;
				} else {
					_this18._speedUpdated = true;
					var tmp9 = _this18._x;
					var deg6;
					if(_this18._angleUpdated) {
						deg6 = _this18._angle;
					} else {
						_this18._angleUpdated = true;
						deg6 = _this18._angle = Math.atan2(_this18._y,_this18._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp8 = _this18._speed = tmp9 / Math.cos(deg6 * kala_math_Mathf.CONST_RAD);
				}
				_this18._x = tmp8 * Math.cos(rad4);
				var tmp10;
				if(_this18._speedUpdated) {
					tmp10 = _this18._speed;
				} else {
					_this18._speedUpdated = true;
					var tmp11 = _this18._x;
					var deg7;
					if(_this18._angleUpdated) {
						deg7 = _this18._angle;
					} else {
						_this18._angleUpdated = true;
						deg7 = _this18._angle = Math.atan2(_this18._y,_this18._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp10 = _this18._speed = tmp11 / Math.cos(deg7 * kala_math_Mathf.CONST_RAD);
				}
				_this18._y = tmp10 * Math.sin(rad4);
				_this18._angleUpdated = true;
				_this18._angle = angle2;
				var deg8;
				if(_this18._angleUpdated) {
					deg8 = _this18._angle;
				} else {
					_this18._angleUpdated = true;
					deg8 = _this18._angle = Math.atan2(_this18._y,_this18._x) * kala_math_Mathf.CONST_DEG;
				}
				var rad5 = deg8 * kala_math_Mathf.CONST_RAD;
				_this18._x = 5 * Math.cos(rad5);
				_this18._y = 5 * Math.sin(rad5);
				_this18._speedUpdated = true;
				_this18._speed = 5;
				child2.motion.turnSpeed = 0;
				child2.bodyAtkOn = true;
				child2.isSubEnemy = true;
			}
		};
		var _gthis2 = enemy2;
		var value4 = enemy2.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var x6 = Math.max(enemy2.halfWidth,Math.min(700 - enemy2.halfWidth,value4));
		var value5 = enemy2.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var y7 = Math.max(enemy2.halfHeight,Math.min(200,value5));
		var x13 = enemy2.position.x;
		var y13 = enemy2.position.y;
		var t2 = Math.sqrt((x13 - x6) * (x13 - x6) + (y13 - y7) * (y13 - y7)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
		var _this19 = enemy2.tween;
		var target2 = null;
		var ease2 = null;
		if(target2 == null) {
			target2 = _this19.object;
		}
		if(ease2 == null) {
			ease2 = kala_behaviors_tween_Ease.linear;
		}
		enemy2.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this19,null,target2,ease2,null);
		var _this20 = enemy2.moveRandomTimeline;
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(enemy2,{ x : x6, y : y7},t2,kala_behaviors_tween_Ease.sineInOut,null);
		task2.backwardEase = null;
		_this20.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		_this20.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_4) {
			actionCB2();
		}));
		_this20.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
		_this20.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_5) {
			_gthis2.moveRandom(actionCB2);
		}));
		_this20.manager._tweens.push(_this20);
		_this20.nextNode();
		break;
	}
};
enemies_EnemyB.__super__ = enemies_Enemy;
enemies_EnemyB.prototype = $extend(enemies_Enemy.prototype,{
	motion: null
	,kill: function() {
		if(this.scale.x == 1) {
			this.gemDropQuantity = 5;
		} else {
			var _this = this.motion.velocity;
			var deg;
			if(_this._angleUpdated) {
				deg = _this._angle;
			} else {
				_this._angleUpdated = true;
				deg = _this._angle = Math.atan2(_this._y,_this._x) * kala_math_Mathf.CONST_DEG;
			}
			var rad = deg * kala_math_Mathf.CONST_RAD;
			_this._x = 0 * Math.cos(rad);
			_this._y = 0 * Math.sin(rad);
			_this._speedUpdated = true;
			_this._speed = 0;
			this.gemDropQuantity = 1;
		}
		enemies_Enemy.prototype.kill.call(this);
	}
	,put: function() {
		enemies_Enemy.prototype.put.call(this);
		if(this.scale.x == 1) {
			enemies_EnemyB.pool._objects.push(this);
		}
	}
	,createChild: function(angle) {
		var child = enemies_EnemyB.childGroup.createAlive();
		var x = this.position.x;
		var y = this.position.y;
		var _this = child.position;
		_this.x = x;
		_this.y = y;
		child.set_hp(20);
		var _this1 = child.motion.velocity;
		var rad = angle * kala_math_Mathf.CONST_RAD;
		var tmp;
		if(_this1._speedUpdated) {
			tmp = _this1._speed;
		} else {
			_this1._speedUpdated = true;
			var tmp1 = _this1._x;
			var deg;
			if(_this1._angleUpdated) {
				deg = _this1._angle;
			} else {
				_this1._angleUpdated = true;
				deg = _this1._angle = Math.atan2(_this1._y,_this1._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp = _this1._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
		}
		_this1._x = tmp * Math.cos(rad);
		var tmp2;
		if(_this1._speedUpdated) {
			tmp2 = _this1._speed;
		} else {
			_this1._speedUpdated = true;
			var tmp3 = _this1._x;
			var deg1;
			if(_this1._angleUpdated) {
				deg1 = _this1._angle;
			} else {
				_this1._angleUpdated = true;
				deg1 = _this1._angle = Math.atan2(_this1._y,_this1._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp2 = _this1._speed = tmp3 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
		}
		_this1._y = tmp2 * Math.sin(rad);
		_this1._angleUpdated = true;
		_this1._angle = angle;
		var deg2;
		if(_this1._angleUpdated) {
			deg2 = _this1._angle;
		} else {
			_this1._angleUpdated = true;
			deg2 = _this1._angle = Math.atan2(_this1._y,_this1._x) * kala_math_Mathf.CONST_DEG;
		}
		var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
		_this1._x = 5 * Math.cos(rad1);
		_this1._y = 5 * Math.sin(rad1);
		_this1._speedUpdated = true;
		_this1._speed = 5;
		child.motion.turnSpeed = 0;
		child.bodyAtkOn = true;
		child.isSubEnemy = true;
	}
	,__class__: enemies_EnemyB
});
var enemies_EnemyC = function() {
	this.vspeed = 5;
	enemies_Enemy.call(this);
	this.sprite.loadSpriteData(R.enemyC,null,null,0).animation.play();
	this.animation = this.sprite.animation;
	var x = this.halfWidth = this.sprite.get_width() / 2;
	var y = (this.halfHeight = this.sprite.get_height() / 2) - 25;
	var _this = this.position;
	_this.ox = x;
	_this.oy = y;
	var _this1 = this.scale;
	_this1.ox = x;
	_this1.oy = y;
	var _this2 = this.rotation;
	_this2.px = x;
	_this2.py = y;
	var x1 = this.halfWidth;
	var y1 = this.position.oy + 3;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this3 = circle.position;
	_this3.x = x1;
	_this3.y = y1;
	circle.radius = 40;
	this.collider._shapes.push(circle);
	this.mask = circle;
	var _this4 = this.hpText;
	var x2 = this.halfWidth - 2;
	var y2 = this.scale.oy + 2;
	var _this5 = _this4.position;
	_this5.x = x2;
	_this5.y = y2;
	this.hpText.set_size(40);
	this.deathEffect.image = this.sprite.image;
	var _this6 = this.deathEffect.frameRect;
	var rect = this.sprite.frameRect;
	_this6.x = rect.x;
	_this6.y = rect.y;
	_this6.width = rect.width;
	_this6.height = rect.height;
	var _this7 = this.deathEffect.position;
	var originX = this.sprite.position.ox;
	var originY = this.sprite.position.oy;
	_this7.ox = originX;
	_this7.oy = originY;
	this.player = states_PlayState.instance.player;
	this.isSubEnemy = false;
};
$hxClasses["enemies.EnemyC"] = enemies_EnemyC;
enemies_EnemyC.__name__ = ["enemies","EnemyC"];
enemies_EnemyC.create = function(size,x,y) {
	states_PlayState.instance.onScreenEnemyCount++;
	var enemy = enemies_EnemyC.pool.get();
	enemy.revive();
	enemy.baseScale = size / 4 + 0.25;
	var _this = enemy.scale;
	var x1 = enemy.baseScale;
	var y1 = enemy.baseScale;
	_this.x = x1;
	_this.y = y1;
	enemy.mask.radius = 40 * enemy.baseScale;
	enemy.maxHSpeed = 3 * enemy.baseScale;
	if(enemy.position.x < 350.) {
		if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
			enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy.maxHSpeed);
		} else {
			enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy.maxHSpeed,0);
		}
	} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
		enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy.maxHSpeed,0);
	} else {
		enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy.maxHSpeed);
	}
	enemy.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
	enemy.flapPower = 6 * enemy.baseScale;
	enemy.vaccel = 0.5 * enemy.baseScale;
	enemy.flipSpeed = 0.2 * enemy.baseScale;
	var tmp;
	switch(size) {
	case 1:
		tmp = 50;
		break;
	case 2:
		tmp = 100;
		break;
	case 3:
		tmp = 150;
		break;
	default:
		tmp = 0;
	}
	enemy.set_hp(tmp);
	enemy.size = size;
	var _this1 = enemy.position;
	_this1.x = x;
	_this1.y = y;
};
enemies_EnemyC.createRandomPos = function(size) {
	switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
	case 0:
		var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy = enemies_EnemyC.pool.get();
		enemy.revive();
		enemy.baseScale = size / 4 + 0.25;
		var _this = enemy.scale;
		var x = enemy.baseScale;
		var y1 = enemy.baseScale;
		_this.x = x;
		_this.y = y1;
		enemy.mask.radius = 40 * enemy.baseScale;
		enemy.maxHSpeed = 3 * enemy.baseScale;
		if(enemy.position.x < 350.) {
			if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
				enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy.maxHSpeed);
			} else {
				enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy.maxHSpeed,0);
			}
		} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
			enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy.maxHSpeed,0);
		} else {
			enemy.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy.maxHSpeed);
		}
		enemy.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
		enemy.flapPower = 6 * enemy.baseScale;
		enemy.vaccel = 0.5 * enemy.baseScale;
		enemy.flipSpeed = 0.2 * enemy.baseScale;
		var tmp;
		switch(size) {
		case 1:
			tmp = 50;
			break;
		case 2:
			tmp = 100;
			break;
		case 3:
			tmp = 150;
			break;
		default:
			tmp = 0;
		}
		enemy.set_hp(tmp);
		enemy.size = size;
		var _this1 = enemy.position;
		_this1.x = -120;
		_this1.y = y;
		break;
	case 1:
		var y2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy1 = enemies_EnemyC.pool.get();
		enemy1.revive();
		enemy1.baseScale = size / 4 + 0.25;
		var _this2 = enemy1.scale;
		var x1 = enemy1.baseScale;
		var y3 = enemy1.baseScale;
		_this2.x = x1;
		_this2.y = y3;
		enemy1.mask.radius = 40 * enemy1.baseScale;
		enemy1.maxHSpeed = 3 * enemy1.baseScale;
		if(enemy1.position.x < 350.) {
			if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
				enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy1.maxHSpeed);
			} else {
				enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy1.maxHSpeed,0);
			}
		} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
			enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy1.maxHSpeed,0);
		} else {
			enemy1.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy1.maxHSpeed);
		}
		enemy1.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
		enemy1.flapPower = 6 * enemy1.baseScale;
		enemy1.vaccel = 0.5 * enemy1.baseScale;
		enemy1.flipSpeed = 0.2 * enemy1.baseScale;
		var tmp1;
		switch(size) {
		case 1:
			tmp1 = 50;
			break;
		case 2:
			tmp1 = 100;
			break;
		case 3:
			tmp1 = 150;
			break;
		default:
			tmp1 = 0;
		}
		enemy1.set_hp(tmp1);
		enemy1.size = size;
		var _this3 = enemy1.position;
		_this3.x = 820;
		_this3.y = y2;
		break;
	case 2:
		var x2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy2 = enemies_EnemyC.pool.get();
		enemy2.revive();
		enemy2.baseScale = size / 4 + 0.25;
		var _this4 = enemy2.scale;
		var x3 = enemy2.baseScale;
		var y4 = enemy2.baseScale;
		_this4.x = x3;
		_this4.y = y4;
		enemy2.mask.radius = 40 * enemy2.baseScale;
		enemy2.maxHSpeed = 3 * enemy2.baseScale;
		if(enemy2.position.x < 350.) {
			if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
				enemy2.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy2.maxHSpeed);
			} else {
				enemy2.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy2.maxHSpeed,0);
			}
		} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
			enemy2.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-enemy2.maxHSpeed,0);
		} else {
			enemy2.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,enemy2.maxHSpeed);
		}
		enemy2.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
		enemy2.flapPower = 6 * enemy2.baseScale;
		enemy2.vaccel = 0.5 * enemy2.baseScale;
		enemy2.flipSpeed = 0.2 * enemy2.baseScale;
		var tmp2;
		switch(size) {
		case 1:
			tmp2 = 50;
			break;
		case 2:
			tmp2 = 100;
			break;
		case 3:
			tmp2 = 150;
			break;
		default:
			tmp2 = 0;
		}
		enemy2.set_hp(tmp2);
		enemy2.size = size;
		var _this5 = enemy2.position;
		_this5.x = x2;
		_this5.y = -120;
		break;
	}
};
enemies_EnemyC.__super__ = enemies_Enemy;
enemies_EnemyC.prototype = $extend(enemies_Enemy.prototype,{
	animation: null
	,size: null
	,baseScale: null
	,maxHSpeed: null
	,hspeed: null
	,vspeed: null
	,vaccel: null
	,hspeedAlarm: null
	,flapPower: null
	,flapped: null
	,vline: null
	,vlineAlarm: null
	,flipSpeed: null
	,targeting: null
	,attackAlarm: null
	,kill: function() {
		this.gemDropQuantity = this.size * 3 | 0;
		enemies_Enemy.prototype.kill.call(this);
	}
	,revive: function() {
		enemies_Enemy.prototype.revive.call(this);
		this.targeting = this.bodyAtkOn = false;
		this.flapped = false;
		this.scale.y = 1;
		this.targeting = this.bodyAtkOn = false;
		this.attackAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(300,600);
		var _this = this.animation;
		if(_this.timeLeft > 0) {
			_this.timeLeft = 0;
		}
		_this.delay = 0;
		this.vline = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100);
		this.vlineAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(100,200);
	}
	,updateAlive: function(elapsed) {
		enemies_Enemy.prototype.updateAlive.call(this,elapsed);
		if(this.bodyAtkOn) {
			if(this.scale.y > -this.baseScale) {
				this.scale.y -= this.flipSpeed * elapsed;
			} else {
				if(this.scale.y < -this.baseScale) {
					this.scale.y = -this.baseScale;
				}
				var _this = this.animation;
				var _this1 = _this.object.frameRect;
				_this.frame = 5;
				var rect = _this.anim.frames[5];
				_this1.x = rect.x;
				_this1.y = rect.y;
				_this1.width = rect.width;
				_this1.height = rect.height;
				this.animation.delay = -1;
				var _g = this;
				_g.position.y = _g.position.y + 16 * elapsed;
				if(this.position.y > 425) {
					this.targeting = this.bodyAtkOn = false;
					this.attackAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(300,600);
					var _this2 = this.animation;
					if(_this2.timeLeft > 0) {
						_this2.timeLeft = 0;
					}
					_this2.delay = 0;
					this.vline = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100);
					this.vlineAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(100,200);
					var _this3 = this.animation;
					if(_this3.timeLeft > 1) {
						_this3.timeLeft = 1;
					}
					_this3.delay = 1;
					this.vspeed = -8;
				}
			}
		} else if(this.targeting) {
			this.bodyAtkOn = true;
			if(this.position.x - this.player.position.x > 15) {
				this.bodyAtkOn = false;
				var _g1 = this;
				_g1.position.x = _g1.position.x - this.maxHSpeed * elapsed;
			} else if(this.position.x - this.player.position.x < -15) {
				this.bodyAtkOn = false;
				var _g2 = this;
				_g2.position.x = _g2.position.x + this.maxHSpeed * elapsed;
			}
			if(this.position.y > 100) {
				this.bodyAtkOn = false;
				this.vline = -100;
			}
		} else {
			if(this.scale.y < this.baseScale) {
				this.scale.y += this.flipSpeed;
			} else if(this.scale.y > this.baseScale) {
				this.scale.y = this.baseScale;
			}
			if(this.attackAlarm > 0) {
				this.attackAlarm--;
			} else {
				this.targeting = true;
			}
			if(this.hspeedAlarm > 0) {
				this.hspeedAlarm--;
			} else {
				if(this.position.x < 350.) {
					if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
						this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.maxHSpeed);
					} else {
						this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.maxHSpeed,0);
					}
				} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
					this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.maxHSpeed,0);
				} else {
					this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.maxHSpeed);
				}
				this.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
			}
			if(this.vlineAlarm > 0) {
				this.vlineAlarm--;
			} else {
				this.vline = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100);
				this.vlineAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(100,200);
			}
			if(this.hspeed < 0 && this.position.x < this.mask.radius || this.hspeed > 0 && this.position.x > 700 - this.mask.radius) {
				this.hspeed = -this.hspeed;
			}
			var _g3 = this;
			_g3.position.x = _g3.position.x + this.hspeed * elapsed;
		}
		if(this.scale.y > 0) {
			if(this.animation.frame == 0 || this.animation.frame == 3) {
				if(this.position.y < this.vline + 25) {
					this.animation.delay = -1;
				} else if(this.position.y < this.vline + 100) {
					var _this4 = this.animation;
					var value = kala_math__$Random_Random_$Impl_$.instance.GetIn(4,8);
					if(value > -1 && _this4.timeLeft > value) {
						_this4.timeLeft = value;
					}
					_this4.delay = value;
				} else if(this.position.y > this.vline + 200) {
					var _this5 = this.animation;
					var value1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(2,8);
					if(value1 > -1 && _this5.timeLeft > value1) {
						_this5.timeLeft = value1;
					}
					_this5.delay = value1;
				} else if(this.position.y > this.vline + 250) {
					var _this6 = this.animation;
					if(_this6.timeLeft > 2) {
						_this6.timeLeft = 2;
					}
					_this6.delay = 2;
				}
			}
			if(this.animation.frame == 2 || this.animation.frame == 5) {
				if(!this.flapped) {
					var _this7 = G.sfxGroup;
					var volume = this.size / 5;
					var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.flap,false),_this7,false);
					channel._volume = volume;
					channel.channel.set_volume(_this7.muted?0:volume * _this7._volume);
					_this7.channels.push(channel);
				}
				if(!this.flapped) {
					this.vspeed = -this.flapPower;
					this.flapped = true;
				}
			} else {
				this.flapped = false;
			}
			var _g4 = this;
			_g4.position.y = _g4.position.y + this.vspeed * this.baseScale * elapsed;
			this.vspeed += this.vaccel * elapsed;
		}
	}
	,put: function() {
		enemies_Enemy.prototype.put.call(this);
		enemies_EnemyC.pool._objects.push(this);
	}
	,randomHSpeed: function() {
		if(this.position.x < 350.) {
			if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
				this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.maxHSpeed);
			} else {
				this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.maxHSpeed,0);
			}
		} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
			this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.maxHSpeed,0);
		} else {
			this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.maxHSpeed);
		}
		this.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
	}
	,randomVLine: function() {
		this.vline = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100);
		this.vlineAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(100,200);
	}
	,endAttacking: function() {
		this.targeting = this.bodyAtkOn = false;
		this.attackAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(300,600);
		var _this = this.animation;
		if(_this.timeLeft > 0) {
			_this.timeLeft = 0;
		}
		_this.delay = 0;
		this.vline = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100);
		this.vlineAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(100,200);
	}
	,set_size: function(value) {
		this.baseScale = value / 4 + 0.25;
		var _this = this.scale;
		var x = this.baseScale;
		var y = this.baseScale;
		_this.x = x;
		_this.y = y;
		this.mask.radius = 40 * this.baseScale;
		this.maxHSpeed = 3 * this.baseScale;
		if(this.position.x < 350.) {
			if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
				this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.maxHSpeed);
			} else {
				this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.maxHSpeed,0);
			}
		} else if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 80) {
			this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.maxHSpeed,0);
		} else {
			this.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.maxHSpeed);
		}
		this.hspeedAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(120,240);
		this.flapPower = 6 * this.baseScale;
		this.vaccel = 0.5 * this.baseScale;
		this.flipSpeed = 0.2 * this.baseScale;
		var tmp;
		switch(value) {
		case 1:
			tmp = 50;
			break;
		case 2:
			tmp = 100;
			break;
		case 3:
			tmp = 150;
			break;
		default:
			tmp = 0;
		}
		this.set_hp(tmp);
		return this.size = value;
	}
	,__class__: enemies_EnemyC
	,__properties__: $extend(enemies_Enemy.prototype.__properties__,{set_size:"set_size"})
});
var enemies_Child = function() {
	enemies_Enemy.call(this);
	this.sprite.loadSpriteData(R.enemyDChild,null,null,5).animation.play();
	var _this = this.sprite;
	var _this1 = _this.position;
	_this1.ox = 21;
	_this1.oy = 20;
	var _this2 = _this.scale;
	_this2.ox = 21;
	_this2.oy = 20;
	var _this3 = _this.rotation;
	_this3.px = 21;
	_this3.py = 20;
	this.halfWidth = this.sprite.get_width() / 2;
	this.halfHeight = this.sprite.get_height() / 2;
	this.hpText.set_size(20);
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this4 = circle.position;
	_this4.x = 0;
	_this4.y = 0;
	circle.radius = 10;
	this.collider._shapes.push(circle);
	this.mask = circle;
	this.motion = new kala_behaviors_motion_VelocityMotion(this);
	this.motion.accel = 0.1;
	this.playerPos = player_Player.instance.position;
	this.deathEffect.image = this.sprite.image;
	var _this5 = this.deathEffect.frameRect;
	var rect = this.sprite.frameRect;
	_this5.x = rect.x;
	_this5.y = rect.y;
	_this5.width = rect.width;
	_this5.height = rect.height;
	var _this6 = this.deathEffect.position;
	var originX = this.sprite.position.ox;
	var originY = this.sprite.position.oy;
	_this6.ox = originX;
	_this6.oy = originY;
	this.gemDropQuantity = 1;
	this.isSubEnemy = true;
};
$hxClasses["enemies.Child"] = enemies_Child;
enemies_Child.__name__ = ["enemies","Child"];
enemies_Child.__super__ = enemies_Enemy;
enemies_Child.prototype = $extend(enemies_Enemy.prototype,{
	motion: null
	,leftTurning: null
	,turningDelay: null
	,playerPos: null
	,update: function(elapsed) {
		enemies_Enemy.prototype.update.call(this,elapsed);
		if(this.opacity < 1) {
			this.opacity += 0.1;
		}
	}
	,updateAlive: function(elapsed) {
		enemies_Enemy.prototype.updateAlive.call(this,elapsed);
		if(this.position.y > 495) {
			this.alive = false;
			return;
		}
		if(this.turningDelay > 0) {
			this.turningDelay -= elapsed;
		} else if(this.position.y < 270) {
			var a = Math.atan2(this.playerPos.y - this.position.y,this.playerPos.x - this.position.x) * kala_math_Mathf.CONST_DEG + (this.leftTurning?360:0);
			var turnSpeed = 8 * elapsed;
			var _this = this.motion.velocity;
			var tmp;
			if(_this._angleUpdated) {
				tmp = _this._angle;
			} else {
				_this._angleUpdated = true;
				tmp = _this._angle = Math.atan2(_this._y,_this._x) * kala_math_Mathf.CONST_DEG;
			}
			if(tmp >= a + turnSpeed) {
				var _g = this.motion.velocity;
				var tmp1;
				if(_g._angleUpdated) {
					tmp1 = _g._angle;
				} else {
					_g._angleUpdated = true;
					tmp1 = _g._angle = Math.atan2(_g._y,_g._x) * kala_math_Mathf.CONST_DEG;
				}
				var value = tmp1 - turnSpeed;
				var rad = value * kala_math_Mathf.CONST_RAD;
				var tmp2;
				if(_g._speedUpdated) {
					tmp2 = _g._speed;
				} else {
					_g._speedUpdated = true;
					var tmp3 = _g._x;
					var deg;
					if(_g._angleUpdated) {
						deg = _g._angle;
					} else {
						_g._angleUpdated = true;
						deg = _g._angle = Math.atan2(_g._y,_g._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp2 = _g._speed = tmp3 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
				}
				_g._x = tmp2 * Math.cos(rad);
				var tmp4;
				if(_g._speedUpdated) {
					tmp4 = _g._speed;
				} else {
					_g._speedUpdated = true;
					var tmp5 = _g._x;
					var deg1;
					if(_g._angleUpdated) {
						deg1 = _g._angle;
					} else {
						_g._angleUpdated = true;
						deg1 = _g._angle = Math.atan2(_g._y,_g._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp4 = _g._speed = tmp5 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
				}
				_g._y = tmp4 * Math.sin(rad);
				_g._angleUpdated = true;
				_g._angle = value;
			} else {
				var _this1 = this.motion.velocity;
				var tmp6;
				if(_this1._angleUpdated) {
					tmp6 = _this1._angle;
				} else {
					_this1._angleUpdated = true;
					tmp6 = _this1._angle = Math.atan2(_this1._y,_this1._x) * kala_math_Mathf.CONST_DEG;
				}
				if(tmp6 <= a - turnSpeed) {
					var _g1 = this.motion.velocity;
					var tmp7;
					if(_g1._angleUpdated) {
						tmp7 = _g1._angle;
					} else {
						_g1._angleUpdated = true;
						tmp7 = _g1._angle = Math.atan2(_g1._y,_g1._x) * kala_math_Mathf.CONST_DEG;
					}
					var value1 = tmp7 + turnSpeed;
					var rad1 = value1 * kala_math_Mathf.CONST_RAD;
					var tmp8;
					if(_g1._speedUpdated) {
						tmp8 = _g1._speed;
					} else {
						_g1._speedUpdated = true;
						var tmp9 = _g1._x;
						var deg2;
						if(_g1._angleUpdated) {
							deg2 = _g1._angle;
						} else {
							_g1._angleUpdated = true;
							deg2 = _g1._angle = Math.atan2(_g1._y,_g1._x) * kala_math_Mathf.CONST_DEG;
						}
						tmp8 = _g1._speed = tmp9 / Math.cos(deg2 * kala_math_Mathf.CONST_RAD);
					}
					_g1._x = tmp8 * Math.cos(rad1);
					var tmp10;
					if(_g1._speedUpdated) {
						tmp10 = _g1._speed;
					} else {
						_g1._speedUpdated = true;
						var tmp11 = _g1._x;
						var deg3;
						if(_g1._angleUpdated) {
							deg3 = _g1._angle;
						} else {
							_g1._angleUpdated = true;
							deg3 = _g1._angle = Math.atan2(_g1._y,_g1._x) * kala_math_Mathf.CONST_DEG;
						}
						tmp10 = _g1._speed = tmp11 / Math.cos(deg3 * kala_math_Mathf.CONST_RAD);
					}
					_g1._y = tmp10 * Math.sin(rad1);
					_g1._angleUpdated = true;
					_g1._angle = value1;
				} else {
					var _this2 = this.motion.velocity;
					var rad2 = a * kala_math_Mathf.CONST_RAD;
					var tmp12;
					if(_this2._speedUpdated) {
						tmp12 = _this2._speed;
					} else {
						_this2._speedUpdated = true;
						var tmp13 = _this2._x;
						var deg4;
						if(_this2._angleUpdated) {
							deg4 = _this2._angle;
						} else {
							_this2._angleUpdated = true;
							deg4 = _this2._angle = Math.atan2(_this2._y,_this2._x) * kala_math_Mathf.CONST_DEG;
						}
						tmp12 = _this2._speed = tmp13 / Math.cos(deg4 * kala_math_Mathf.CONST_RAD);
					}
					_this2._x = tmp12 * Math.cos(rad2);
					var tmp14;
					if(_this2._speedUpdated) {
						tmp14 = _this2._speed;
					} else {
						_this2._speedUpdated = true;
						var tmp15 = _this2._x;
						var deg5;
						if(_this2._angleUpdated) {
							deg5 = _this2._angle;
						} else {
							_this2._angleUpdated = true;
							deg5 = _this2._angle = Math.atan2(_this2._y,_this2._x) * kala_math_Mathf.CONST_DEG;
						}
						tmp14 = _this2._speed = tmp15 / Math.cos(deg5 * kala_math_Mathf.CONST_RAD);
					}
					_this2._y = tmp14 * Math.sin(rad2);
					_this2._angleUpdated = true;
					_this2._angle = a;
				}
			}
		}
		var _this3 = this.motion.velocity;
		var tmp16;
		if(_this3._angleUpdated) {
			tmp16 = _this3._angle;
		} else {
			_this3._angleUpdated = true;
			tmp16 = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
		}
		this.rotation.angle = tmp16 + 90;
	}
	,__class__: enemies_Child
});
var player_Player = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.sheets.sprite_sheet_2.get("player/frames/charge/"),R.images.sprite_sheet_2,"charge",2);
	this.loadSpriteData(R.sheets.sprite_sheet_2.get("player/frames/run/"),R.images.sprite_sheet_2,"run",3);
	this.loadSpriteData(R.sheets.sprite_sheet_2.get("player/frames/stand/"),R.images.sprite_sheet_2,"stand",3);
	this.position.ox = this.scale.ox = this.rotation.px = this.get_width() / 2;
	this.position.oy = this.scale.oy = this.rotation.py = this.get_height() / 2;
	this.collider = new kala_behaviors_collision_basic_Collider(this);
	var x = this.position.ox;
	var y = this.position.oy;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this = circle.position;
	_this.x = x;
	_this.y = y;
	circle.radius = 25;
	this.collider._shapes.push(circle);
	this.mask = circle;
	this.energyBall = new player_EngeryBall();
	this.flicker = new kala_behaviors_display_Flicker(this);
	this.flicker.delay = 1;
	this.flicker.visibleDuration = 2;
};
$hxClasses["player.Player"] = player_Player;
player_Player.__name__ = ["player","Player"];
player_Player.__super__ = kala_objects_sprite_Sprite;
player_Player.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	lives: null
	,energyBall: null
	,playStateUIGroup: null
	,chargingProcessText: null
	,flicker: null
	,mask: null
	,collider: null
	,webShot: null
	,charging: null
	,chargedValue: null
	,shootAlarm: null
	,minionSpawnAlarm: null
	,minionSpawned: null
	,vspeed: null
	,update: function(elapsed) {
		kala_objects_sprite_Sprite.prototype.update.call(this,elapsed);
		if(this.lives > 0) {
			var moving = 0;
			this.charging = false;
			if(kha_SystemImpl.mobile) {
				var touchSide = kala_input_Touch.touches.getSide(null,350.);
				if(touchSide == 3) {
					this.charging = true;
				} else if(touchSide == 2) {
					moving = 1;
				} else if(touchSide == 1) {
					moving = -1;
				}
			} else if(kala_input_Keyboard.LEFT.duration > -1) {
				if(kala_input_Keyboard.RIGHT.duration > -1) {
					this.charging = true;
				} else {
					moving = -1;
				}
			} else if(kala_input_Keyboard.RIGHT.duration > -1) {
				moving = 1;
			}
			if(this.charging) {
				if(this.playStateUIGroup.opacity > 0) {
					this.playStateUIGroup.opacity -= 0.02;
				}
				this.chargedValue += 0.02;
				if(this.chargedValue > 1) {
					this.chargedValue = 1;
				}
				if(this.chargedValue > 0.1) {
					this.mask.position.y = this.position.oy + 14;
					this.animation.play("charge");
					this.chargingProcessText.visible = true;
					if(this.chargedValue > 0.4) {
						this.chargingProcessText.set_text("LIGHTNING" + " - " + Math.floor((this.chargedValue - 0.4) / 0.6 * 100) + "%");
					} else {
						this.chargingProcessText.set_text("WEB" + " - " + Math.floor(this.chargedValue / 0.4 * 100) + "%");
					}
					this.chargingProcessText.position.x = this.position.x - this.chargingProcessText.get_width() / 2;
					if(this.chargingProcessText.position.x < 0) {
						this.chargingProcessText.position.x = 0;
					} else if(this.chargingProcessText.position.x > 700 - this.chargingProcessText.get_width()) {
						this.chargingProcessText.position.x = 700 - this.chargingProcessText.get_width();
					}
				} else {
					this.animation.play("stand");
				}
				this.energyBall.charge(this.chargedValue,this.position.x);
			} else {
				this.mask.position.y = this.position.oy;
				if(this.shootAlarm > 0) {
					this.shootAlarm--;
				} else {
					this.shootAlarm = UpgradeData.shootDelay;
					Math.floor(UpgradeData.bulletsPerShot / 2);
					if(UpgradeData.bulletsPerShot % 2 == 0) {
						var _g1 = 0;
						var _g = UpgradeData.bulletsPerShot + 1;
						while(_g1 < _g) {
							var i = _g1++;
							if(i == UpgradeData.middleBulletIndex) {
								continue;
							}
							var x = this.position.x;
							var haccel = i - UpgradeData.middleBulletIndex;
							var vspeed = 10 + UpgradeData.bulletsPerShot - Math.abs(i - UpgradeData.middleBulletIndex) * 1.6;
							var bullet = player_Bullet.mainGroup.createAlive();
							bullet.position.x = x;
							bullet.position.y = 360;
							var _this = bullet.scale;
							_this.x = 2;
							_this.y = 2;
							bullet.hspeed = 0;
							bullet.haccel = haccel;
							bullet.vspeed = vspeed;
						}
					} else {
						var _g11 = 0;
						var _g2 = UpgradeData.bulletsPerShot;
						while(_g11 < _g2) {
							var i1 = _g11++;
							var x1 = this.position.x;
							var haccel1 = i1 - UpgradeData.middleBulletIndex;
							var vspeed1 = 10 + UpgradeData.bulletsPerShot - Math.abs(i1 - UpgradeData.middleBulletIndex) * 1.6;
							var bullet1 = player_Bullet.mainGroup.createAlive();
							bullet1.position.x = x1;
							bullet1.position.y = 360;
							var _this1 = bullet1.scale;
							_this1.x = 2;
							_this1.y = 2;
							bullet1.hspeed = 0;
							bullet1.haccel = haccel1;
							bullet1.vspeed = vspeed1;
						}
					}
				}
				this.chargingProcessText.visible = false;
				if(this.chargedValue > 0.4) {
					var x2 = this.position.x;
					var bonus = (this.chargedValue - 0.4) / 0.6;
					var lightning = player_Lightning.group.createAlive();
					lightning.position.x = x2;
					lightning.scale.x = 0;
					var _this2 = lightning.tween;
					var target = null;
					var ease = null;
					if(target == null) {
						target = _this2.object;
					}
					if(ease == null) {
						ease = kala_behaviors_tween_Ease.linear;
					}
					var _this3 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this2,null,target,ease,null);
					_this3.nodes.push(kala_behaviors_tween_TweenNode.WAIT(2));
					_this3.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
						var _this4 = G.sfxGroup;
						var volume = (bonus + 1) / 2;
						var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.lightning,false),_this4,false);
						channel._volume = volume;
						channel.channel.set_volume(_this4.muted?0:volume * _this4._volume);
						_this4.channels.push(channel);
					}));
					_this3.manager._tweens.push(_this3);
					_this3.nextNode();
					var _this5 = lightning.tween;
					var target1 = null;
					var ease1 = null;
					if(target1 == null) {
						target1 = _this5.object;
					}
					if(ease1 == null) {
						ease1 = kala_behaviors_tween_Ease.linear;
					}
					var _this6 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this5,null,target1,ease1,null);
					var vars = { x : (kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1) * (0.4 + bonus * 0.6)};
					var task = kala_behaviors_tween_TweenTask.create();
					task.init(lightning.scale,vars,20,kala_behaviors_tween_Ease.elasticOut,null);
					task.backwardEase = null;
					_this6.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
					_this6.nodes.push(kala_behaviors_tween_TweenNode.WAIT(10));
					var task1 = kala_behaviors_tween_TweenTask.create();
					task1.init(lightning.scale,{ x : 0},30,kala_behaviors_tween_Ease.elasticInOut,null);
					task1.backwardEase = null;
					_this6.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
					_this6.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
						lightning.kill();
					}));
					_this6.manager._tweens.push(_this6);
					_this6.nextNode();
				} else if(this.chargedValue > 0.1) {
					this.webShot++;
					var x3 = this.position.x;
					var web = player_Web.group.createAlive();
					web.spreading = false;
					web.animation.play("shooting");
					var _this7 = web.scale;
					var originX = web.get_width() / 2;
					var originY = web.get_height();
					_this7.x = 0;
					_this7.y = 0;
					_this7.ox = originX;
					_this7.oy = originY;
					web.position.ox = web.get_width() / 2;
					web.position.x = x3 + 10;
					web.opacity = 1;
					web.mask.active = false;
					var _this8 = web.tween;
					var target2 = null;
					var ease2 = null;
					if(target2 == null) {
						target2 = _this8.object;
					}
					if(ease2 == null) {
						ease2 = kala_behaviors_tween_Ease.linear;
					}
					var _this9 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this8,null,target2,ease2,null);
					var task2 = kala_behaviors_tween_TweenTask.create();
					task2.init(web.scale,{ x : 1.2, y : 1},8,kala_behaviors_tween_Ease.quartInOut,null);
					task2.backwardEase = null;
					_this9.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
					_this9.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
						web.spreading = true;
						web.animation.play("spreading");
						web.position.ox = web.get_width() / 2;
						var _this10 = web.scale;
						var originX1 = web.get_width() / 2 - 15;
						var originY1 = web.get_height() / 2;
						_this10.x = 0;
						_this10.y = 0;
						_this10.ox = originX1;
						_this10.oy = originY1;
						web.mask.active = true;
					}));
					var vars1 = { x : kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1, y : 1};
					var task3 = kala_behaviors_tween_TweenTask.create();
					task3.init(web.scale,vars1,15,kala_behaviors_tween_Ease.elasticOut,null);
					task3.backwardEase = null;
					_this9.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
					_this9.nodes.push(kala_behaviors_tween_TweenNode.WAIT(UpgradeData.webDuration));
					var task4 = kala_behaviors_tween_TweenTask.create();
					task4.init(web,{ opacity : 0},60,kala_behaviors_tween_Ease.sineInOut,null);
					task4.backwardEase = null;
					_this9.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task4));
					_this9.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_3) {
						web.kill();
					}));
					_this9.manager._tweens.push(_this9);
					_this9.nextNode();
				}
				this.energyBall.visible = false;
				this.chargedValue = 0;
				if(moving != 0) {
					this.animation.play("run");
					this.scale.x = -moving;
					var _g3 = this;
					_g3.position.x = _g3.position.x + 12 * moving;
					if(this.position.x < 0) {
						this.position.x = 0;
					} else if(this.position.x > 700) {
						this.position.x = 700;
					}
				} else {
					this.animation.play("stand");
				}
			}
			if(this.minionSpawnAlarm > 0) {
				this.minionSpawnAlarm--;
			} else if(states_PlayState.instance.tutorialState == -1 || this.minionSpawned < 6) {
				this.minionSpawnAlarm = UpgradeData.minionSpawnDelay;
				player_Minion.group.createAlive();
			}
		} else {
			this.animation.play("stand");
			var _g4 = this;
			_g4.position.y = _g4.position.y + this.vspeed;
			this.vspeed += 1;
			var _g5 = this;
			_g5.rotation.angle = _g5.rotation.angle + 16;
			this.energyBall.kill();
			this.chargingProcessText.kill();
			if(this.position.y > 495 + this.get_height() && !states_PlayState.instance.closing) {
				states_PlayState.instance.goTo(states_UpgradeState.instance);
			}
		}
		if(!this.charging) {
			if(this.playStateUIGroup.opacity < 1) {
				this.playStateUIGroup.opacity += 0.02;
			}
		}
	}
	,onStart: function() {
		this.set_lives(UpgradeData.startingLives);
		this.position.x = 350.;
		this.position.y = 414;
		this.rotation.angle = 0;
		this.chargedValue = 0;
		this.shootAlarm = UpgradeData.shootDelay;
		this.minionSpawnAlarm = 0;
		this.minionSpawned = 0;
		this.flicker.flickersLeft = 0;
		this.energyBall.revive();
		this.chargingProcessText.revive();
		this.vspeed = -18;
	}
	,getHit: function() {
		if(states_PlayState.instance.tutorialState == -1) {
			var _g = this;
			_g.set_lives(_g.lives - 1);
		}
		if(this.lives > 0) {
			var _this = this.flicker;
			_this.flickersLeft = 30 / (_this.delay + _this.visibleDuration) | 0;
			_this._visibleTimeLeft = 0;
			_this._onCompleteCB = null;
		}
		var _this1 = kala_Kala.defaultView;
		_this1.shakeIntensity = 18;
		_this1.shakeLeft = 15. | 0;
		_this1.shakeDelay = 0;
		_this1._shakeDelayTimeLeft = 0;
		_this1.shakeAxes = 2;
	}
	,updateAlive: function(elapsed) {
		var moving = 0;
		this.charging = false;
		if(kha_SystemImpl.mobile) {
			var touchSide = kala_input_Touch.touches.getSide(null,350.);
			if(touchSide == 3) {
				this.charging = true;
			} else if(touchSide == 2) {
				moving = 1;
			} else if(touchSide == 1) {
				moving = -1;
			}
		} else if(kala_input_Keyboard.LEFT.duration > -1) {
			if(kala_input_Keyboard.RIGHT.duration > -1) {
				this.charging = true;
			} else {
				moving = -1;
			}
		} else if(kala_input_Keyboard.RIGHT.duration > -1) {
			moving = 1;
		}
		if(this.charging) {
			if(this.playStateUIGroup.opacity > 0) {
				this.playStateUIGroup.opacity -= 0.02;
			}
			this.chargedValue += 0.02;
			if(this.chargedValue > 1) {
				this.chargedValue = 1;
			}
			if(this.chargedValue > 0.1) {
				this.mask.position.y = this.position.oy + 14;
				this.animation.play("charge");
				this.chargingProcessText.visible = true;
				if(this.chargedValue > 0.4) {
					this.chargingProcessText.set_text("LIGHTNING" + " - " + Math.floor((this.chargedValue - 0.4) / 0.6 * 100) + "%");
				} else {
					this.chargingProcessText.set_text("WEB" + " - " + Math.floor(this.chargedValue / 0.4 * 100) + "%");
				}
				this.chargingProcessText.position.x = this.position.x - this.chargingProcessText.get_width() / 2;
				if(this.chargingProcessText.position.x < 0) {
					this.chargingProcessText.position.x = 0;
				} else if(this.chargingProcessText.position.x > 700 - this.chargingProcessText.get_width()) {
					this.chargingProcessText.position.x = 700 - this.chargingProcessText.get_width();
				}
			} else {
				this.animation.play("stand");
			}
			this.energyBall.charge(this.chargedValue,this.position.x);
		} else {
			this.mask.position.y = this.position.oy;
			if(this.shootAlarm > 0) {
				this.shootAlarm--;
			} else {
				this.shootAlarm = UpgradeData.shootDelay;
				Math.floor(UpgradeData.bulletsPerShot / 2);
				if(UpgradeData.bulletsPerShot % 2 == 0) {
					var _g1 = 0;
					var _g = UpgradeData.bulletsPerShot + 1;
					while(_g1 < _g) {
						var i = _g1++;
						if(i == UpgradeData.middleBulletIndex) {
							continue;
						}
						var x = this.position.x;
						var haccel = i - UpgradeData.middleBulletIndex;
						var vspeed = 10 + UpgradeData.bulletsPerShot - Math.abs(i - UpgradeData.middleBulletIndex) * 1.6;
						var bullet = player_Bullet.mainGroup.createAlive();
						bullet.position.x = x;
						bullet.position.y = 360;
						var _this = bullet.scale;
						_this.x = 2;
						_this.y = 2;
						bullet.hspeed = 0;
						bullet.haccel = haccel;
						bullet.vspeed = vspeed;
					}
				} else {
					var _g11 = 0;
					var _g2 = UpgradeData.bulletsPerShot;
					while(_g11 < _g2) {
						var i1 = _g11++;
						var x1 = this.position.x;
						var haccel1 = i1 - UpgradeData.middleBulletIndex;
						var vspeed1 = 10 + UpgradeData.bulletsPerShot - Math.abs(i1 - UpgradeData.middleBulletIndex) * 1.6;
						var bullet1 = player_Bullet.mainGroup.createAlive();
						bullet1.position.x = x1;
						bullet1.position.y = 360;
						var _this1 = bullet1.scale;
						_this1.x = 2;
						_this1.y = 2;
						bullet1.hspeed = 0;
						bullet1.haccel = haccel1;
						bullet1.vspeed = vspeed1;
					}
				}
			}
			this.chargingProcessText.visible = false;
			if(this.chargedValue > 0.4) {
				var x2 = this.position.x;
				var bonus = (this.chargedValue - 0.4) / 0.6;
				var lightning = player_Lightning.group.createAlive();
				lightning.position.x = x2;
				lightning.scale.x = 0;
				var _this2 = lightning.tween;
				var target = null;
				var ease = null;
				if(target == null) {
					target = _this2.object;
				}
				if(ease == null) {
					ease = kala_behaviors_tween_Ease.linear;
				}
				var _this3 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this2,null,target,ease,null);
				_this3.nodes.push(kala_behaviors_tween_TweenNode.WAIT(2));
				_this3.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
					var _this4 = G.sfxGroup;
					var volume = (bonus + 1) / 2;
					var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.lightning,false),_this4,false);
					channel._volume = volume;
					channel.channel.set_volume(_this4.muted?0:volume * _this4._volume);
					_this4.channels.push(channel);
				}));
				_this3.manager._tweens.push(_this3);
				_this3.nextNode();
				var _this5 = lightning.tween;
				var target1 = null;
				var ease1 = null;
				if(target1 == null) {
					target1 = _this5.object;
				}
				if(ease1 == null) {
					ease1 = kala_behaviors_tween_Ease.linear;
				}
				var _this6 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this5,null,target1,ease1,null);
				var vars = { x : (kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1) * (0.4 + bonus * 0.6)};
				var task = kala_behaviors_tween_TweenTask.create();
				task.init(lightning.scale,vars,20,kala_behaviors_tween_Ease.elasticOut,null);
				task.backwardEase = null;
				_this6.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
				_this6.nodes.push(kala_behaviors_tween_TweenNode.WAIT(10));
				var task1 = kala_behaviors_tween_TweenTask.create();
				task1.init(lightning.scale,{ x : 0},30,kala_behaviors_tween_Ease.elasticInOut,null);
				task1.backwardEase = null;
				_this6.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
				_this6.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
					lightning.kill();
				}));
				_this6.manager._tweens.push(_this6);
				_this6.nextNode();
			} else if(this.chargedValue > 0.1) {
				this.webShot++;
				var x3 = this.position.x;
				var web = player_Web.group.createAlive();
				web.spreading = false;
				web.animation.play("shooting");
				var _this7 = web.scale;
				var originX = web.get_width() / 2;
				var originY = web.get_height();
				_this7.x = 0;
				_this7.y = 0;
				_this7.ox = originX;
				_this7.oy = originY;
				web.position.ox = web.get_width() / 2;
				web.position.x = x3 + 10;
				web.opacity = 1;
				web.mask.active = false;
				var _this8 = web.tween;
				var target2 = null;
				var ease2 = null;
				if(target2 == null) {
					target2 = _this8.object;
				}
				if(ease2 == null) {
					ease2 = kala_behaviors_tween_Ease.linear;
				}
				var _this9 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this8,null,target2,ease2,null);
				var task2 = kala_behaviors_tween_TweenTask.create();
				task2.init(web.scale,{ x : 1.2, y : 1},8,kala_behaviors_tween_Ease.quartInOut,null);
				task2.backwardEase = null;
				_this9.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
				_this9.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
					web.spreading = true;
					web.animation.play("spreading");
					web.position.ox = web.get_width() / 2;
					var _this10 = web.scale;
					var originX1 = web.get_width() / 2 - 15;
					var originY1 = web.get_height() / 2;
					_this10.x = 0;
					_this10.y = 0;
					_this10.ox = originX1;
					_this10.oy = originY1;
					web.mask.active = true;
				}));
				var vars1 = { x : kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1, y : 1};
				var task3 = kala_behaviors_tween_TweenTask.create();
				task3.init(web.scale,vars1,15,kala_behaviors_tween_Ease.elasticOut,null);
				task3.backwardEase = null;
				_this9.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
				_this9.nodes.push(kala_behaviors_tween_TweenNode.WAIT(UpgradeData.webDuration));
				var task4 = kala_behaviors_tween_TweenTask.create();
				task4.init(web,{ opacity : 0},60,kala_behaviors_tween_Ease.sineInOut,null);
				task4.backwardEase = null;
				_this9.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task4));
				_this9.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_3) {
					web.kill();
				}));
				_this9.manager._tweens.push(_this9);
				_this9.nextNode();
			}
			this.energyBall.visible = false;
			this.chargedValue = 0;
			if(moving != 0) {
				this.animation.play("run");
				this.scale.x = -moving;
				var _g3 = this;
				_g3.position.x = _g3.position.x + 12 * moving;
				if(this.position.x < 0) {
					this.position.x = 0;
				} else if(this.position.x > 700) {
					this.position.x = 700;
				}
			} else {
				this.animation.play("stand");
			}
		}
		if(this.minionSpawnAlarm > 0) {
			this.minionSpawnAlarm--;
		} else if(states_PlayState.instance.tutorialState == -1 || this.minionSpawned < 6) {
			this.minionSpawnAlarm = UpgradeData.minionSpawnDelay;
			player_Minion.group.createAlive();
		}
	}
	,set_lives: function(value) {
		states_PlayState.instance.livesText.set_text("X " + value);
		return this.lives = value;
	}
	,__class__: player_Player
	,__properties__: $extend(kala_objects_sprite_Sprite.prototype.__properties__,{set_lives:"set_lives"})
});
var enemies_EnemyD = function() {
	enemies_Enemy.call(this);
	this.sprite.loadSpriteData(R.enemyD,null,null,5).animation.play();
	var _this = this.sprite;
	var _this1 = _this.position;
	_this1.ox = 68;
	_this1.oy = 64;
	var _this2 = _this.scale;
	_this2.ox = 68;
	_this2.oy = 64;
	var _this3 = _this.rotation;
	_this3.px = 68;
	_this3.py = 64;
	this.hpText.set_size(45);
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this4 = circle.position;
	_this4.x = 0;
	_this4.y = 0;
	circle.radius = 50;
	this.collider._shapes.push(circle);
	this.mask = circle;
	this.halfWidth = this.sprite.get_width() / 2;
	this.halfHeight = this.sprite.get_height() / 2;
	var _this5 = this.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this5.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this6 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this5,null,target,ease,null);
	var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
	timeline.init(_this6.manager,_this6,null,null,null);
	timeline.loopsLeft = 0 - 1;
	_this6.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(this.sprite,{ y : 80},60,kala_behaviors_tween_Ease.sineInOut,null);
	task.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(this.sprite,{ y : 0},60,kala_behaviors_tween_Ease.sineInOut,null);
	task1.backwardEase = null;
	timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	var _this7 = timeline.parent;
	_this7.manager._tweens.push(_this7);
	_this7.nextNode();
	this.deathEffect.image = this.sprite.image;
	var _this8 = this.deathEffect.frameRect;
	var rect = this.sprite.frameRect;
	_this8.x = rect.x;
	_this8.y = rect.y;
	_this8.width = rect.width;
	_this8.height = rect.height;
	var _this9 = this.deathEffect.position;
	var originX = this.sprite.position.ox;
	var originY = this.sprite.position.oy;
	_this9.ox = originX;
	_this9.oy = originY;
	this.bodyAtkOn = false;
	this.gemDropQuantity = 9;
	this.isSubEnemy = false;
};
$hxClasses["enemies.EnemyD"] = enemies_EnemyD;
enemies_EnemyD.__name__ = ["enemies","EnemyD"];
enemies_EnemyD.create = function(x,y) {
	states_PlayState.instance.onScreenEnemyCount++;
	var enemy = enemies_EnemyD.pool.get();
	enemy.revive();
	var _this = enemy.position;
	_this.x = x;
	_this.y = y;
	enemy.set_hp(150);
	var actionCB = function() {
		var n = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
		var _this1 = G.sfxGroup;
		var volume = n / 15;
		var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this1,false);
		channel._volume = volume;
		channel.channel.set_volume(_this1.muted?0:volume * _this1._volume);
		_this1.channels.push(channel);
		var _g1 = 0;
		while(_g1 < n) {
			++_g1;
			var child = enemies_EnemyD.childGroup.createAlive();
			var x1 = enemy.position.x;
			var y1 = enemy.position.y + enemy.sprite.position.y;
			var _this2 = child.position;
			_this2.x = x1;
			_this2.y = y1;
			var _this3 = child.motion.velocity;
			var angle = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
			var speed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
			var rad = angle * kala_math_Mathf.CONST_RAD;
			var tmp;
			if(_this3._speedUpdated) {
				tmp = _this3._speed;
			} else {
				_this3._speedUpdated = true;
				var tmp1 = _this3._x;
				var deg;
				if(_this3._angleUpdated) {
					deg = _this3._angle;
				} else {
					_this3._angleUpdated = true;
					deg = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp = _this3._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
			}
			_this3._x = tmp * Math.cos(rad);
			var tmp2;
			if(_this3._speedUpdated) {
				tmp2 = _this3._speed;
			} else {
				_this3._speedUpdated = true;
				var tmp3 = _this3._x;
				var deg1;
				if(_this3._angleUpdated) {
					deg1 = _this3._angle;
				} else {
					_this3._angleUpdated = true;
					deg1 = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp2 = _this3._speed = tmp3 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
			}
			_this3._y = tmp2 * Math.sin(rad);
			_this3._angleUpdated = true;
			_this3._angle = angle;
			var deg2;
			if(_this3._angleUpdated) {
				deg2 = _this3._angle;
			} else {
				_this3._angleUpdated = true;
				deg2 = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
			}
			var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
			_this3._x = speed * Math.cos(rad1);
			_this3._y = speed * Math.sin(rad1);
			_this3._speedUpdated = true;
			_this3._speed = speed;
			child.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
			child.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
			child.opacity = 0;
			child.set_hp(9);
		}
	};
	var _gthis = enemy;
	var value = enemy.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
	var x2 = Math.max(enemy.halfWidth,Math.min(700 - enemy.halfWidth,value));
	var value1 = enemy.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
	var y2 = Math.max(enemy.halfHeight,Math.min(200,value1));
	var x11 = enemy.position.x;
	var y11 = enemy.position.y;
	var t = Math.sqrt((x11 - x2) * (x11 - x2) + (y11 - y2) * (y11 - y2)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
	var _this4 = enemy.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this4.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	enemy.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this4,null,target,ease,null);
	var _this5 = enemy.moveRandomTimeline;
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(enemy,{ x : x2, y : y2},t,kala_behaviors_tween_Ease.sineInOut,null);
	task.backwardEase = null;
	_this5.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	_this5.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
		actionCB();
	}));
	_this5.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
	_this5.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
		_gthis.moveRandom(actionCB);
	}));
	_this5.manager._tweens.push(_this5);
	_this5.nextNode();
};
enemies_EnemyD.createRandomPos = function() {
	switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,2)) {
	case 0:
		var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy = enemies_EnemyD.pool.get();
		enemy.revive();
		var _this = enemy.position;
		_this.x = -60;
		_this.y = y;
		enemy.set_hp(150);
		var actionCB = function() {
			var n = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
			var _this1 = G.sfxGroup;
			var volume = n / 15;
			var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this1,false);
			channel._volume = volume;
			channel.channel.set_volume(_this1.muted?0:volume * _this1._volume);
			_this1.channels.push(channel);
			var _g1 = 0;
			while(_g1 < n) {
				++_g1;
				var child = enemies_EnemyD.childGroup.createAlive();
				var x = enemy.position.x;
				var y1 = enemy.position.y + enemy.sprite.position.y;
				var _this2 = child.position;
				_this2.x = x;
				_this2.y = y1;
				var _this3 = child.motion.velocity;
				var angle = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
				var speed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
				var rad = angle * kala_math_Mathf.CONST_RAD;
				var tmp;
				if(_this3._speedUpdated) {
					tmp = _this3._speed;
				} else {
					_this3._speedUpdated = true;
					var tmp1 = _this3._x;
					var deg;
					if(_this3._angleUpdated) {
						deg = _this3._angle;
					} else {
						_this3._angleUpdated = true;
						deg = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp = _this3._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
				}
				_this3._x = tmp * Math.cos(rad);
				var tmp2;
				if(_this3._speedUpdated) {
					tmp2 = _this3._speed;
				} else {
					_this3._speedUpdated = true;
					var tmp3 = _this3._x;
					var deg1;
					if(_this3._angleUpdated) {
						deg1 = _this3._angle;
					} else {
						_this3._angleUpdated = true;
						deg1 = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp2 = _this3._speed = tmp3 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
				}
				_this3._y = tmp2 * Math.sin(rad);
				_this3._angleUpdated = true;
				_this3._angle = angle;
				var deg2;
				if(_this3._angleUpdated) {
					deg2 = _this3._angle;
				} else {
					_this3._angleUpdated = true;
					deg2 = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
				}
				var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
				_this3._x = speed * Math.cos(rad1);
				_this3._y = speed * Math.sin(rad1);
				_this3._speedUpdated = true;
				_this3._speed = speed;
				child.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
				child.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
				child.opacity = 0;
				child.set_hp(9);
			}
		};
		var _gthis = enemy;
		var value = enemy.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var x1 = Math.max(enemy.halfWidth,Math.min(700 - enemy.halfWidth,value));
		var value1 = enemy.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var y2 = Math.max(enemy.halfHeight,Math.min(200,value1));
		var x11 = enemy.position.x;
		var y11 = enemy.position.y;
		var t = Math.sqrt((x11 - x1) * (x11 - x1) + (y11 - y2) * (y11 - y2)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
		var _this4 = enemy.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this4.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		enemy.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this4,null,target,ease,null);
		var _this5 = enemy.moveRandomTimeline;
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(enemy,{ x : x1, y : y2},t,kala_behaviors_tween_Ease.sineInOut,null);
		task.backwardEase = null;
		_this5.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this5.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			actionCB();
		}));
		_this5.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
		_this5.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.moveRandom(actionCB);
		}));
		_this5.manager._tweens.push(_this5);
		_this5.nextNode();
		break;
	case 1:
		var y3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,300);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy1 = enemies_EnemyD.pool.get();
		enemy1.revive();
		var _this6 = enemy1.position;
		_this6.x = 760;
		_this6.y = y3;
		enemy1.set_hp(150);
		var actionCB1 = function() {
			var n1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
			var _this7 = G.sfxGroup;
			var volume1 = n1 / 15;
			var channel1 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this7,false);
			channel1._volume = volume1;
			channel1.channel.set_volume(_this7.muted?0:volume1 * _this7._volume);
			_this7.channels.push(channel1);
			var _g11 = 0;
			while(_g11 < n1) {
				++_g11;
				var child1 = enemies_EnemyD.childGroup.createAlive();
				var x2 = enemy1.position.x;
				var y4 = enemy1.position.y + enemy1.sprite.position.y;
				var _this8 = child1.position;
				_this8.x = x2;
				_this8.y = y4;
				var _this9 = child1.motion.velocity;
				var angle1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
				var speed1 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
				var rad2 = angle1 * kala_math_Mathf.CONST_RAD;
				var tmp4;
				if(_this9._speedUpdated) {
					tmp4 = _this9._speed;
				} else {
					_this9._speedUpdated = true;
					var tmp5 = _this9._x;
					var deg3;
					if(_this9._angleUpdated) {
						deg3 = _this9._angle;
					} else {
						_this9._angleUpdated = true;
						deg3 = _this9._angle = Math.atan2(_this9._y,_this9._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp4 = _this9._speed = tmp5 / Math.cos(deg3 * kala_math_Mathf.CONST_RAD);
				}
				_this9._x = tmp4 * Math.cos(rad2);
				var tmp6;
				if(_this9._speedUpdated) {
					tmp6 = _this9._speed;
				} else {
					_this9._speedUpdated = true;
					var tmp7 = _this9._x;
					var deg4;
					if(_this9._angleUpdated) {
						deg4 = _this9._angle;
					} else {
						_this9._angleUpdated = true;
						deg4 = _this9._angle = Math.atan2(_this9._y,_this9._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp6 = _this9._speed = tmp7 / Math.cos(deg4 * kala_math_Mathf.CONST_RAD);
				}
				_this9._y = tmp6 * Math.sin(rad2);
				_this9._angleUpdated = true;
				_this9._angle = angle1;
				var deg5;
				if(_this9._angleUpdated) {
					deg5 = _this9._angle;
				} else {
					_this9._angleUpdated = true;
					deg5 = _this9._angle = Math.atan2(_this9._y,_this9._x) * kala_math_Mathf.CONST_DEG;
				}
				var rad3 = deg5 * kala_math_Mathf.CONST_RAD;
				_this9._x = speed1 * Math.cos(rad3);
				_this9._y = speed1 * Math.sin(rad3);
				_this9._speedUpdated = true;
				_this9._speed = speed1;
				child1.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
				child1.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
				child1.opacity = 0;
				child1.set_hp(9);
			}
		};
		var _gthis1 = enemy1;
		var value2 = enemy1.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var x3 = Math.max(enemy1.halfWidth,Math.min(700 - enemy1.halfWidth,value2));
		var value3 = enemy1.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var y5 = Math.max(enemy1.halfHeight,Math.min(200,value3));
		var x12 = enemy1.position.x;
		var y12 = enemy1.position.y;
		var t1 = Math.sqrt((x12 - x3) * (x12 - x3) + (y12 - y5) * (y12 - y5)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
		var _this10 = enemy1.tween;
		var target1 = null;
		var ease1 = null;
		if(target1 == null) {
			target1 = _this10.object;
		}
		if(ease1 == null) {
			ease1 = kala_behaviors_tween_Ease.linear;
		}
		enemy1.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this10,null,target1,ease1,null);
		var _this11 = enemy1.moveRandomTimeline;
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(enemy1,{ x : x3, y : y5},t1,kala_behaviors_tween_Ease.sineInOut,null);
		task1.backwardEase = null;
		_this11.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		_this11.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
			actionCB1();
		}));
		_this11.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
		_this11.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_3) {
			_gthis1.moveRandom(actionCB1);
		}));
		_this11.manager._tweens.push(_this11);
		_this11.nextNode();
		break;
	case 2:
		var x4 = kala_math__$Random_Random_$Impl_$.instance.GetIn(60,640);
		states_PlayState.instance.onScreenEnemyCount++;
		var enemy2 = enemies_EnemyD.pool.get();
		enemy2.revive();
		var _this12 = enemy2.position;
		_this12.x = x4;
		_this12.y = -160;
		enemy2.set_hp(150);
		var actionCB2 = function() {
			var n2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(3,6);
			var _this13 = G.sfxGroup;
			var volume2 = n2 / 15;
			var channel2 = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.spawn,false),_this13,false);
			channel2._volume = volume2;
			channel2.channel.set_volume(_this13.muted?0:volume2 * _this13._volume);
			_this13.channels.push(channel2);
			var _g12 = 0;
			while(_g12 < n2) {
				++_g12;
				var child2 = enemies_EnemyD.childGroup.createAlive();
				var x5 = enemy2.position.x;
				var y6 = enemy2.position.y + enemy2.sprite.position.y;
				var _this14 = child2.position;
				_this14.x = x5;
				_this14.y = y6;
				var _this15 = child2.motion.velocity;
				var angle2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
				var speed2 = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
				var rad4 = angle2 * kala_math_Mathf.CONST_RAD;
				var tmp8;
				if(_this15._speedUpdated) {
					tmp8 = _this15._speed;
				} else {
					_this15._speedUpdated = true;
					var tmp9 = _this15._x;
					var deg6;
					if(_this15._angleUpdated) {
						deg6 = _this15._angle;
					} else {
						_this15._angleUpdated = true;
						deg6 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp8 = _this15._speed = tmp9 / Math.cos(deg6 * kala_math_Mathf.CONST_RAD);
				}
				_this15._x = tmp8 * Math.cos(rad4);
				var tmp10;
				if(_this15._speedUpdated) {
					tmp10 = _this15._speed;
				} else {
					_this15._speedUpdated = true;
					var tmp11 = _this15._x;
					var deg7;
					if(_this15._angleUpdated) {
						deg7 = _this15._angle;
					} else {
						_this15._angleUpdated = true;
						deg7 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
					}
					tmp10 = _this15._speed = tmp11 / Math.cos(deg7 * kala_math_Mathf.CONST_RAD);
				}
				_this15._y = tmp10 * Math.sin(rad4);
				_this15._angleUpdated = true;
				_this15._angle = angle2;
				var deg8;
				if(_this15._angleUpdated) {
					deg8 = _this15._angle;
				} else {
					_this15._angleUpdated = true;
					deg8 = _this15._angle = Math.atan2(_this15._y,_this15._x) * kala_math_Mathf.CONST_DEG;
				}
				var rad5 = deg8 * kala_math_Mathf.CONST_RAD;
				_this15._x = speed2 * Math.cos(rad5);
				_this15._y = speed2 * Math.sin(rad5);
				_this15._speedUpdated = true;
				_this15._speed = speed2;
				child2.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
				child2.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
				child2.opacity = 0;
				child2.set_hp(9);
			}
		};
		var _gthis2 = enemy2;
		var value4 = enemy2.position.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var x6 = Math.max(enemy2.halfWidth,Math.min(700 - enemy2.halfWidth,value4));
		var value5 = enemy2.position.y + kala_math__$Random_Random_$Impl_$.instance.GetIn(-100,100);
		var y7 = Math.max(enemy2.halfHeight,Math.min(200,value5));
		var x13 = enemy2.position.x;
		var y13 = enemy2.position.y;
		var t2 = Math.sqrt((x13 - x6) * (x13 - x6) + (y13 - y7) * (y13 - y7)) / kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.5,1);
		var _this16 = enemy2.tween;
		var target2 = null;
		var ease2 = null;
		if(target2 == null) {
			target2 = _this16.object;
		}
		if(ease2 == null) {
			ease2 = kala_behaviors_tween_Ease.linear;
		}
		enemy2.moveRandomTimeline = kala_behaviors_tween_TweenTimeline.pool.get().init(_this16,null,target2,ease2,null);
		var _this17 = enemy2.moveRandomTimeline;
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(enemy2,{ x : x6, y : y7},t2,kala_behaviors_tween_Ease.sineInOut,null);
		task2.backwardEase = null;
		_this17.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		_this17.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_4) {
			actionCB2();
		}));
		_this17.nodes.push(kala_behaviors_tween_TweenNode.WAIT(kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(30,60)));
		_this17.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_5) {
			_gthis2.moveRandom(actionCB2);
		}));
		_this17.manager._tweens.push(_this17);
		_this17.nextNode();
		break;
	}
};
enemies_EnemyD.__super__ = enemies_Enemy;
enemies_EnemyD.prototype = $extend(enemies_Enemy.prototype,{
	updateAlive: function(elapsed) {
		enemies_Enemy.prototype.updateAlive.call(this,elapsed);
		this.hpText.position.y = this.sprite.position.y;
		this.mask.position.y = this.sprite.position.y + 2;
	}
	,put: function() {
		enemies_Enemy.prototype.put.call(this);
		enemies_EnemyD.pool._objects.push(this);
	}
	,createChild: function() {
		var child = enemies_EnemyD.childGroup.createAlive();
		var x = this.position.x;
		var y = this.position.y + this.sprite.position.y;
		var _this = child.position;
		_this.x = x;
		_this.y = y;
		var _this1 = child.motion.velocity;
		var angle = kala_math__$Random_Random_$Impl_$.instance.GetIn(230,310);
		var speed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,1);
		var rad = angle * kala_math_Mathf.CONST_RAD;
		var tmp;
		if(_this1._speedUpdated) {
			tmp = _this1._speed;
		} else {
			_this1._speedUpdated = true;
			var tmp1 = _this1._x;
			var deg;
			if(_this1._angleUpdated) {
				deg = _this1._angle;
			} else {
				_this1._angleUpdated = true;
				deg = _this1._angle = Math.atan2(_this1._y,_this1._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp = _this1._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
		}
		_this1._x = tmp * Math.cos(rad);
		var tmp2;
		if(_this1._speedUpdated) {
			tmp2 = _this1._speed;
		} else {
			_this1._speedUpdated = true;
			var tmp3 = _this1._x;
			var deg1;
			if(_this1._angleUpdated) {
				deg1 = _this1._angle;
			} else {
				_this1._angleUpdated = true;
				deg1 = _this1._angle = Math.atan2(_this1._y,_this1._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp2 = _this1._speed = tmp3 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
		}
		_this1._y = tmp2 * Math.sin(rad);
		_this1._angleUpdated = true;
		_this1._angle = angle;
		var deg2;
		if(_this1._angleUpdated) {
			deg2 = _this1._angle;
		} else {
			_this1._angleUpdated = true;
			deg2 = _this1._angle = Math.atan2(_this1._y,_this1._x) * kala_math_Mathf.CONST_DEG;
		}
		var rad1 = deg2 * kala_math_Mathf.CONST_RAD;
		_this1._x = speed * Math.cos(rad1);
		_this1._y = speed * Math.sin(rad1);
		_this1._speedUpdated = true;
		_this1._speed = speed;
		child.leftTurning = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < 50;
		child.turningDelay = kala_math__$Random_Random_$Impl_$.instance.GetIn(30,45);
		child.opacity = 0;
		child.set_hp(9);
	}
	,__class__: enemies_EnemyD
});
var enemies_Gem = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.gem,R.images.sprite_sheet_2);
	var x = this.get_width() / 2;
	var y = this.get_height() / 2;
	var _this = this.position;
	_this.ox = x;
	_this.oy = y;
	var _this1 = this.scale;
	_this1.ox = x;
	_this1.oy = y;
	var _this2 = this.rotation;
	_this2.px = x;
	_this2.py = y;
};
$hxClasses["enemies.Gem"] = enemies_Gem;
enemies_Gem.__name__ = ["enemies","Gem"];
enemies_Gem.create = function(x,y) {
	var gem = enemies_Gem.group.createAlive();
	var _this = gem.position;
	_this.x = x;
	_this.y = y;
	gem.scale.x = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
	gem.scale.y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1;
	gem.angleOffset = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-90,90);
	gem.hspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-4,4);
	gem.vspeed = kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-2,-6);
	gem.time = 30;
};
enemies_Gem.__super__ = kala_objects_sprite_Sprite;
enemies_Gem.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	hspeed: null
	,vspeed: null
	,angleOffset: null
	,time: null
	,update: function(elapsed) {
		if(this.time == 0) {
			var this1 = this.position;
			var pos = enemies_Gem.playerPos;
			var distance = Math.sqrt((this1.x - pos.x) * (this1.x - pos.x) + (this1.y - pos.y) * (this1.y - pos.y));
			if(distance < 40) {
				this.kill();
				if(!G.tutorialPassed || states_PlayState.instance.tutorialState == -1) {
					var _g = UpgradeData;
					_g.set_money(_g.money + 1);
					enemies_Gem.gemText.set_text("X " + UpgradeData.money);
				}
			} else if(distance < UpgradeData.gemCollectionDistance) {
				var this2 = this.position;
				var pos1 = enemies_Gem.playerPos;
				var a = Math.atan2(pos1.y - this2.y,pos1.x - this2.x);
				this.rotation.angle = a * kala_math_Mathf.CONST_DEG;
				this.hspeed = 18 * Math.cos(a);
				this.vspeed = 18 * Math.sin(a);
			}
		} else {
			this.time--;
		}
		if(this.vspeed == 0 && this.hspeed == 0) {
			return;
		}
		if(this.position.x < 0 && this.hspeed < 0 || this.position.x > 700 && this.hspeed > 0) {
			this.hspeed = -this.hspeed * 0.8;
		}
		if(this.position.y > 440 && this.vspeed > 0) {
			if(this.vspeed < 1) {
				this.vspeed = this.hspeed = 0;
			} else {
				this.vspeed = -this.vspeed * 0.6;
				this.hspeed *= 0.5;
			}
		}
		var _this = this.position;
		var x = this.hspeed;
		var y = this.vspeed;
		_this.x += x;
		_this.y += y;
		this.vspeed += 0.2;
		this.rotation.angle = (this.hspeed + this.vspeed) * 20 + this.angleOffset;
	}
	,__class__: enemies_Gem
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	get: null
	,set: null
	,exists: null
	,__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var _this = this.shash;
		var x = __map_reserved[s] != null?_this.getReserved(s):_this.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null?"null":"" + x;
			return;
		}
		var _this1 = this.shash;
		var value = this.scount++;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,value);
		} else {
			_this1.h[s] = value;
		}
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null?"null":"" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null?"null":"" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type["typeof"](v);
		switch(_g[1]) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null?"null":"" + v1;
			break;
		case 2:
			var v2 = v;
			if(isNaN(v2)) {
				this.buf.b += "k";
			} else if(!isFinite(v2)) {
				this.buf.b += v2 < 0?"m":"p";
			} else {
				this.buf.b += "d";
				this.buf.b += v2 == null?"null":"" + v2;
			}
			break;
		case 3:
			this.buf.b += v?"t":"f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = Type.getClassName(v);
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(Type.getEnumName(v));
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Cannot serialize function");
			break;
		case 6:
			var c = _g[2];
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v.length;
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null?"null":"" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null?"null":"" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case List:
				this.buf.b += "l";
				var v3 = v;
				var _g_head = v3.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					this.serialize(val);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v4 = v;
				var tmp = v4.keys();
				while(tmp.hasNext()) {
					var k = tmp.next();
					this.buf.b += ":";
					this.buf.b += k == null?"null":"" + k;
					this.serialize(v4.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v5 = v;
				var tmp1 = v5.keys();
				while(tmp1.hasNext()) {
					var k1 = tmp1.next();
					var id = Reflect.field(k1,"__id__");
					Reflect.deleteField(k1,"__id__");
					this.serialize(k1);
					k1.__id__ = id;
					this.serialize(v5.h[k1.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v6 = v;
				var tmp2 = v6.keys();
				while(tmp2.hasNext()) {
					var k2 = tmp2.next();
					this.serializeString(k2);
					this.serialize(__map_reserved[k2] != null?v6.getReserved(k2):v6.h[k2]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v7 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
				this.buf.b += ":";
				var i1 = 0;
				var max = v7.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					var length = haxe_Serializer.BASE64.length;
					b64 = new Array(length);
					var _g11 = 0;
					var _g3 = haxe_Serializer.BASE64.length;
					while(_g11 < _g3) {
						var i2 = _g11++;
						b64[i2] = HxOverrides.cca(haxe_Serializer.BASE64,i2);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i1 < max) {
					var b1 = v7.b[i1++];
					var b2 = v7.b[i1++];
					var b3 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b1 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCharCode(b64[b3 & 63]);
				}
				if(i1 == max) {
					var b11 = v7.b[i1++];
					var b21 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b11 >> 2]);
					this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
					this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
				} else if(i1 == max + 1) {
					var b12 = v7.b[i1++];
					this.buf.b += String.fromCharCode(b64[b12 >> 2]);
					this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(Type.getClassName(c));
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex?"j":"w");
			this.serializeString(Type.getEnumName(_g[2]));
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v[1]);
			} else {
				this.serializeString(v[0]);
			}
			this.buf.b += ":";
			var l1 = v.length;
			this.buf.b += Std.string(l1 - 2);
			var _g12 = 2;
			var _g4 = l1;
			while(_g12 < _g4) this.serialize(v[_g12++]);
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		var x = HxOverrides.substr(this.buf,p1,this.pos - p1);
		return parseFloat(x);
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			o[k] = this.unserialize();
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) h.set(this.unserialize(),this.unserialize());
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s] != null) {
					h1.setReserved(s,value);
				} else {
					h1.h[s] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s1 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s1 = decodeURIComponent(s1.split("+").join(" "));
			this.scache.push(s1);
			return s1;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.length) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				s += fcc((c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127);
			} else {
				var u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	b: null
	,getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: {set_position:"set_position"}
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.b.push(c);
	}
	,writeBytes: function(buf,pos,len) {
		var _this = this.b;
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b2 = buf.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) _this.b.push(b2[_g1++]);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0?-f:f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	return (f < 0?-2147483648:0) | exp + 127 << 23 | Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av = v < 0?-v:v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		i64.low = sig | 0;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | (sig / 4294967296.0 | 0);
	}
	return i64;
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = ["haxe","io","_UInt8Array","UInt8Array_Impl_"];
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null?0:byteOffset;
	this.length = byteLength == null?buffer.byteLength - this.offset:byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	buf: null
	,offset: null
	,length: null
	,getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0?value + 128 & 255:value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var kala_DrawingData = function(antialiasing,transformation,color,colorBlendMode,colorAlphaBlendMode,opacity,extra) {
	this.antialiasing = antialiasing;
	this.transformation = transformation;
	this.color = color;
	this.colorBlendMode = colorBlendMode;
	this.colorAlphaBlendMode = colorAlphaBlendMode;
	this.opacity = opacity;
	this.extra = extra;
};
$hxClasses["kala.DrawingData"] = kala_DrawingData;
kala_DrawingData.__name__ = ["kala","DrawingData"];
kala_DrawingData.prototype = {
	antialiasing: null
	,transformation: null
	,color: null
	,colorBlendMode: null
	,colorAlphaBlendMode: null
	,opacity: null
	,extra: null
	,__class__: kala_DrawingData
};
var kala_system_HTML5 = function() {
};
$hxClasses["kala.system.HTML5"] = kala_system_HTML5;
kala_system_HTML5.__name__ = ["kala","system","HTML5"];
kala_system_HTML5.prototype = {
	fillPage: function() {
		var node = window.document.createElement("meta");
		node.setAttribute("name","viewport");
		node.setAttribute("content","width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no");
		window.document.head.appendChild(node);
		var $window = window;
		var canvas = window.document.getElementById("khanvas");
		var resizeCanvas = function() {
			canvas.style.width = $window.innerWidth;
			$window.setTimeout(function() {
				canvas.style.height = $window.innerHeight;
			},0);
		};
		$window.addEventListener("resize",resizeCanvas,false);
		$window.addEventListener("orientationchange",resizeCanvas,false);
		window.document.body.style.margin = "0";
		window.document.body.style.overflow = "hidden";
		canvas.style.position = "absolute";
		canvas.style.left = canvas.style.top = "0";
		canvas.style.width = canvas.style.height = "100%";
	}
	,get_mobile: function() {
		return kha_SystemImpl.mobile;
	}
	,__class__: kala_system_HTML5
	,__properties__: {get_mobile:"get_mobile"}
};
var kala_Kala = function() { };
$hxClasses["kala.Kala"] = kala_Kala;
kala_Kala.__name__ = ["kala","Kala"];
kala_Kala.__properties__ = {set_defaultFont:"set_defaultFont",get_drawRate:"get_drawRate",set_updateRate:"set_updateRate"}
kala_Kala.start = function(title,screenWidth,screenHeight,antiAliasingSamples,updateRate,loadAllAssets) {
	if(loadAllAssets == null) {
		loadAllAssets = true;
	}
	if(updateRate == null) {
		updateRate = 60;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(screenHeight == null) {
		screenHeight = 600;
	}
	if(screenWidth == null) {
		screenWidth = 800;
	}
	if(title == null) {
		title = "Hello!";
	}
	kala_Kala.width = screenWidth;
	kala_Kala.height = screenHeight;
	kha_System.init({ title : title, width : kala_Kala.width, height : kala_Kala.height, samplesPerPixel : antiAliasingSamples},function() {
		if(loadAllAssets) {
			kha_Assets.loadEverything(function() {
				kala_Kala.startWorld(updateRate);
			});
		} else {
			kala_Kala.startWorld(updateRate);
		}
	});
};
kala_Kala.applyDelta = function(value) {
	return kala_Kala.delta / kala_Kala.perfectDelta * value;
};
kala_Kala.openURL = function(url,target) {
	if(target == null) {
		target = "_blank";
	}
	window.open(url,target);
};
kala_Kala.startWorld = function(updateRate) {
	kala_input_Keyboard.init();
	kala_input_Mouse.init();
	kala_input_Touch.init();
	kha_System.notifyOnRender(kala_Kala.renderWorld);
	kala_Kala.set_updateRate(updateRate);
};
kala_Kala.renderWorld = function(framebuffer) {
	kala_Kala.width = framebuffer.get_width();
	kala_Kala.height = framebuffer.get_height();
	framebuffer.get_g2().begin(true,kala_Kala.bgColor);
	kala_Kala.world.callDraw(new kala_DrawingData(false,null,null,null,null,1,null),framebuffer);
	framebuffer.get_g2().end();
};
kala_Kala.updateWorld = function() {
	var time = kha_Scheduler.time();
	kala_Kala.delta = time - kala_Kala._prvUpdateTime;
	kala_Kala._prvUpdateTime = time;
	kala_Kala.fps = Math.round(1 / kala_Kala.delta);
	var elapsed = kala_Kala.deltaTiming?kala_Kala.delta * kala_Kala.timeScale:kala_Kala.timeScale;
	kala_input_Keyboard._handle.update(elapsed);
	kala_input_Mouse._handle.update(elapsed);
	if(kala_input_Mouse._wheel != 0) {
		if(kala_input_Mouse._wheelRegistered) {
			kala_input_Mouse._wheel = 0;
		} else {
			kala_input_Mouse._wheelRegistered = true;
		}
	}
	kala_input_Touch.touches.update(elapsed);
	var _this = kala_Kala.world;
	var elapsed1 = elapsed;
	_this.originalDelta = elapsed1;
	elapsed1 *= _this.timeScale;
	if(!_this.firstFrameExecuted) {
		var tmp = HxOverrides.iter(_this.onFirstFrame._callbacks);
		while(tmp.hasNext()) tmp.next().cbFunction(_this);
		_this.firstFrameExecuted = true;
	}
	var updatePrevented = false;
	var tmp1 = HxOverrides.iter(_this.onPreUpdate._callbacks);
	while(tmp1.hasNext()) if(tmp1.next().cbFunction(_this,elapsed1)) {
		updatePrevented = true;
	}
	if(!updatePrevented) {
		_this.update(elapsed1);
	}
	var tmp2 = HxOverrides.iter(_this.onPostUpdate._callbacks);
	while(tmp2.hasNext()) tmp2.next().cbFunction(_this,elapsed1);
	kala_audio_Audio.update();
};
kala_Kala.set_updateRate = function(value) {
	kala_Kala.perfectDelta = _$UInt_UInt_$Impl_$.toFloat(1) / _$UInt_UInt_$Impl_$.toFloat(value);
	if(kala_Kala._updateTaskID != null) {
		kha_Scheduler.removeTimeTask(kala_Kala._updateTaskID);
	}
	kala_Kala._updateTaskID = kha_Scheduler.addTimeTask(kala_Kala.updateWorld,0,_$UInt_UInt_$Impl_$.toFloat(1) / _$UInt_UInt_$Impl_$.toFloat(value));
	return kala_Kala.updateRate = value;
};
kala_Kala.get_drawRate = function() {
	return kha_System.get_refreshRate();
};
kala_Kala.set_defaultFont = function(value) {
	if(value == null) {
		return null;
	}
	return kala_Kala.defaultFont = value;
};
var kala_asset_AssetType = $hxClasses["kala.asset.AssetType"] = { __ename__ : ["kala","asset","AssetType"], __constructs__ : ["IMAGE","SOUND","FONT","VIDEO","BLOB"] };
kala_asset_AssetType.IMAGE = ["IMAGE",0];
kala_asset_AssetType.IMAGE.toString = $estr;
kala_asset_AssetType.IMAGE.__enum__ = kala_asset_AssetType;
kala_asset_AssetType.SOUND = ["SOUND",1];
kala_asset_AssetType.SOUND.toString = $estr;
kala_asset_AssetType.SOUND.__enum__ = kala_asset_AssetType;
kala_asset_AssetType.FONT = ["FONT",2];
kala_asset_AssetType.FONT.toString = $estr;
kala_asset_AssetType.FONT.__enum__ = kala_asset_AssetType;
kala_asset_AssetType.VIDEO = ["VIDEO",3];
kala_asset_AssetType.VIDEO.toString = $estr;
kala_asset_AssetType.VIDEO.__enum__ = kala_asset_AssetType;
kala_asset_AssetType.BLOB = ["BLOB",4];
kala_asset_AssetType.BLOB.toString = $estr;
kala_asset_AssetType.BLOB.__enum__ = kala_asset_AssetType;
var kala_asset_SheetList = function() {
	this.sprite_sheet_2 = new kala_asset_sheet_TexturePacker([{ trimmed : false, frame : { y : 0, x : 0, w : 37, h : 31}, spriteSourceSize : { y : 0, x : 0, w : 37, h : 31}, filename : "sound_button/on.png", sourceSize : { w : 37, h : 31}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 37, w : 37, h : 31}, spriteSourceSize : { y : 0, x : 0, w : 37, h : 31}, filename : "sound_button/off.png", sourceSize : { w : 37, h : 31}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 74, w : 50, h : 36}, spriteSourceSize : { y : 0, x : 0, w : 50, h : 36}, filename : "crystal.png", sourceSize : { w : 50, h : 36}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 124, w : 36, h : 41}, spriteSourceSize : { y : 0, x : 0, w : 36, h : 41}, filename : "back_button.png", sourceSize : { w : 36, h : 41}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 160, w : 49, h : 45}, spriteSourceSize : { y : 0, x : 0, w : 49, h : 45}, filename : "heart.png", sourceSize : { w : 49, h : 45}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 209, w : 33, h : 47}, spriteSourceSize : { y : 0, x : 0, w : 33, h : 47}, filename : "player/bullet.png", sourceSize : { w : 33, h : 47}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 242, w : 42, h : 57}, spriteSourceSize : { y : 0, x : 0, w : 42, h : 57}, filename : "enemies/enemy_3/mini/1.png", sourceSize : { w : 42, h : 57}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 284, w : 42, h : 57}, spriteSourceSize : { y : 0, x : 0, w : 42, h : 57}, filename : "enemies/enemy_3/mini/2.png", sourceSize : { w : 42, h : 57}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 326, w : 42, h : 57}, spriteSourceSize : { y : 0, x : 0, w : 42, h : 57}, filename : "enemies/enemy_3/mini/0.png", sourceSize : { w : 42, h : 57}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 368, w : 42, h : 57}, spriteSourceSize : { y : 0, x : 0, w : 42, h : 57}, filename : "enemies/enemy_3/mini/3.png", sourceSize : { w : 42, h : 57}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 410, w : 85, h : 69}, spriteSourceSize : { y : 0, x : 0, w : 85, h : 69}, filename : "player/mini/stand/2.png", sourceSize : { w : 85, h : 69}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 495, w : 85, h : 69}, spriteSourceSize : { y : 0, x : 0, w : 85, h : 69}, filename : "player/mini/stand/3.png", sourceSize : { w : 85, h : 69}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 580, w : 85, h : 69}, spriteSourceSize : { y : 0, x : 0, w : 85, h : 69}, filename : "player/mini/stand/1.png", sourceSize : { w : 85, h : 69}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 665, w : 85, h : 69}, spriteSourceSize : { y : 0, x : 0, w : 85, h : 69}, filename : "player/mini/run/0.png", sourceSize : { w : 85, h : 69}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 750, w : 85, h : 69}, spriteSourceSize : { y : 0, x : 0, w : 85, h : 69}, filename : "player/mini/run/1.png", sourceSize : { w : 85, h : 69}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 835, w : 85, h : 69}, spriteSourceSize : { y : 0, x : 0, w : 85, h : 69}, filename : "player/mini/stand/0.png", sourceSize : { w : 85, h : 69}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 920, w : 85, h : 69}, spriteSourceSize : { y : 0, x : 0, w : 85, h : 69}, filename : "player/mini/run/2.png", sourceSize : { w : 85, h : 69}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 1005, w : 73, h : 73}, spriteSourceSize : { y : 0, x : 0, w : 73, h : 73}, filename : "crystal_icon.png", sourceSize : { w : 73, h : 73}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 1078, w : 112, h : 109}, spriteSourceSize : { y : 0, x : 0, w : 112, h : 109}, filename : "enemies/enemy_1.png", sourceSize : { w : 112, h : 109}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 109, x : 0, w : 120, h : 116}, spriteSourceSize : { y : 0, x : 0, w : 120, h : 116}, filename : "player/ball/0.png", sourceSize : { w : 120, h : 116}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 109, x : 120, w : 120, h : 116}, spriteSourceSize : { y : 0, x : 0, w : 120, h : 116}, filename : "player/ball/2.png", sourceSize : { w : 120, h : 116}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 109, x : 240, w : 120, h : 116}, spriteSourceSize : { y : 0, x : 0, w : 120, h : 116}, filename : "player/ball/1.png", sourceSize : { w : 120, h : 116}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 109, x : 360, w : 112, h : 141}, spriteSourceSize : { y : 0, x : 0, w : 112, h : 141}, filename : "fingerprint.png", sourceSize : { w : 112, h : 141}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 109, x : 472, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/stand/3.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 109, x : 707, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/charge/2.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 109, x : 942, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/charge/3.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 251, x : 0, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/stand/1.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 251, x : 235, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/run/0.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 251, x : 470, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/stand/0.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 251, x : 705, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/run/1.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 251, x : 940, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/run/2.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 393, x : 0, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/stand/2.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 393, x : 235, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/charge/0.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 393, x : 470, w : 235, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 235, h : 142}, filename : "player/frames/charge/1.png", sourceSize : { w : 235, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 393, x : 705, w : 196, h : 145}, spriteSourceSize : { y : 0, x : 0, w : 196, h : 145}, filename : "enemies/enemy_2/0.png", sourceSize : { w : 196, h : 145}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 393, x : 901, w : 196, h : 145}, spriteSourceSize : { y : 0, x : 0, w : 196, h : 145}, filename : "enemies/enemy_2/1.png", sourceSize : { w : 196, h : 145}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 538, x : 0, w : 196, h : 145}, spriteSourceSize : { y : 0, x : 0, w : 196, h : 145}, filename : "enemies/enemy_2/5.png", sourceSize : { w : 196, h : 145}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 538, x : 196, w : 196, h : 145}, spriteSourceSize : { y : 0, x : 0, w : 196, h : 145}, filename : "enemies/enemy_2/3.png", sourceSize : { w : 196, h : 145}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 538, x : 392, w : 196, h : 145}, spriteSourceSize : { y : 0, x : 0, w : 196, h : 145}, filename : "enemies/enemy_2/2.png", sourceSize : { w : 196, h : 145}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 538, x : 588, w : 196, h : 145}, spriteSourceSize : { y : 0, x : 0, w : 196, h : 145}, filename : "enemies/enemy_2/4.png", sourceSize : { w : 196, h : 145}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 538, x : 784, w : 133, h : 178}, spriteSourceSize : { y : 0, x : 0, w : 133, h : 178}, filename : "enemies/enemy_3/big/2.png", sourceSize : { w : 133, h : 178}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 538, x : 917, w : 133, h : 178}, spriteSourceSize : { y : 0, x : 0, w : 133, h : 178}, filename : "enemies/enemy_3/big/0.png", sourceSize : { w : 133, h : 178}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 538, x : 1050, w : 133, h : 178}, spriteSourceSize : { y : 0, x : 0, w : 133, h : 178}, filename : "enemies/enemy_3/big/1.png", sourceSize : { w : 133, h : 178}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 716, x : 0, w : 700, h : 237}, spriteSourceSize : { y : 0, x : 0, w : 700, h : 237}, filename : "enemies/boss/body.png", sourceSize : { w : 700, h : 237}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 716, x : 700, w : 246, h : 240}, spriteSourceSize : { y : 0, x : 0, w : 246, h : 240}, filename : "enemies/boss/throne/small.png", sourceSize : { w : 246, h : 240}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 716, x : 946, w : 280, h : 274}, spriteSourceSize : { y : 0, x : 0, w : 280, h : 274}, filename : "enemies/enemy_0.png", sourceSize : { w : 280, h : 274}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 990, x : 0, w : 343, h : 342}, spriteSourceSize : { y : 0, x : 0, w : 343, h : 342}, filename : "enemies/boss/throne/big.png", sourceSize : { w : 343, h : 342}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 990, x : 343, w : 458, h : 400}, spriteSourceSize : { y : 0, x : 0, w : 458, h : 400}, filename : "player/web/spreading.png", sourceSize : { w : 458, h : 400}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 990, x : 801, w : 300, h : 400}, spriteSourceSize : { y : 0, x : 0, w : 300, h : 400}, filename : "player/web/shooting.png", sourceSize : { w : 300, h : 400}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 1390, x : 0, w : 262, h : 460}, spriteSourceSize : { y : 0, x : 0, w : 262, h : 460}, filename : "player/lightning/1.png", sourceSize : { w : 262, h : 460}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 1390, x : 262, w : 262, h : 460}, spriteSourceSize : { y : 0, x : 0, w : 262, h : 460}, filename : "player/lightning/0.png", sourceSize : { w : 262, h : 460}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 1390, x : 524, w : 262, h : 460}, spriteSourceSize : { y : 0, x : 0, w : 262, h : 460}, filename : "player/lightning/2.png", sourceSize : { w : 262, h : 460}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 1390, x : 786, w : 120, h : 505}, spriteSourceSize : { y : 0, x : 0, w : 120, h : 505}, filename : "enemies/boss/lightning/0.png", sourceSize : { w : 120, h : 505}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 1390, x : 906, w : 120, h : 505}, spriteSourceSize : { y : 0, x : 0, w : 120, h : 505}, filename : "enemies/boss/lightning/1.png", sourceSize : { w : 120, h : 505}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 1390, x : 1026, w : 120, h : 505}, spriteSourceSize : { y : 0, x : 0, w : 120, h : 505}, filename : "enemies/boss/lightning/2.png", sourceSize : { w : 120, h : 505}, rotated : false, pivot : { y : 0.5, x : 0.5}}]);
	this.sprite_sheet_1 = new kala_asset_sheet_TexturePacker([{ trimmed : false, frame : { y : 0, x : 0, w : 37, h : 31}, spriteSourceSize : { y : 0, x : 0, w : 37, h : 31}, filename : "audio_button/off.png", sourceSize : { w : 37, h : 31}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 37, w : 37, h : 31}, spriteSourceSize : { y : 0, x : 0, w : 37, h : 31}, filename : "audio_button/on.png", sourceSize : { w : 37, h : 31}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 74, w : 71, h : 44}, spriteSourceSize : { y : 0, x : 0, w : 71, h : 44}, filename : "upgrade_menu/back_button.png", sourceSize : { w : 71, h : 44}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 145, w : 80, h : 44}, spriteSourceSize : { y : 0, x : 0, w : 80, h : 44}, filename : "upgrade_menu/start_button.png", sourceSize : { w : 80, h : 44}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 225, w : 16, h : 53}, spriteSourceSize : { y : 0, x : 0, w : 16, h : 53}, filename : "settings_menu/volume_bar.png", sourceSize : { w : 16, h : 53}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 241, w : 156, h : 56}, spriteSourceSize : { y : 0, x : 0, w : 156, h : 56}, filename : "main_menu/more_game_button.png", sourceSize : { w : 156, h : 56}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 397, w : 172, h : 60}, spriteSourceSize : { y : 0, x : 0, w : 172, h : 60}, filename : "main_menu/android_badge.png", sourceSize : { w : 172, h : 60}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 569, w : 73, h : 82}, spriteSourceSize : { y : 0, x : 0, w : 73, h : 82}, filename : "settings_menu/back_button.png", sourceSize : { w : 73, h : 82}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 642, w : 97, h : 86}, spriteSourceSize : { y : 0, x : 0, w : 97, h : 86}, filename : "settings_menu/sound_icon.png", sourceSize : { w : 97, h : 86}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 739, w : 91, h : 88}, spriteSourceSize : { y : 0, x : 0, w : 91, h : 88}, filename : "settings_menu/reset_button.png", sourceSize : { w : 91, h : 88}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 830, w : 57, h : 89}, spriteSourceSize : { y : 0, x : 0, w : 57, h : 89}, filename : "main_menu/help_button.png", sourceSize : { w : 57, h : 89}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 887, w : 76, h : 94}, spriteSourceSize : { y : 0, x : 0, w : 76, h : 94}, filename : "settings_menu/music_icon.png", sourceSize : { w : 76, h : 94}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 963, w : 97, h : 96}, spriteSourceSize : { y : 0, x : 0, w : 97, h : 96}, filename : "settings_menu/vibration_button.png", sourceSize : { w : 97, h : 96}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 1060, w : 98, h : 98}, spriteSourceSize : { y : 0, x : 0, w : 98, h : 98}, filename : "upgrade_menu/level_up_button.png", sourceSize : { w : 98, h : 98}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 1158, w : 77, h : 102}, spriteSourceSize : { y : 0, x : 0, w : 77, h : 102}, filename : "main_menu/credit_button.png", sourceSize : { w : 77, h : 102}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 1235, w : 77, h : 102}, spriteSourceSize : { y : 0, x : 0, w : 77, h : 102}, filename : "main_menu/settings_button.png", sourceSize : { w : 77, h : 102}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 1312, w : 77, h : 102}, spriteSourceSize : { y : 0, x : 0, w : 77, h : 102}, filename : "main_menu/play_button.png", sourceSize : { w : 77, h : 102}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 0, x : 1389, w : 108, h : 110}, spriteSourceSize : { y : 0, x : 0, w : 108, h : 110}, filename : "main_menu/picker.png", sourceSize : { w : 108, h : 110}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 0, w : 612, h : 118}, spriteSourceSize : { y : 0, x : 0, w : 612, h : 118}, filename : "upgrade_menu/description_bg.png", sourceSize : { w : 612, h : 118}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 612, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/4.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 753, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/5.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 894, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/6.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 1035, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/3.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 1176, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/1.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 1317, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/9.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 1458, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/2.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 110, x : 1599, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/8.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 252, x : 0, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/7.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 252, x : 141, w : 141, h : 142}, spriteSourceSize : { y : 0, x : 0, w : 141, h : 142}, filename : "upgrade_menu/icons/0.png", sourceSize : { w : 141, h : 142}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 252, x : 282, w : 650, h : 162}, spriteSourceSize : { y : 0, x : 0, w : 650, h : 162}, filename : "springroll_logo.png", sourceSize : { w : 650, h : 162}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 252, x : 932, w : 700, h : 271}, spriteSourceSize : { y : 0, x : 0, w : 700, h : 271}, filename : "main_menu/title.png", sourceSize : { w : 700, h : 271}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 523, x : 0, w : 700, h : 304}, spriteSourceSize : { y : 0, x : 0, w : 700, h : 304}, filename : "background/foreground.png", sourceSize : { w : 700, h : 304}, rotated : false, pivot : { y : 0.5, x : 0.5}},{ trimmed : false, frame : { y : 523, x : 700, w : 700, h : 495}, spriteSourceSize : { y : 0, x : 0, w : 700, h : 495}, filename : "background/normal.jpg", sourceSize : { w : 700, h : 495}, rotated : false, pivot : { y : 0.5, x : 0.5}}]);
};
$hxClasses["kala.asset.SheetList"] = kala_asset_SheetList;
kala_asset_SheetList.__name__ = ["kala","asset","SheetList"];
kala_asset_SheetList.prototype = {
	sprite_sheet_1: null
	,sprite_sheet_2: null
	,__class__: kala_asset_SheetList
};
var kala_asset_Loader = function() {
	this._state = 0;
	this.loadedSize = 0;
	this.totalSize = 0;
	this.percent = 0;
	this._loadedAssets = [];
	this._queuingAssets = [];
	kala_EventHandle.call(this);
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onProcess = handle;
};
$hxClasses["kala.asset.Loader"] = kala_asset_Loader;
kala_asset_Loader.__name__ = ["kala","asset","Loader"];
kala_asset_Loader.__super__ = kala_EventHandle;
kala_asset_Loader.prototype = $extend(kala_EventHandle.prototype,{
	_queuingAssets: null
	,_loadedAssets: null
	,paused: null
	,percent: null
	,totalSize: null
	,loadedSize: null
	,onProcess: null
	,_state: null
	,queue: function(type,nameOrPath,size,asPath,readable) {
		if(readable == null) {
			readable = true;
		}
		if(asPath == null) {
			asPath = false;
		}
		if(size == null) {
			size = 1;
		}
		if(this._state != 0) {
			throw new js__$Boot_HaxeError("Can't queue new asset while loading or paused.");
		}
		this.totalSize += size < 1?1:size;
		this._queuingAssets.push(asPath || nameOrPath.charAt(0) == ">"?new kala_asset_AssetLoadingInfo(type,null,nameOrPath,size,readable):new kala_asset_AssetLoadingInfo(type,nameOrPath,null,size));
		return this;
	}
	,queueImage: function(nameOrPath,size,asPath,readable) {
		if(readable == null) {
			readable = true;
		}
		if(asPath == null) {
			asPath = false;
		}
		if(size == null) {
			size = 1;
		}
		return this.queue(kala_asset_AssetType.IMAGE,nameOrPath,size,asPath,readable);
	}
	,queueSound: function(nameOrPath,size,asPath) {
		if(asPath == null) {
			asPath = false;
		}
		if(size == null) {
			size = 1;
		}
		return this.queue(kala_asset_AssetType.SOUND,nameOrPath,size,asPath);
	}
	,queueFont: function(nameOrPath,size,asPath) {
		if(asPath == null) {
			asPath = false;
		}
		if(size == null) {
			size = 1;
		}
		return this.queue(kala_asset_AssetType.FONT,nameOrPath,size,asPath);
	}
	,queueVideo: function(nameOrPath,size,asPath) {
		if(asPath == null) {
			asPath = false;
		}
		if(size == null) {
			size = 1;
		}
		return this.queue(kala_asset_AssetType.VIDEO,nameOrPath,size,asPath);
	}
	,queueBlob: function(nameOrPath,size,asPath) {
		if(asPath == null) {
			asPath = false;
		}
		if(size == null) {
			size = 1;
		}
		return this.queue(kala_asset_AssetType.BLOB,nameOrPath,size,asPath);
	}
	,queueAll: function(sizes) {
		var i = 0;
		var type;
		var _g = 0;
		var _g1 = kala_asset_Assets.files;
		while(_g < _g1.length) {
			var file = _g1[_g];
			++_g;
			if(file.type != "shader") {
				type = Type.createEnum(kala_asset_AssetType,(js_Boot.__cast(file.type , String)).toUpperCase(),null);
				if(this.findQueuingAssetByName(type,file.name) == -1) {
					this.queue(type,file.name,sizes == null?1:sizes[i]);
				}
			}
			++i;
		}
		return this;
	}
	,bunble: function(assets) {
		var _g = 0;
		while(_g < assets.length) {
			var asset = assets[_g];
			++_g;
			this._queuingAssets.push(asset);
			this.totalSize += asset.size;
		}
		return this;
	}
	,load: function(onProcessCallback) {
		if(this._queuingAssets.length > 0 && (this._state == 0 || this._state == 4)) {
			if(onProcessCallback != null) {
				this.onProcess._callbacks.push(new kala_Callback(onProcessCallback));
			}
			this.process(null);
			this._state = 1;
			return this._queuingAssets[0];
		}
		return null;
	}
	,reload: function() {
		if((this._queuingAssets.length > 0 || this._loadedAssets.length > 0) && (this._state == 0 || this._state == 4)) {
			this.loadedSize = this.percent = 0;
			while(this._loadedAssets.length > 0) this._queuingAssets.push(this._loadedAssets.splice(0,1)[0]);
			this.process(null);
			this._state = 1;
			return this._queuingAssets[0];
		}
		return null;
	}
	,cancel: function() {
		this._state = 2;
		return this;
	}
	,pause: function() {
		this._state = 3;
	}
	,process: function(data) {
		var loadedAsset = null;
		if(data != null) {
			loadedAsset = this._queuingAssets.splice(0,1)[0];
			this._loadedAssets.push(loadedAsset);
			this.loadedSize += loadedAsset.size;
			this.percent = this.loadedSize / this.totalSize;
		}
		var nextAsset = this._queuingAssets.length > 0?this._queuingAssets[0]:null;
		var i = 0;
		var callback;
		while(i < this.onProcess.get_count()) {
			callback = this.onProcess._callbacks[i].cbFunction;
			if(callback(data,loadedAsset,nextAsset)) {
				this.onProcess._callbacks.splice(i,1);
			} else {
				++i;
			}
		}
		if(nextAsset == null) {
			this._state = 0;
		} else if(this._state == 2) {
			this._queuingAssets.splice(0,this._queuingAssets.length);
			this._loadedAssets.splice(0,this._loadedAssets.length);
			this._state = 0;
			this.loadedSize = this.totalSize = this.percent = 0;
		} else if(this._state == 3) {
			nextAsset = null;
			this._state = 4;
		} else {
			var callback1 = $bind(this,this.process);
			if(nextAsset.name == null) {
				if(nextAsset.path != null) {
					switch(nextAsset.type[1]) {
					case 0:
						kha_Assets.loadImageFromPath(nextAsset.path,nextAsset.readable,callback1);
						break;
					case 1:
						kha_Assets.loadSoundFromPath(nextAsset.path,callback1);
						break;
					case 2:
						kha_Assets.loadFontFromPath(nextAsset.path,callback1);
						break;
					case 3:
						kha_Assets.loadVideoFromPath(nextAsset.path,callback1);
						break;
					case 4:
						kha_Assets.loadBlobFromPath(nextAsset.path,callback1);
						break;
					}
				}
			} else {
				switch(nextAsset.type[1]) {
				case 0:
					kha_Assets.loadImage(nextAsset.name,callback1);
					break;
				case 1:
					kha_Assets.loadSound(nextAsset.name,callback1);
					break;
				case 2:
					kha_Assets.loadFont(nextAsset.name,callback1);
					break;
				case 3:
					kha_Assets.loadVideo(nextAsset.name,callback1);
					break;
				case 4:
					kha_Assets.loadBlob(nextAsset.name,callback1);
					break;
				}
			}
		}
	}
	,findQueuingAssetByName: function(type,name) {
		var _g1 = 0;
		var _g = this._queuingAssets.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._queuingAssets[i].type[1] == type[1] && this._queuingAssets[i].name == name) {
				return i;
			}
		}
		return -1;
	}
	,get_loading: function() {
		if(this._state > 0) {
			return this._state != 4;
		} else {
			return false;
		}
	}
	,get_paused: function() {
		return this._state == 4;
	}
	,get_queuingAssets: function() {
		return this._queuingAssets.slice();
	}
	,get_loadedAssets: function() {
		return this._loadedAssets.slice();
	}
	,__class__: kala_asset_Loader
	,__properties__: {get_paused:"get_paused",get_loading:"get_loading",get_loadedAssets:"get_loadedAssets",get_queuingAssets:"get_queuingAssets"}
});
var kala_asset_Assets = function() { };
$hxClasses["kala.asset.Assets"] = kala_asset_Assets;
kala_asset_Assets.__name__ = ["kala","asset","Assets"];
kala_asset_Assets.__properties__ = {get_videoFormats:"get_videoFormats",get_fontFormats:"get_fontFormats",get_soundFormats:"get_soundFormats",get_imageFormats:"get_imageFormats",get_videos:"get_videos",get_fonts:"get_fonts",get_blobs:"get_blobs",get_sounds:"get_sounds",get_images:"get_images"}
kala_asset_Assets.loadEverything = function(callback) {
	kha_Assets.loadEverything(callback);
};
kala_asset_Assets.loadImage = function(name,done) {
	kha_Assets.loadImage(name,done);
};
kala_asset_Assets.loadImageFromPath = function(path,readable,done) {
	kha_Assets.loadImageFromPath(path,readable,done);
};
kala_asset_Assets.loadBlob = function(name,done) {
	kha_Assets.loadBlob(name,done);
};
kala_asset_Assets.loadBlobFromPath = function(path,done) {
	kha_Assets.loadBlobFromPath(path,done);
};
kala_asset_Assets.loadSound = function(name,done) {
	kha_Assets.loadSound(name,done);
};
kala_asset_Assets.loadSoundFromPath = function(path,done) {
	kha_Assets.loadSoundFromPath(path,done);
};
kala_asset_Assets.loadFont = function(name,done) {
	kha_Assets.loadFont(name,done);
};
kala_asset_Assets.loadFontFromPath = function(path,done) {
	kha_Assets.loadFontFromPath(path,done);
};
kala_asset_Assets.loadVideo = function(name,done) {
	kha_Assets.loadVideo(name,done);
};
kala_asset_Assets.loadVideoFromPath = function(path,done) {
	kha_Assets.loadVideoFromPath(path,done);
};
kala_asset_Assets.get_images = function() {
	return kha_Assets.images;
};
kala_asset_Assets.get_sounds = function() {
	return kha_Assets.sounds;
};
kala_asset_Assets.get_blobs = function() {
	return kha_Assets.blobs;
};
kala_asset_Assets.get_fonts = function() {
	return kha_Assets.fonts;
};
kala_asset_Assets.get_videos = function() {
	return kha_Assets.videos;
};
kala_asset_Assets.get_imageFormats = function() {
	return kha_Assets.get_imageFormats();
};
kala_asset_Assets.get_soundFormats = function() {
	return kha_Assets.get_soundFormats();
};
kala_asset_Assets.get_fontFormats = function() {
	return kha_Assets.get_fontFormats();
};
kala_asset_Assets.get_videoFormats = function() {
	return kha_Assets.get_videoFormats();
};
var kala_asset_AssetLoadingInfo = function(type,name,path,size,readable) {
	if(readable == null) {
		readable = true;
	}
	if(size == null) {
		size = 1;
	}
	this.type = type;
	this.name = name;
	this.path = path;
	this.size = size;
	this.readable = readable;
};
$hxClasses["kala.asset.AssetLoadingInfo"] = kala_asset_AssetLoadingInfo;
kala_asset_AssetLoadingInfo.__name__ = ["kala","asset","AssetLoadingInfo"];
kala_asset_AssetLoadingInfo.prototype = {
	name: null
	,path: null
	,size: null
	,type: null
	,readable: null
	,__class__: kala_asset_AssetLoadingInfo
};
var kala_asset_sheet_SheetData = function(framesData) {
	this._frames = new haxe_ds_StringMap();
};
$hxClasses["kala.asset.sheet.SheetData"] = kala_asset_sheet_SheetData;
kala_asset_sheet_SheetData.__name__ = ["kala","asset","sheet","SheetData"];
kala_asset_sheet_SheetData.prototype = {
	_frames: null
	,get: function(key,image) {
		return null;
	}
	,__class__: kala_asset_sheet_SheetData
};
var kala_asset_sheet_TexturePacker = function(framesData) {
	kala_asset_sheet_SheetData.call(this,framesData);
	var frame;
	var _g = 0;
	while(_g < framesData.length) {
		var data = framesData[_g];
		++_g;
		frame = new kala_objects_sprite_SpriteData(data.filename,null,[new kala_math_RectI(data.frame.x,data.frame.y,data.frame.w,data.frame.h)],0);
		var _this = this._frames;
		var key = data.filename;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,frame);
		} else {
			_this.h[key] = frame;
		}
	}
};
$hxClasses["kala.asset.sheet.TexturePacker"] = kala_asset_sheet_TexturePacker;
kala_asset_sheet_TexturePacker.__name__ = ["kala","asset","sheet","TexturePacker"];
kala_asset_sheet_TexturePacker.__super__ = kala_asset_sheet_SheetData;
kala_asset_sheet_TexturePacker.prototype = $extend(kala_asset_sheet_SheetData.prototype,{
	get: function(key,image) {
		var spriteData;
		if(key.charAt(key.length - 1) == "/" || key.charAt(key.length - 1) == "\\") {
			spriteData = new kala_objects_sprite_SpriteData(key,image,[],-1);
			var _g = [];
			var tmp = this._frames.keys();
			while(tmp.hasNext()) _g.push(tmp.next());
			_g.sort(function(a,b) {
				a = a.toLowerCase();
				b = b.toLowerCase();
				if(a < b) {
					return -1;
				}
				if(a > b) {
					return 1;
				}
				return 0;
			});
			var _g1 = 0;
			while(_g1 < _g.length) {
				var frameKey = _g[_g1];
				++_g1;
				if(frameKey.indexOf(key) == 0) {
					var _this = this._frames;
					spriteData.frames.push((__map_reserved[frameKey] != null?_this.getReserved(frameKey):_this.h[frameKey]).frames[0]);
				}
			}
			return spriteData;
		}
		var _this1 = this._frames;
		if(__map_reserved[key] != null) {
			spriteData = _this1.getReserved(key);
		} else {
			spriteData = _this1.h[key];
		}
		if(spriteData == null) {
			throw new js__$Boot_HaxeError("key \"" + key + "\" not found. If the sprite data is an animation, remember to add \"/\" at the end of key.");
		}
		spriteData = new kala_objects_sprite_SpriteData(spriteData.key,spriteData.image,spriteData.frames,spriteData.animDelay);
		spriteData.image = image;
		return spriteData;
	}
	,__class__: kala_asset_sheet_TexturePacker
});
var kala_audio_Audio = function() { };
$hxClasses["kala.audio.Audio"] = kala_audio_Audio;
kala_audio_Audio.__name__ = ["kala","audio","Audio"];
kala_audio_Audio.play = function(sound,volume,loop) {
	if(loop == null) {
		loop = false;
	}
	if(volume == null) {
		volume = 1;
	}
	var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(sound,loop),null,false);
	channel._volume = volume;
	channel.updateVolume();
	return channel;
};
kala_audio_Audio.stream = function(sound,volume,loop) {
	if(loop == null) {
		loop = false;
	}
	if(volume == null) {
		volume = 1;
	}
	var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.stream(sound,loop),null,false);
	channel._volume = volume;
	channel.updateVolume();
	return channel;
};
kala_audio_Audio.update = function() {
	var _g = 0;
	var _g1 = kala_audio_Audio.groups;
	while(_g < _g1.length) {
		var group = _g1[_g];
		++_g;
		var channels = group.channels;
		var i = channels.length;
		while(i-- > 0) if(channels[i].channel.get_finished() && !channels[i].kept) {
			channels.splice(i,1);
		}
	}
};
var kala_audio_AudioChannel = function(channel,group,kept) {
	this.channel = channel;
	this.group = group;
	this.kept = kept;
	this.muted = false;
	this.updateVolume();
};
$hxClasses["kala.audio.AudioChannel"] = kala_audio_AudioChannel;
kala_audio_AudioChannel.__name__ = ["kala","audio","AudioChannel"];
kala_audio_AudioChannel.prototype = {
	channel: null
	,group: null
	,kept: null
	,_volume: null
	,muted: null
	,updateVolume: function() {
		if(this.muted) {
			this.channel.set_volume(0);
			return;
		}
		if(this.group != null) {
			if(this.group.muted) {
				this.channel.set_volume(0);
			} else {
				this.channel.set_volume(this._volume * this.group.get_volume());
			}
			return;
		}
		this.channel.set_volume(this._volume);
	}
	,get_finished: function() {
		return this.channel.get_finished();
	}
	,get_length: function() {
		return this.channel.get_length();
	}
	,get_position: function() {
		return this.channel.get_position();
	}
	,get_volume: function() {
		return this._volume;
	}
	,set_volume: function(value) {
		this._volume = value;
		this.updateVolume();
		return value;
	}
	,set_muted: function(value) {
		this.muted = value;
		this.updateVolume();
		return value;
	}
	,__class__: kala_audio_AudioChannel
	,__properties__: {set_muted:"set_muted",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length",get_finished:"get_finished"}
};
var kala_behaviors_collision_basic_shapes_CollisionRectangle = function() {
	kala_behaviors_collision_basic_shapes_CollisionShape.call(this);
	this.type = 1;
};
$hxClasses["kala.behaviors.collision.basic.shapes.CollisionRectangle"] = kala_behaviors_collision_basic_shapes_CollisionRectangle;
kala_behaviors_collision_basic_shapes_CollisionRectangle.__name__ = ["kala","behaviors","collision","basic","shapes","CollisionRectangle"];
kala_behaviors_collision_basic_shapes_CollisionRectangle.get = function() {
	var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
	rect.reset();
	return rect;
};
kala_behaviors_collision_basic_shapes_CollisionRectangle.__super__ = kala_behaviors_collision_basic_shapes_CollisionShape;
kala_behaviors_collision_basic_shapes_CollisionRectangle.prototype = $extend(kala_behaviors_collision_basic_shapes_CollisionShape.prototype,{
	width: null
	,height: null
	,testPoint: function(pointX,pointY) {
		var rectX = this.absX;
		var rectY = this.absY;
		var rectWidth = this.width;
		var rectHeight = this.height;
		if(pointX >= rectX && pointX < rectX + rectWidth && pointY >= rectY) {
			return pointY < rectY + rectHeight;
		} else {
			return false;
		}
	}
	,testCircle: function(circle) {
		var circleX = circle.absX;
		var circleY = circle.absY;
		var circleRadius = circle.radius;
		var rectX = this.absX;
		var rectY = this.absY;
		var rectWidth = this.width;
		var rectHeight = this.height;
		var dx = circleX - Math.max(rectX,Math.min(rectX + rectWidth,circleX));
		var dy = circleY - Math.max(rectY,Math.min(rectY + rectHeight,circleY));
		return dx * dx + dy * dy < circleRadius * circleRadius;
	}
	,testRect: function(rect) {
		var x1 = this.absX;
		var y1 = this.absY;
		var w1 = this.width;
		var h1 = this.height;
		var x2 = rect.absX;
		var y2 = rect.absY;
		var w2 = rect.width;
		var h2 = rect.height;
		if(x1 < x2 + w2 && x1 + w1 > x2 && y1 < y2 + h2) {
			return y1 + h1 > y2;
		} else {
			return false;
		}
	}
	,setSize: function(width,height) {
		this.width = width;
		this.height = height;
	}
	,drawDebug: function(fill,lineStrenght,canvas) {
		if(lineStrenght == null) {
			lineStrenght = 1;
		}
		if(fill == null) {
			fill = false;
		}
		kala_behaviors_collision_basic_shapes_CollisionShape.prototype.drawDebug.call(this,fill,lineStrenght,canvas);
		if(fill) {
			canvas.get_g2().fillRect(0,0,this.width,this.height);
		} else {
			canvas.get_g2().drawRect(0,0,this.width,this.height,lineStrenght);
		}
	}
	,__class__: kala_behaviors_collision_basic_shapes_CollisionRectangle
});
var kala_behaviors_collision_transformable_Collider = function(object) {
	kala_behaviors_collision_BaseCollider.call(this,object);
	this._shapes = this.shapes;
};
$hxClasses["kala.behaviors.collision.transformable.Collider"] = kala_behaviors_collision_transformable_Collider;
kala_behaviors_collision_transformable_Collider.__name__ = ["kala","behaviors","collision","transformable","Collider"];
kala_behaviors_collision_transformable_Collider.__super__ = kala_behaviors_collision_BaseCollider;
kala_behaviors_collision_transformable_Collider.prototype = $extend(kala_behaviors_collision_BaseCollider.prototype,{
	_shapes: null
	,destroy: function() {
		kala_behaviors_collision_BaseCollider.prototype.destroy.call(this);
		this._shapes = null;
	}
	,drawDebug: function(color,fill,lineStrenght,canvas) {
		if(lineStrenght == null) {
			lineStrenght = 1;
		}
		if(fill == null) {
			fill = false;
		}
		if(!kala_behaviors_collision_BaseCollider.prototype.drawDebug.call(this,color,fill,lineStrenght,canvas)) {
			return false;
		}
		var _g = 0;
		var _g1 = this._shapes;
		while(_g < _g1.length) {
			var shape = _g1[_g];
			++_g;
			if(!shape.active) {
				continue;
			}
			var _this = canvas.get_g2();
			var transformation = shape.matrix;
			_this.setTransformation(transformation);
			_this.transformations[_this.transformations.length - 1] = transformation;
			if(fill) {
				var tmp = canvas.get_g2();
				var vectors = shape.getVertices();
				var _g2 = [];
				var _g11 = 0;
				while(_g11 < vectors.length) {
					var vec = vectors[_g11];
					++_g11;
					_g2.push(new kha_math_Vector2(vec.x,vec.y));
				}
				kha_graphics2_GraphicsExtension.fillPolygon(tmp,0,0,_g2);
			} else {
				var tmp1 = canvas.get_g2();
				var vectors1 = shape.getVertices();
				var _g3 = [];
				var _g12 = 0;
				while(_g12 < vectors1.length) {
					var vec1 = vectors1[_g12];
					++_g12;
					_g3.push(new kha_math_Vector2(vec1.x,vec1.y));
				}
				kha_graphics2_GraphicsExtension.drawPolygon(tmp1,0,0,_g3,lineStrenght);
			}
		}
		return true;
	}
	,addCircle: function(x,y,radius) {
		var circle = kala_behaviors_collision_transformable_shapes_CollisionCircle.pool.get();
		circle.reset();
		var _this = circle.position;
		_this.x = x;
		_this.y = y;
		circle.set_radius(radius);
		this._shapes.push(circle);
		return circle;
	}
	,addRect: function(x,y,width,height) {
		var polygon = kala_behaviors_collision_transformable_shapes_CollisionPolygon.pool.get();
		polygon.reset();
		var _this = polygon.position;
		_this.x = x;
		_this.y = y;
		polygon.set_vertices([new kha_math_FastVector2(0,0),new kha_math_FastVector2(0,height),new kha_math_FastVector2(width,height),new kha_math_FastVector2(width,0)]);
		this._shapes.push(polygon);
		return polygon;
	}
	,addPolygon: function(x,y,vertices,concave) {
		if(concave == null) {
			concave = false;
		}
		if(concave) {
			return null;
		}
		var polygon = kala_behaviors_collision_transformable_shapes_CollisionPolygon.pool.get();
		polygon.reset();
		var _this = polygon.position;
		_this.x = x;
		_this.y = y;
		polygon.set_vertices(vertices.slice());
		this._shapes.push(polygon);
		return [polygon];
	}
	,addObjectRect: function() {
		return this.addRect(0,0,this.object.get_width(),this.object.get_height());
	}
	,addShape: function(shape) {
		this._shapes.push(shape);
		return shape;
	}
	,removeShape: function(shape) {
		return HxOverrides.remove(this._shapes,shape);
	}
	,test: function(collider) {
		if(!this.available) {
			return null;
		}
		var result;
		var _g = 0;
		var _g1 = this._shapes;
		while(_g < _g1.length) {
			var shapeA = _g1[_g];
			++_g;
			if(!shapeA.active) {
				continue;
			}
			var _g2 = 0;
			var _g3 = collider._shapes;
			while(_g2 < _g3.length) {
				var shapeB = _g3[_g2];
				++_g2;
				if(!shapeB.active) {
					continue;
				}
				result = shapeA.test(shapeB);
				if(result != null) {
					return result;
				}
			}
		}
		return null;
	}
	,__class__: kala_behaviors_collision_transformable_Collider
});
var kala_behaviors_collision_transformable_CollisionResult = function(shape1,shape2,data) {
	this.shape1 = shape1;
	this.shape2 = shape2;
	this.data = data;
};
$hxClasses["kala.behaviors.collision.transformable.CollisionResult"] = kala_behaviors_collision_transformable_CollisionResult;
kala_behaviors_collision_transformable_CollisionResult.__name__ = ["kala","behaviors","collision","transformable","CollisionResult"];
kala_behaviors_collision_transformable_CollisionResult.prototype = {
	shape1: null
	,shape2: null
	,data: null
	,__class__: kala_behaviors_collision_transformable_CollisionResult
};
var kala_behaviors_collision_transformable_shapes_CollisionShape = function() {
	this._vertices = [];
	this.rotation = new kala_math_Rotation();
	this.scale = new kala_math_Vec2T();
	kala_behaviors_collision_BaseCollisionShape.call(this);
};
$hxClasses["kala.behaviors.collision.transformable.shapes.CollisionShape"] = kala_behaviors_collision_transformable_shapes_CollisionShape;
kala_behaviors_collision_transformable_shapes_CollisionShape.__name__ = ["kala","behaviors","collision","transformable","shapes","CollisionShape"];
kala_behaviors_collision_transformable_shapes_CollisionShape.__super__ = kala_behaviors_collision_BaseCollisionShape;
kala_behaviors_collision_transformable_shapes_CollisionShape.prototype = $extend(kala_behaviors_collision_BaseCollisionShape.prototype,{
	isCircle: null
	,scale: null
	,rotation: null
	,matrix: null
	,_vertices: null
	,reset: function() {
		kala_behaviors_collision_BaseCollisionShape.prototype.reset.call(this);
		var _this = this.scale;
		_this.x = 1;
		_this.y = 1;
		_this.ox = 0;
		_this.oy = 0;
		var _this1 = this.rotation;
		_this1.angle = 0;
		_this1.px = 0;
		_this1.py = 0;
		_this1.asDeg = true;
		this.matrix = null;
	}
	,destroy: function() {
		kala_behaviors_collision_BaseCollisionShape.prototype.destroy.call(this);
		this.scale = null;
		this.rotation = null;
		this._vertices = null;
		this.matrix = null;
	}
	,update: function(objectMatrix) {
		var position = this.position;
		var scale = this.scale;
		var rotation = this.rotation;
		var x = position.x - position.ox;
		var y = position.y - position.oy;
		var matrix = new kha_math_FastMatrix3(1,0,x,0,1,y,0,0,1);
		var ox = x + scale.ox;
		var oy = y + scale.oy;
		var this1 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
		var this2 = new kha_math_FastMatrix3(scale.x,0,0,0,scale.y,0,0,0,1);
		var _00 = this1._00 * this2._00 + this1._10 * this2._01 + this1._20 * this2._02;
		var _10 = this1._00 * this2._10 + this1._10 * this2._11 + this1._20 * this2._12;
		var _20 = this1._00 * this2._20 + this1._10 * this2._21 + this1._20 * this2._22;
		var _01 = this1._01 * this2._00 + this1._11 * this2._01 + this1._21 * this2._02;
		var _11 = this1._01 * this2._10 + this1._11 * this2._11 + this1._21 * this2._12;
		var _21 = this1._01 * this2._20 + this1._11 * this2._21 + this1._21 * this2._22;
		var _02 = this1._02 * this2._00 + this1._12 * this2._01 + this1._22 * this2._02;
		var _12 = this1._02 * this2._10 + this1._12 * this2._11 + this1._22 * this2._12;
		var _22 = this1._02 * this2._20 + this1._12 * this2._21 + this1._22 * this2._22;
		var this3 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
		var _001 = _00 * this3._00 + _10 * this3._01 + _20 * this3._02;
		var _101 = _00 * this3._10 + _10 * this3._11 + _20 * this3._12;
		var _201 = _00 * this3._20 + _10 * this3._21 + _20 * this3._22;
		var _011 = _01 * this3._00 + _11 * this3._01 + _21 * this3._02;
		var _111 = _01 * this3._10 + _11 * this3._11 + _21 * this3._12;
		var _211 = _01 * this3._20 + _11 * this3._21 + _21 * this3._22;
		var _021 = _02 * this3._00 + _12 * this3._01 + _22 * this3._02;
		var _121 = _02 * this3._10 + _12 * this3._11 + _22 * this3._12;
		var _221 = _02 * this3._20 + _12 * this3._21 + _22 * this3._22;
		matrix = new kha_math_FastMatrix3(_001 * matrix._00 + _101 * matrix._01 + _201 * matrix._02,_001 * matrix._10 + _101 * matrix._11 + _201 * matrix._12,_001 * matrix._20 + _101 * matrix._21 + _201 * matrix._22,_011 * matrix._00 + _111 * matrix._01 + _211 * matrix._02,_011 * matrix._10 + _111 * matrix._11 + _211 * matrix._12,_011 * matrix._20 + _111 * matrix._21 + _211 * matrix._22,_021 * matrix._00 + _121 * matrix._01 + _221 * matrix._02,_021 * matrix._10 + _121 * matrix._11 + _221 * matrix._12,_021 * matrix._20 + _121 * matrix._21 + _221 * matrix._22);
		ox = x + rotation.px;
		oy = y + rotation.py;
		var this4 = new kha_math_FastMatrix3(1,0,ox,0,1,oy,0,0,1);
		var alpha = rotation.get_rad();
		var this5 = new kha_math_FastMatrix3(Math.cos(alpha),-Math.sin(alpha),0,Math.sin(alpha),Math.cos(alpha),0,0,0,1);
		var _002 = this4._00 * this5._00 + this4._10 * this5._01 + this4._20 * this5._02;
		var _102 = this4._00 * this5._10 + this4._10 * this5._11 + this4._20 * this5._12;
		var _202 = this4._00 * this5._20 + this4._10 * this5._21 + this4._20 * this5._22;
		var _012 = this4._01 * this5._00 + this4._11 * this5._01 + this4._21 * this5._02;
		var _112 = this4._01 * this5._10 + this4._11 * this5._11 + this4._21 * this5._12;
		var _212 = this4._01 * this5._20 + this4._11 * this5._21 + this4._21 * this5._22;
		var _022 = this4._02 * this5._00 + this4._12 * this5._01 + this4._22 * this5._02;
		var _122 = this4._02 * this5._10 + this4._12 * this5._11 + this4._22 * this5._12;
		var _222 = this4._02 * this5._20 + this4._12 * this5._21 + this4._22 * this5._22;
		var this6 = new kha_math_FastMatrix3(1,0,-ox,0,1,-oy,0,0,1);
		var _003 = _002 * this6._00 + _102 * this6._01 + _202 * this6._02;
		var _103 = _002 * this6._10 + _102 * this6._11 + _202 * this6._12;
		var _203 = _002 * this6._20 + _102 * this6._21 + _202 * this6._22;
		var _013 = _012 * this6._00 + _112 * this6._01 + _212 * this6._02;
		var _113 = _012 * this6._10 + _112 * this6._11 + _212 * this6._12;
		var _213 = _012 * this6._20 + _112 * this6._21 + _212 * this6._22;
		var _023 = _022 * this6._00 + _122 * this6._01 + _222 * this6._02;
		var _123 = _022 * this6._10 + _122 * this6._11 + _222 * this6._12;
		var _223 = _022 * this6._20 + _122 * this6._21 + _222 * this6._22;
		matrix = new kha_math_FastMatrix3(_003 * matrix._00 + _103 * matrix._01 + _203 * matrix._02,_003 * matrix._10 + _103 * matrix._11 + _203 * matrix._12,_003 * matrix._20 + _103 * matrix._21 + _203 * matrix._22,_013 * matrix._00 + _113 * matrix._01 + _213 * matrix._02,_013 * matrix._10 + _113 * matrix._11 + _213 * matrix._12,_013 * matrix._20 + _113 * matrix._21 + _213 * matrix._22,_023 * matrix._00 + _123 * matrix._01 + _223 * matrix._02,_023 * matrix._10 + _123 * matrix._11 + _223 * matrix._12,_023 * matrix._20 + _123 * matrix._21 + _223 * matrix._22);
		var m = matrix;
		this.matrix = new kha_math_FastMatrix3(objectMatrix._00 * m._00 + objectMatrix._10 * m._01 + objectMatrix._20 * m._02,objectMatrix._00 * m._10 + objectMatrix._10 * m._11 + objectMatrix._20 * m._12,objectMatrix._00 * m._20 + objectMatrix._10 * m._21 + objectMatrix._20 * m._22,objectMatrix._01 * m._00 + objectMatrix._11 * m._01 + objectMatrix._21 * m._02,objectMatrix._01 * m._10 + objectMatrix._11 * m._11 + objectMatrix._21 * m._12,objectMatrix._01 * m._20 + objectMatrix._11 * m._21 + objectMatrix._21 * m._22,objectMatrix._02 * m._00 + objectMatrix._12 * m._01 + objectMatrix._22 * m._02,objectMatrix._02 * m._10 + objectMatrix._12 * m._11 + objectMatrix._22 * m._12,objectMatrix._02 * m._20 + objectMatrix._12 * m._21 + objectMatrix._22 * m._22);
	}
	,getVertices: function() {
		return this._vertices.slice();
	}
	,getTransformedVertices: function() {
		var transformedVertices = [];
		var _g = 0;
		var _g1 = this._vertices;
		while(_g < _g1.length) {
			var vert = _g1[_g];
			++_g;
			var matrix = this.matrix;
			var vec = new kha_math_FastVector2(vert.x,vert.y);
			vec.x = vert.x * matrix._00 + vert.y * matrix._10 + matrix._20;
			vec.y = vert.x * matrix._01 + vert.y * matrix._11 + matrix._21;
			transformedVertices.push(vec);
		}
		return transformedVertices;
	}
	,test: function(shape) {
		if(shape.isCircle) {
			return this.testCircle(shape);
		}
		return this.testPolygon(shape);
	}
	,testCircle: function(circle) {
		return null;
	}
	,testPolygon: function(polygon) {
		return null;
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_available: function() {
		return this.matrix != null;
	}
	,__class__: kala_behaviors_collision_transformable_shapes_CollisionShape
	,__properties__: $extend(kala_behaviors_collision_BaseCollisionShape.prototype.__properties__,{get_height:"get_height",get_width:"get_width"})
});
var kala_behaviors_collision_transformable_shapes_CollisionCircle = function() {
	kala_behaviors_collision_transformable_shapes_CollisionShape.call(this);
	this.isCircle = true;
};
$hxClasses["kala.behaviors.collision.transformable.shapes.CollisionCircle"] = kala_behaviors_collision_transformable_shapes_CollisionCircle;
kala_behaviors_collision_transformable_shapes_CollisionCircle.__name__ = ["kala","behaviors","collision","transformable","shapes","CollisionCircle"];
kala_behaviors_collision_transformable_shapes_CollisionCircle.get = function() {
	var circle = kala_behaviors_collision_transformable_shapes_CollisionCircle.pool.get();
	circle.reset();
	return circle;
};
kala_behaviors_collision_transformable_shapes_CollisionCircle.__super__ = kala_behaviors_collision_transformable_shapes_CollisionShape;
kala_behaviors_collision_transformable_shapes_CollisionCircle.prototype = $extend(kala_behaviors_collision_transformable_shapes_CollisionShape.prototype,{
	radius: null
	,segments: null
	,_verticesUpdated: null
	,reset: function() {
		kala_behaviors_collision_transformable_shapes_CollisionShape.prototype.reset.call(this);
		this.set_segments(0);
	}
	,put: function() {
		kala_behaviors_collision_transformable_shapes_CollisionCircle.pool._objects.push(this);
	}
	,testCircle: function(circle) {
		var otherStillCircle = circle.matrix._00 == circle.matrix._11 && circle.matrix._10 == 0 && circle.matrix._01 == 0;
		var otherX = circle.matrix._20;
		var otherY = circle.matrix._21;
		var otherRadius = circle.radius * circle.matrix._00;
		var data;
		if(this.matrix._00 == this.matrix._11 && this.matrix._10 == 0 && this.matrix._01 == 0) {
			var x = this.matrix._20;
			var y = this.matrix._21;
			var radius = this.radius * this.matrix._00;
			if(otherStillCircle) {
				data = kala_math_Collision.circleVsCircle(x,y,radius,otherX,otherY,otherRadius);
				if(data == null) {
					return null;
				}
				return new kala_behaviors_collision_transformable_CollisionResult(this,circle,data);
			}
			data = kala_math_Collision.circleVsPolygon(x,y,radius,circle.getTransformedVertices());
			if(data == null) {
				return null;
			}
			return new kala_behaviors_collision_transformable_CollisionResult(this,circle,data);
		}
		if(otherStillCircle) {
			data = kala_math_Collision.circleVsPolygon(otherX,otherY,otherRadius,this.getTransformedVertices());
			if(data == null) {
				return null;
			}
			var this1 = data.axis;
			this1.x = -this1.x;
			this1.y = -this1.y;
			var this2 = data.separation;
			this2.x = -this2.x;
			this2.y = -this2.y;
			data.overlapAmount = -data.overlapAmount;
			return new kala_behaviors_collision_transformable_CollisionResult(circle,this,data);
		}
		var result = kala_math_Collision.polygonVsPolygon(this.getTransformedVertices(),circle.getTransformedVertices());
		if(result == null) {
			return null;
		}
		if(result.b) {
			return new kala_behaviors_collision_transformable_CollisionResult(circle,this,result.a);
		}
		return new kala_behaviors_collision_transformable_CollisionResult(this,circle,result.a);
	}
	,testPolygon: function(polygon) {
		polygon.getTransformedVertices();
		var data;
		if(this.matrix._00 == this.matrix._11 && this.matrix._10 == 0 && this.matrix._01 == 0) {
			data = kala_math_Collision.circleVsPolygon(this.matrix._20,this.matrix._21,this.radius * this.matrix._00,polygon.getTransformedVertices());
			if(data == null) {
				return null;
			}
			return new kala_behaviors_collision_transformable_CollisionResult(this,polygon,data);
		}
		var result = kala_math_Collision.polygonVsPolygon(this.getTransformedVertices(),polygon.getTransformedVertices());
		if(result == null) {
			return null;
		}
		if(result.b) {
			return new kala_behaviors_collision_transformable_CollisionResult(polygon,this,result.a);
		}
		return new kala_behaviors_collision_transformable_CollisionResult(this,polygon,result.a);
	}
	,testPoint: function(pointX,pointY) {
		if(this.matrix._00 == this.matrix._11 && this.matrix._10 == 0 && this.matrix._01 == 0) {
			return kala_math_Collision.pointVsCircle(pointX,pointY,this.matrix._20,this.matrix._21,this.radius * this.matrix._00);
		}
		return kala_math_Collision.pointVsPolygon(pointX,pointY,this.getTransformedVertices());
	}
	,getVertices: function() {
		if(!this._verticesUpdated) {
			this.updateVertices();
		}
		return this._vertices;
	}
	,getTransformedVertices: function() {
		if(!this._verticesUpdated) {
			this.updateVertices();
		}
		return kala_behaviors_collision_transformable_shapes_CollisionShape.prototype.getTransformedVertices.call(this);
	}
	,testCircleNoTransform: function(circle) {
		var circleAX = this.matrix._20;
		var circleAY = this.matrix._21;
		var circleARadius = this.radius;
		var circleBX = circle.matrix._20;
		var circleBY = circle.matrix._21;
		var totalRadius = circleARadius + circle.radius;
		return (circleAX - circleBX) * (circleAX - circleBX) + (circleAY - circleBY) * (circleAY - circleBY) < totalRadius * totalRadius;
	}
	,updateVertices: function() {
		var segments = this.segments;
		if(segments <= 0) {
			segments = Math.floor(10 * Math.sqrt(this.radius));
		}
		if(this._vertices.length > segments) {
			this._vertices.splice(0,this._vertices.length - segments);
		}
		var theta = 2 * Math.PI / segments;
		var c = Math.cos(theta);
		var s = Math.sin(theta);
		var x = this.radius;
		var y = 0;
		var t;
		var point;
		var _g1 = 0;
		var _g = segments;
		while(_g1 < _g) {
			var i = _g1++;
			if(i < this._vertices.length) {
				point = this._vertices[i];
			} else {
				point = new kha_math_FastVector2(0,0);
				this._vertices.push(point);
			}
			point.x = x;
			point.y = y;
			t = x;
			x = c * x - s * y;
			y = c * y + s * t;
		}
		this._verticesUpdated = true;
	}
	,hasSymmetricalTransformation: function() {
		if(this.matrix._00 == this.matrix._11 && this.matrix._10 == 0) {
			return this.matrix._01 == 0;
		} else {
			return false;
		}
	}
	,set_radius: function(value) {
		this._verticesUpdated = false;
		return this.radius = value;
	}
	,set_segments: function(value) {
		this._verticesUpdated = false;
		return this.segments = value;
	}
	,get_width: function() {
		return this.radius * 2;
	}
	,get_height: function() {
		return this.radius * 2;
	}
	,__class__: kala_behaviors_collision_transformable_shapes_CollisionCircle
	,__properties__: $extend(kala_behaviors_collision_transformable_shapes_CollisionShape.prototype.__properties__,{set_segments:"set_segments",set_radius:"set_radius"})
});
var kala_behaviors_collision_transformable_shapes_CollisionPolygon = function() {
	kala_behaviors_collision_transformable_shapes_CollisionShape.call(this);
	this.isCircle = false;
};
$hxClasses["kala.behaviors.collision.transformable.shapes.CollisionPolygon"] = kala_behaviors_collision_transformable_shapes_CollisionPolygon;
kala_behaviors_collision_transformable_shapes_CollisionPolygon.__name__ = ["kala","behaviors","collision","transformable","shapes","CollisionPolygon"];
kala_behaviors_collision_transformable_shapes_CollisionPolygon.get = function() {
	var polygon = kala_behaviors_collision_transformable_shapes_CollisionPolygon.pool.get();
	polygon.reset();
	return polygon;
};
kala_behaviors_collision_transformable_shapes_CollisionPolygon.__super__ = kala_behaviors_collision_transformable_shapes_CollisionShape;
kala_behaviors_collision_transformable_shapes_CollisionPolygon.prototype = $extend(kala_behaviors_collision_transformable_shapes_CollisionShape.prototype,{
	_width: null
	,_height: null
	,put: function() {
		kala_behaviors_collision_transformable_shapes_CollisionPolygon.pool._objects.push(this);
	}
	,testCircle: function(circle) {
		var result = circle.testPolygon(this);
		if(result == null) {
			return null;
		}
		var shape = result.shape1;
		result.shape1 = result.shape2;
		result.shape2 = shape;
		var _this = result.data;
		var this1 = _this.axis;
		this1.x = -this1.x;
		this1.y = -this1.y;
		var this2 = _this.separation;
		this2.x = -this2.x;
		this2.y = -this2.y;
		_this.overlapAmount = -_this.overlapAmount;
		return result;
	}
	,testPolygon: function(polygon) {
		var result = kala_math_Collision.polygonVsPolygon(this.getTransformedVertices(),polygon.getTransformedVertices());
		if(result == null) {
			return null;
		}
		if(result.b) {
			return new kala_behaviors_collision_transformable_CollisionResult(polygon,this,result.a);
		}
		return new kala_behaviors_collision_transformable_CollisionResult(this,polygon,result.a);
	}
	,testPoint: function(pointX,pointY) {
		return kala_math_Collision.pointVsPolygon(pointX,pointY,this.getTransformedVertices());
	}
	,get_vertices: function() {
		return this._vertices;
	}
	,set_vertices: function(value) {
		this._vertices = value;
		var minX = 0;
		var maxX = 0;
		var minY = 0;
		var maxY = 0;
		var _g = 0;
		var _g1 = this._vertices;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			if(v.x < minX) {
				minX = v.x;
			} else if(v.x > maxX) {
				maxX = v.x;
			}
			if(v.y < minY) {
				minY = v.y;
			} else if(v.y > maxY) {
				maxY = v.y;
			}
		}
		this._width = Math.abs(maxX - minX);
		this._height = Math.abs(maxY - minY);
		return this._vertices;
	}
	,get_width: function() {
		return this._width;
	}
	,get_height: function() {
		return this._height;
	}
	,__class__: kala_behaviors_collision_transformable_shapes_CollisionPolygon
	,__properties__: $extend(kala_behaviors_collision_transformable_shapes_CollisionShape.prototype.__properties__,{set_vertices:"set_vertices",get_vertices:"get_vertices"})
});
var kala_behaviors_display_Clip = function(object,x,y,width,height) {
	this.arena = new kala_math_RectI();
	kala_behaviors_Behavior.call(this,object);
	var _this = this.arena;
	_this.x = x;
	_this.y = y;
	_this.width = width;
	_this.height = height;
};
$hxClasses["kala.behaviors.display.Clip"] = kala_behaviors_display_Clip;
kala_behaviors_display_Clip.__name__ = ["kala","behaviors","display","Clip"];
kala_behaviors_display_Clip.__super__ = kala_behaviors_Behavior;
kala_behaviors_display_Clip.prototype = $extend(kala_behaviors_Behavior.prototype,{
	arena: null
	,absolutePosition: null
	,enable: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		var _this = this.arena;
		_this.x = 0;
		_this.y = 0;
		_this.width = 0;
		_this.height = 0;
		this.absolutePosition = false;
		this.enable = true;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		object.onPreDraw._callbacks.push(new kala_Callback($bind(this,this.preDrawHandle),this));
		object.onPostDraw._callbacks.push(new kala_Callback($bind(this,this.postDrawHandle),this));
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			this.object.onPreDraw.removePrivateCB(this,$bind(this,this.preDrawHandle));
			this.object.onPostDraw.removePrivateCB(this,$bind(this,this.postDrawHandle));
		}
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,preDrawHandle: function(obj,data,canvas) {
		if(this.enable) {
			if(data.extra == null || data.extra.clip == null) {
				if(this.absolutePosition) {
					canvas.get_g2().scissor(this.arena.x,this.arena.y,this.arena.width,this.arena.height);
				} else {
					canvas.get_g2().scissor(this.arena.x + (this.object.position.x | 0),this.arena.y + (this.object.position.y | 0),this.arena.width,this.arena.height);
				}
			} else {
				var absArena = this.absolutePosition?this.arena:new kala_math_RectI(this.arena.x + (this.object.position.x | 0),this.arena.y + (this.object.position.y | 0),this.arena.width,this.arena.height);
				var rect = data.extra.clip;
				var x2 = absArena.x + absArena.width;
				var x4 = rect.x + rect.width;
				var y1 = absArena.y - absArena.height;
				var y3 = rect.y - rect.height;
				var leftX = Math.max(absArena.x,rect.x) | 0;
				var rightX = Math.min(x2,x4) | 0;
				var intersectedArena;
				if(rightX <= leftX) {
					intersectedArena = null;
				} else {
					var topY = Math.max(y1,y3) | 0;
					var bottomY = Math.min(absArena.y,rect.y) | 0;
					if(bottomY <= topY) {
						intersectedArena = null;
					} else {
						intersectedArena = new kala_math_RectI(leftX,bottomY,rightX - leftX,bottomY - topY);
					}
				}
				if(intersectedArena == null) {
					canvas.get_g2().scissor(absArena.x,absArena.y,absArena.width,absArena.height);
					if(obj.isGroup) {
						if(data.extra == null) {
							data.extra = { clip : absArena};
						} else {
							data.extra.clip = absArena;
						}
					}
				} else {
					canvas.get_g2().scissor(intersectedArena.x,intersectedArena.y,intersectedArena.width,intersectedArena.height);
					if(obj.isGroup) {
						if(data.extra == null) {
							data.extra = { clip : intersectedArena};
						} else {
							data.extra.clip = intersectedArena;
						}
					}
				}
			}
		}
		return false;
	}
	,postDrawHandle: function(obj,data,canvas) {
		if(this.enable) {
			canvas.get_g2().disableScissor();
		}
	}
	,__class__: kala_behaviors_display_Clip
});
var kala_behaviors_display_Flicker = function(object) {
	kala_behaviors_Behavior.call(this,object);
};
$hxClasses["kala.behaviors.display.Flicker"] = kala_behaviors_display_Flicker;
kala_behaviors_display_Flicker.__name__ = ["kala","behaviors","display","Flicker"];
kala_behaviors_display_Flicker.__super__ = kala_behaviors_Behavior;
kala_behaviors_display_Flicker.prototype = $extend(kala_behaviors_Behavior.prototype,{
	delay: null
	,visibleDuration: null
	,flickersLeft: null
	,_delayTimeLeft: null
	,_visibleTimeLeft: null
	,_onCompleteCB: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		this._delayTimeLeft = this.delay = 1;
		this.visibleDuration = 1;
		this._visibleTimeLeft = 0;
		this.flickersLeft = 0;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		object.onPostUpdate._callbacks.push(new kala_Callback($bind(this,this.update),this));
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			this.object.onPostUpdate.removePrivateCB(this,$bind(this,this.update));
		}
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,flicker: function(duration,delay,visibleDuration,onCompleteCB) {
		if(visibleDuration == null) {
			visibleDuration = 0;
		}
		if(delay == null) {
			delay = 0;
		}
		if(delay > 0) {
			this.delay = this._delayTimeLeft = delay;
		}
		if(visibleDuration > 0) {
			this.visibleDuration = visibleDuration;
		}
		this.flickersLeft = duration / (this.delay + this.visibleDuration) | 0;
		this._visibleTimeLeft = 0;
		this._onCompleteCB = onCompleteCB;
	}
	,update: function(obj,elapsed) {
		if(this.flickersLeft > 0) {
			if(this._visibleTimeLeft > 0) {
				this._visibleTimeLeft -= elapsed;
			} else {
				obj.visible = false;
				if(this._delayTimeLeft > 0) {
					this._delayTimeLeft -= elapsed;
				} else {
					this._delayTimeLeft = this.delay;
					this._visibleTimeLeft = this.visibleDuration;
					obj.visible = true;
					this.flickersLeft--;
					if(this.flickersLeft == 0 && this._onCompleteCB != null) {
						this._onCompleteCB();
					}
				}
			}
		}
	}
	,get_flickering: function() {
		return this.flickersLeft > 0;
	}
	,__class__: kala_behaviors_display_Flicker
	,__properties__: {get_flickering:"get_flickering"}
});
var kala_behaviors_display_SpriteAnimationData = function(key,image,delay) {
	this.key = key;
	this.image = image;
	this.delay = _$UInt_UInt_$Impl_$.toFloat(delay);
	this.frames = [];
};
$hxClasses["kala.behaviors.display.SpriteAnimationData"] = kala_behaviors_display_SpriteAnimationData;
kala_behaviors_display_SpriteAnimationData.__name__ = ["kala","behaviors","display","SpriteAnimationData"];
kala_behaviors_display_SpriteAnimationData.prototype = {
	key: null
	,image: null
	,frames: null
	,delay: null
	,__class__: kala_behaviors_display_SpriteAnimationData
};
var kala_behaviors_input_BasicButtonInteraction = function(object,collider,objectRectScale) {
	if(objectRectScale == null) {
		objectRectScale = 0;
	}
	kala_behaviors_Behavior.call(this);
	this.collider = collider;
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onPush = handle;
	var handle1 = new kala_CallbackHandle();
	this._cbHandles.push(handle1);
	this.onRelease = handle1;
	var handle2 = new kala_CallbackHandle();
	this._cbHandles.push(handle2);
	this.onOver = handle2;
	var handle3 = new kala_CallbackHandle();
	this._cbHandles.push(handle3);
	this.onOut = handle3;
	if(object != null) {
		this.addTo(object);
		if(objectRectScale > 0) {
			var _this = this.collider;
			var width = _this.object.get_width();
			var height = _this.object.get_height();
			var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
			rect.reset();
			var _this1 = rect.position;
			_this1.x = 0;
			_this1.y = 0;
			rect.width = width;
			rect.height = height;
			_this._shapes.push(rect);
			var _this2 = rect.position;
			var x = (_this.object.get_width() - rect.width) / 2;
			var y = (_this.object.get_height() - rect.height) / 2;
			_this2.x = x;
			_this2.y = y;
		}
	}
};
$hxClasses["kala.behaviors.input.BasicButtonInteraction"] = kala_behaviors_input_BasicButtonInteraction;
kala_behaviors_input_BasicButtonInteraction.__name__ = ["kala","behaviors","input","BasicButtonInteraction"];
kala_behaviors_input_BasicButtonInteraction.__super__ = kala_behaviors_Behavior;
kala_behaviors_input_BasicButtonInteraction.prototype = $extend(kala_behaviors_Behavior.prototype,{
	collider: null
	,active: null
	,hovered: null
	,onPush: null
	,onRelease: null
	,onOver: null
	,onOut: null
	,view: null
	,disableMouseOnMobile: null
	,_mouseHovered: null
	,_touched: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		this.active = true;
		this.hovered = this._mouseHovered = this._touched = false;
		this.disableMouseOnMobile = true;
		this.view = null;
		if(this.collider != null) {
			this.collider.reset();
		}
	}
	,destroy: function() {
		kala_behaviors_Behavior.prototype.destroy.call(this);
		this.collider = null;
		this.view = null;
		this.onPush = null;
		this.onRelease = null;
		this.onOver = null;
		this.onOut = null;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		if(this.collider == null) {
			this.collider = new kala_behaviors_collision_basic_Collider(object);
		} else {
			this.collider.addTo(object);
		}
		object.onPostUpdate._callbacks.push(new kala_Callback($bind(this,this.update),this));
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			this.collider.remove();
			this.object.onPostUpdate.removePrivateCB(this,$bind(this,this.update));
		}
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,addCircleMask: function(x,y,radius) {
		var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
		circle.reset();
		var _this = circle.position;
		_this.x = x;
		_this.y = y;
		circle.radius = radius;
		this.collider._shapes.push(circle);
		return circle;
	}
	,addRectMask: function(x,y,width,height) {
		var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
		rect.reset();
		var _this = rect.position;
		_this.x = x;
		_this.y = y;
		rect.width = width;
		rect.height = height;
		this.collider._shapes.push(rect);
		return rect;
	}
	,addObjectRectMask: function() {
		var _this = this.collider;
		var width = _this.object.get_width();
		var height = _this.object.get_height();
		var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
		rect.reset();
		var _this1 = rect.position;
		_this1.x = 0;
		_this1.y = 0;
		rect.width = width;
		rect.height = height;
		_this._shapes.push(rect);
		var _this2 = rect.position;
		var x = (_this.object.get_width() - rect.width) / 2;
		var y = (_this.object.get_height() - rect.height) / 2;
		_this2.x = x;
		_this2.y = y;
		return rect;
	}
	,update: function(obj,elapsed) {
		if(!this.active) {
			return;
		}
		if(!this.disableMouseOnMobile || !kha_SystemImpl.mobile) {
			this.updateMouse();
		}
		this.updateTouch();
		if(this.hovered && !this._touched && !this._mouseHovered) {
			this.hovered = false;
			var tmp = HxOverrides.iter(this.onOut._callbacks);
			while(tmp.hasNext()) tmp.next().cbFunction(this);
		}
	}
	,updateMouse: function() {
		var p;
		if(this.view == null) {
			p = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
		} else {
			var this1 = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
			var _this = this.view._cachedDrawingMatrix;
			var c00 = _this._11 * _this._22 - _this._21 * _this._12;
			var c01 = _this._10 * _this._22 - _this._20 * _this._12;
			var c02 = _this._10 * _this._21 - _this._20 * _this._11;
			var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var c10 = _this._01 * _this._22 - _this._21 * _this._02;
			var c11 = _this._00 * _this._22 - _this._20 * _this._02;
			var c12 = _this._00 * _this._21 - _this._20 * _this._01;
			var c20 = _this._01 * _this._12 - _this._11 * _this._02;
			var c21 = _this._00 * _this._12 - _this._10 * _this._02;
			var c22 = _this._00 * _this._11 - _this._10 * _this._01;
			var invdet = 1.0 / det;
			var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
			var xx = this1.x;
			var yy = this1.y;
			this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
			this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
			p = this1;
		}
		if(this.collider.testPoint(p.x,p.y)) {
			if(!this.hovered) {
				this.hovered = true;
				var tmp = HxOverrides.iter(this.onOver._callbacks);
				while(tmp.hasNext()) tmp.next().cbFunction(this);
			}
			if(kala_input_Mouse.LEFT.duration == 0) {
				var tmp1 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp1.hasNext()) tmp1.next().cbFunction(this,1);
			} else if(kala_input_Mouse.LEFT.justReleased) {
				var tmp2 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp2.hasNext()) tmp2.next().cbFunction(this,1);
			}
			if(kala_input_Mouse.MIDDLE.duration == 0) {
				var tmp3 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp3.hasNext()) tmp3.next().cbFunction(this,2);
			} else if(kala_input_Mouse.MIDDLE.justReleased) {
				var tmp4 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp4.hasNext()) tmp4.next().cbFunction(this,2);
			}
			if(kala_input_Mouse.RIGHT.duration == 0) {
				var tmp5 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp5.hasNext()) tmp5.next().cbFunction(this,3);
			} else if(kala_input_Mouse.RIGHT.justReleased) {
				var tmp6 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp6.hasNext()) tmp6.next().cbFunction(this,3);
			}
			this._mouseHovered = true;
		} else {
			this._mouseHovered = false;
		}
	}
	,updateTouch: function() {
		this._touched = false;
		var p;
		var tmp = kala_input_Touch.touches.iterator();
		while(tmp.hasNext()) {
			var touch = tmp.next();
			if(this.view == null) {
				p = new kha_math_FastVector2(touch.x,touch.y);
			} else {
				var this1 = new kha_math_FastVector2(touch.x,touch.y);
				var _this = this.view._cachedDrawingMatrix;
				var c00 = _this._11 * _this._22 - _this._21 * _this._12;
				var c01 = _this._10 * _this._22 - _this._20 * _this._12;
				var c02 = _this._10 * _this._21 - _this._20 * _this._11;
				var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
				if(Math.abs(det) < 0.000001) {
					throw new js__$Boot_HaxeError("determinant is too small");
				}
				var c10 = _this._01 * _this._22 - _this._21 * _this._02;
				var c11 = _this._00 * _this._22 - _this._20 * _this._02;
				var c12 = _this._00 * _this._21 - _this._20 * _this._01;
				var c20 = _this._01 * _this._12 - _this._11 * _this._02;
				var c21 = _this._00 * _this._12 - _this._10 * _this._02;
				var c22 = _this._00 * _this._11 - _this._10 * _this._01;
				var invdet = 1.0 / det;
				var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
				var xx = this1.x;
				var yy = this1.y;
				this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
				this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
				p = this1;
			}
			if(this.collider.testPoint(p.x,p.y)) {
				if(!this.hovered) {
					this.hovered = true;
					var tmp1 = HxOverrides.iter(this.onOver._callbacks);
					while(tmp1.hasNext()) tmp1.next().cbFunction(this);
				}
				if(touch.duration == 0) {
					var tmp2 = HxOverrides.iter(this.onPush._callbacks);
					while(tmp2.hasNext()) tmp2.next().cbFunction(this,touch.id);
				} else if(touch.justEnded) {
					var tmp3 = HxOverrides.iter(this.onRelease._callbacks);
					while(tmp3.hasNext()) tmp3.next().cbFunction(this,touch.id);
				}
				this._touched = true;
			}
		}
	}
	,get_pushed: function() {
		if(!this._touched) {
			return this._mouseHovered;
		} else {
			return true;
		}
	}
	,__class__: kala_behaviors_input_BasicButtonInteraction
	,__properties__: {get_pushed:"get_pushed"}
});
var kala_behaviors_input_ButtonInteraction = function(object,collider,objectRectScale) {
	if(objectRectScale == null) {
		objectRectScale = 0;
	}
	kala_behaviors_Behavior.call(this);
	this.collider = collider;
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onPush = handle;
	var handle1 = new kala_CallbackHandle();
	this._cbHandles.push(handle1);
	this.onRelease = handle1;
	var handle2 = new kala_CallbackHandle();
	this._cbHandles.push(handle2);
	this.onOver = handle2;
	var handle3 = new kala_CallbackHandle();
	this._cbHandles.push(handle3);
	this.onOut = handle3;
	if(object != null) {
		this.addTo(object);
		if(objectRectScale > 0) {
			var _this = this.collider;
			_this.addRect(0,0,_this.object.get_width(),_this.object.get_height());
		}
	}
};
$hxClasses["kala.behaviors.input.ButtonInteraction"] = kala_behaviors_input_ButtonInteraction;
kala_behaviors_input_ButtonInteraction.__name__ = ["kala","behaviors","input","ButtonInteraction"];
kala_behaviors_input_ButtonInteraction.__super__ = kala_behaviors_Behavior;
kala_behaviors_input_ButtonInteraction.prototype = $extend(kala_behaviors_Behavior.prototype,{
	collider: null
	,active: null
	,hovered: null
	,onPush: null
	,onRelease: null
	,onOver: null
	,onOut: null
	,view: null
	,disableMouseOnMobile: null
	,_mouseHovered: null
	,_touched: null
	,reset: function() {
		kala_behaviors_Behavior.prototype.reset.call(this);
		this.active = true;
		this.hovered = this._mouseHovered = this._touched = false;
		this.disableMouseOnMobile = true;
		this.view = null;
		if(this.collider != null) {
			this.collider.reset();
		}
	}
	,destroy: function() {
		kala_behaviors_Behavior.prototype.destroy.call(this);
		this.collider = null;
		this.view = null;
		this.onPush = null;
		this.onRelease = null;
		this.onOver = null;
		this.onOut = null;
	}
	,addTo: function(object) {
		kala_behaviors_Behavior.prototype.addTo.call(this,object);
		if(this.collider == null) {
			this.collider = new kala_behaviors_collision_transformable_Collider(object);
		} else {
			this.collider.addTo(object);
		}
		object.onPostUpdate._callbacks.push(new kala_Callback($bind(this,this.update),this));
		return this;
	}
	,remove: function() {
		if(this.object != null) {
			this.collider.remove();
			this.object.onPostUpdate.removePrivateCB(this,$bind(this,this.update));
		}
		kala_behaviors_Behavior.prototype.remove.call(this);
	}
	,addCircleMask: function(x,y,radius) {
		return this.collider.addCircle(x,y,radius);
	}
	,addRectMask: function(x,y,width,height) {
		return this.collider.addRect(x,y,width,height);
	}
	,addPolygonMask: function(x,y,vertices,concave) {
		if(concave == null) {
			concave = false;
		}
		return this.collider.addPolygon(x,y,vertices,concave);
	}
	,addObjectRectMask: function() {
		var _this = this.collider;
		return _this.addRect(0,0,_this.object.get_width(),_this.object.get_height());
	}
	,addShapeMask: function(shape) {
		this.collider._shapes.push(shape);
		return shape;
	}
	,update: function(obj,elapsed) {
		if(!this.active) {
			return;
		}
		if(!this.disableMouseOnMobile || !kha_SystemImpl.mobile) {
			this.updateMouse();
		}
		this.updateTouch();
		if(this.hovered && !this._touched && !this._mouseHovered) {
			this.hovered = false;
			var tmp = HxOverrides.iter(this.onOut._callbacks);
			while(tmp.hasNext()) tmp.next().cbFunction(this);
		}
	}
	,updateMouse: function() {
		var p;
		if(this.view == null) {
			p = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
		} else {
			var this1 = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
			var _this = this.view._cachedDrawingMatrix;
			var c00 = _this._11 * _this._22 - _this._21 * _this._12;
			var c01 = _this._10 * _this._22 - _this._20 * _this._12;
			var c02 = _this._10 * _this._21 - _this._20 * _this._11;
			var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var c10 = _this._01 * _this._22 - _this._21 * _this._02;
			var c11 = _this._00 * _this._22 - _this._20 * _this._02;
			var c12 = _this._00 * _this._21 - _this._20 * _this._01;
			var c20 = _this._01 * _this._12 - _this._11 * _this._02;
			var c21 = _this._00 * _this._12 - _this._10 * _this._02;
			var c22 = _this._00 * _this._11 - _this._10 * _this._01;
			var invdet = 1.0 / det;
			var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
			var xx = this1.x;
			var yy = this1.y;
			this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
			this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
			p = this1;
		}
		if(this.collider.testPoint(p.x,p.y)) {
			if(!this.hovered) {
				this.hovered = true;
				var tmp = HxOverrides.iter(this.onOver._callbacks);
				while(tmp.hasNext()) tmp.next().cbFunction(this);
			}
			if(kala_input_Mouse.LEFT.duration == 0) {
				var tmp1 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp1.hasNext()) tmp1.next().cbFunction(this,1);
			} else if(kala_input_Mouse.LEFT.justReleased) {
				var tmp2 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp2.hasNext()) tmp2.next().cbFunction(this,1);
			}
			if(kala_input_Mouse.MIDDLE.duration == 0) {
				var tmp3 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp3.hasNext()) tmp3.next().cbFunction(this,2);
			} else if(kala_input_Mouse.MIDDLE.justReleased) {
				var tmp4 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp4.hasNext()) tmp4.next().cbFunction(this,2);
			}
			if(kala_input_Mouse.RIGHT.duration == 0) {
				var tmp5 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp5.hasNext()) tmp5.next().cbFunction(this,3);
			} else if(kala_input_Mouse.RIGHT.justReleased) {
				var tmp6 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp6.hasNext()) tmp6.next().cbFunction(this,3);
			}
			this._mouseHovered = true;
		} else {
			this._mouseHovered = false;
		}
	}
	,updateTouch: function() {
		this._touched = false;
		var p;
		var tmp = kala_input_Touch.touches.iterator();
		while(tmp.hasNext()) {
			var touch = tmp.next();
			if(this.view == null) {
				p = new kha_math_FastVector2(touch.x,touch.y);
			} else {
				var this1 = new kha_math_FastVector2(touch.x,touch.y);
				var _this = this.view._cachedDrawingMatrix;
				var c00 = _this._11 * _this._22 - _this._21 * _this._12;
				var c01 = _this._10 * _this._22 - _this._20 * _this._12;
				var c02 = _this._10 * _this._21 - _this._20 * _this._11;
				var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
				if(Math.abs(det) < 0.000001) {
					throw new js__$Boot_HaxeError("determinant is too small");
				}
				var c10 = _this._01 * _this._22 - _this._21 * _this._02;
				var c11 = _this._00 * _this._22 - _this._20 * _this._02;
				var c12 = _this._00 * _this._21 - _this._20 * _this._01;
				var c20 = _this._01 * _this._12 - _this._11 * _this._02;
				var c21 = _this._00 * _this._12 - _this._10 * _this._02;
				var c22 = _this._00 * _this._11 - _this._10 * _this._01;
				var invdet = 1.0 / det;
				var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
				var xx = this1.x;
				var yy = this1.y;
				this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
				this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
				p = this1;
			}
			if(this.collider.testPoint(p.x,p.y)) {
				if(!this.hovered) {
					this.hovered = true;
					var tmp1 = HxOverrides.iter(this.onOver._callbacks);
					while(tmp1.hasNext()) tmp1.next().cbFunction(this);
				}
				if(touch.duration == 0) {
					var tmp2 = HxOverrides.iter(this.onPush._callbacks);
					while(tmp2.hasNext()) tmp2.next().cbFunction(this,touch.id);
				} else if(touch.justEnded) {
					var tmp3 = HxOverrides.iter(this.onRelease._callbacks);
					while(tmp3.hasNext()) tmp3.next().cbFunction(this,touch.id);
				}
				this._touched = true;
			}
		}
	}
	,get_pushed: function() {
		if(!this._touched) {
			return this._mouseHovered;
		} else {
			return true;
		}
	}
	,__class__: kala_behaviors_input_ButtonInteraction
	,__properties__: {get_pushed:"get_pushed"}
});
var kala_debug_Debug = function() { };
$hxClasses["kala.debug.Debug"] = kala_debug_Debug;
kala_debug_Debug.__name__ = ["kala","debug","Debug"];
kala_debug_Debug.log = function(value) {
};
kala_debug_Debug.echo = function(value) {
};
kala_debug_Debug.error = function(message) {
};
kala_debug_Debug.print = function(value,textColor,showDebugger) {
	if(showDebugger == null) {
		showDebugger = true;
	}
	if(textColor == null) {
		textColor = -1;
	}
};
var kala_graphics_Shader = function() { };
$hxClasses["kala.graphics.Shader"] = kala_graphics_Shader;
kala_graphics_Shader.__name__ = ["kala","graphics","Shader"];
kala_graphics_Shader.prototype = {
	pipeline: null
	,size: null
	,destroy: function() {
		this.pipeline = null;
	}
	,createPipeline: function(structure,vertexShader,fragmentShader) {
		this.pipeline = new kha_graphics4_PipelineState();
		if(structure == null) {
			structure = new kha_graphics4_VertexStructure();
			structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
			structure.add("texPosition",kha_graphics4_VertexData.Float2);
			structure.add("vertexColor",kha_graphics4_VertexData.Float4);
		}
		this.pipeline.inputLayout = [structure];
		this.pipeline.vertexShader = vertexShader == null?kha_Shaders.painter_image_vert:vertexShader;
		this.pipeline.fragmentShader = fragmentShader == null?kha_Shaders.painter_image_frag:fragmentShader;
		this.pipeline.compile();
	}
	,update: function(texture,buffer) {
	}
	,__class__: kala_graphics_Shader
};
var kala_input_ButtonInputHandle = function(onStartPressing,onRelease) {
	this.activeInputs = [];
	this.inputs = [];
	this.onStartPressing = onStartPressing;
	this.onRelease = onRelease;
};
$hxClasses["kala.input.ButtonInputHandle"] = kala_input_ButtonInputHandle;
kala_input_ButtonInputHandle.__name__ = ["kala","input","ButtonInputHandle"];
kala_input_ButtonInputHandle.prototype = {
	inputs: null
	,activeInputs: null
	,inputAny: null
	,onStartPressing: null
	,onRelease: null
	,addButton: function(button) {
		var input = new kala_input_ButtonInput(button,this);
		if(button == null) {
			this.inputAny = input;
		} else {
			this.inputs.push(input);
		}
		return input;
	}
	,update: function(elapsed) {
		if(this.activeInputs.length == 0) {
			if(this.inputAny.duration > -1) {
				this.inputAny.justReleased = true;
				this.inputAny.duration = -1;
			} else {
				this.inputAny.justReleased = false;
			}
			return;
		}
		if(this.inputAny.duration == -1) {
			this.inputAny.duration = 0;
		} else {
			this.inputAny.duration += elapsed;
		}
		var i = this.activeInputs.length;
		var input;
		while(i-- > 0) {
			input = this.activeInputs[i];
			if(input.duration == -1) {
				if(input._state == 1) {
					input.duration = 0;
					var tmp = HxOverrides.iter(this.onStartPressing._callbacks);
					while(tmp.hasNext()) tmp.next().cbFunction(input.button);
				} else if(input.justReleased) {
					this.activeInputs.splice(i,1);
					input.justReleased = false;
				}
			} else if(input._state == 2) {
				input.duration = -1;
				input._state = 0;
				input.justReleased = true;
				var tmp1 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp1.hasNext()) tmp1.next().cbFunction(input.button);
			} else {
				input.duration += elapsed;
			}
		}
	}
	,checkAnyPressed: function(buttons) {
		var btns = buttons.slice();
		var i;
		var _g = 0;
		var _g1 = this.activeInputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			i = 0;
			var _g2 = 0;
			while(_g2 < btns.length) {
				var button = btns[_g2];
				++_g2;
				if(Type.enumEq(input.button,button)) {
					if(input.duration > -1) {
						return true;
					}
					if(btns.length == 1) {
						return false;
					}
					btns.splice(i,1);
					continue;
				}
				++i;
			}
		}
		return false;
	}
	,checkAnyJustPressed: function(buttons) {
		var btns = buttons.slice();
		var i;
		var _g = 0;
		var _g1 = this.activeInputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			i = 0;
			var _g2 = 0;
			while(_g2 < btns.length) {
				var button = btns[_g2];
				++_g2;
				if(Type.enumEq(input.button,button)) {
					if(input.duration == 0) {
						return true;
					}
					if(btns.length == 1) {
						return false;
					}
					btns.splice(i,1);
					continue;
				}
				++i;
			}
		}
		return false;
	}
	,checkAnyJustReleased: function(buttons) {
		var btns = buttons.slice();
		var i;
		var _g = 0;
		var _g1 = this.activeInputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			i = 0;
			var _g2 = 0;
			while(_g2 < btns.length) {
				var button = btns[_g2];
				++_g2;
				if(Type.enumEq(input.button,button)) {
					if(input.justReleased) {
						return true;
					}
					if(btns.length == 1) {
						return false;
					}
					btns.splice(i,1);
					continue;
				}
				++i;
			}
		}
		return false;
	}
	,checkAllPressed: function(buttons) {
		var btns = buttons.slice();
		var i;
		var _g = 0;
		var _g1 = this.activeInputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			i = 0;
			var _g2 = 0;
			while(_g2 < btns.length) {
				var button = btns[_g2];
				++_g2;
				if(Type.enumEq(input.button,button)) {
					if(!(input.duration > -1)) {
						return false;
					}
					if(btns.length == 1) {
						return true;
					}
					btns.splice(i,1);
					continue;
				}
				++i;
			}
		}
		return false;
	}
	,checkAllJustPressed: function(buttons) {
		var btns = buttons.slice();
		var i;
		var _g = 0;
		var _g1 = this.activeInputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			i = 0;
			var _g2 = 0;
			while(_g2 < btns.length) {
				var button = btns[_g2];
				++_g2;
				if(Type.enumEq(input.button,button)) {
					if(input.duration != 0) {
						return false;
					}
					if(btns.length == 1) {
						return true;
					}
					btns.splice(i,1);
					continue;
				}
				++i;
			}
		}
		return false;
	}
	,checkAllJustReleased: function(buttons) {
		var btns = buttons.slice();
		var i;
		var _g = 0;
		var _g1 = this.activeInputs;
		while(_g < _g1.length) {
			var input = _g1[_g];
			++_g;
			i = 0;
			var _g2 = 0;
			while(_g2 < btns.length) {
				var button = btns[_g2];
				++_g2;
				if(Type.enumEq(input.button,button)) {
					if(!input.justReleased) {
						return false;
					}
					if(btns.length == 1) {
						return true;
					}
					btns.splice(i,1);
					continue;
				}
				++i;
			}
		}
		return false;
	}
	,__class__: kala_input_ButtonInputHandle
};
var kala_input_ButtonInput = function(button,handle) {
	this._state = 0;
	this.duration = -1;
	this.button = button;
	this._handle = handle;
};
$hxClasses["kala.input.ButtonInput"] = kala_input_ButtonInput;
kala_input_ButtonInput.__name__ = ["kala","input","ButtonInput"];
kala_input_ButtonInput.prototype = {
	button: null
	,duration: null
	,justReleased: null
	,_state: null
	,_handle: null
	,waitForRegistration: function() {
		this._handle.activeInputs.push(this);
		this._state = 1;
	}
	,waitForReleasing: function() {
		this._state = 2;
	}
	,get_pressed: function() {
		return this.duration > -1;
	}
	,get_justPressed: function() {
		return this.duration == 0;
	}
	,__class__: kala_input_ButtonInput
	,__properties__: {get_justPressed:"get_justPressed",get_pressed:"get_pressed"}
};
var kala_input_Keyboard = function() { };
$hxClasses["kala.input.Keyboard"] = kala_input_Keyboard;
kala_input_Keyboard.__name__ = ["kala","input","Keyboard"];
kala_input_Keyboard.checkAnyPressed = function(buttons) {
	return kala_input_Keyboard._handle.checkAnyPressed(buttons);
};
kala_input_Keyboard.checkAnyJustPressed = function(buttons) {
	return kala_input_Keyboard._handle.checkAnyJustPressed(buttons);
};
kala_input_Keyboard.checkAnyJustReleased = function(buttons) {
	return kala_input_Keyboard._handle.checkAnyJustReleased(buttons);
};
kala_input_Keyboard.checkAllPressed = function(buttons) {
	return kala_input_Keyboard._handle.checkAllPressed(buttons);
};
kala_input_Keyboard.checkAllJustPressed = function(buttons) {
	return kala_input_Keyboard._handle.checkAllJustPressed(buttons);
};
kala_input_Keyboard.checkAllJustReleased = function(buttons) {
	return kala_input_Keyboard._handle.checkAllJustReleased(buttons);
};
kala_input_Keyboard.init = function() {
	kha_input_Keyboard.get().notify(kala_input_Keyboard.keyDownListener,kala_input_Keyboard.keyUpListener);
	kala_input_Keyboard._handle = new kala_input_ButtonInputHandle(kala_input_Keyboard.onStartPressing,kala_input_Keyboard.onRelease);
	kala_input_Keyboard.ANY = kala_input_Keyboard._handle.addButton(null);
	kala_input_Keyboard.LEFT = kala_input_Keyboard._handle.addButton(kala_input_Key.LEFT);
	kala_input_Keyboard.RIGHT = kala_input_Keyboard._handle.addButton(kala_input_Key.RIGHT);
	kala_input_Keyboard.UP = kala_input_Keyboard._handle.addButton(kala_input_Key.UP);
	kala_input_Keyboard.DOWN = kala_input_Keyboard._handle.addButton(kala_input_Key.DOWN);
	kala_input_Keyboard.ESC = kala_input_Keyboard._handle.addButton(kala_input_Key.ESC);
	kala_input_Keyboard.TAB = kala_input_Keyboard._handle.addButton(kala_input_Key.TAB);
	kala_input_Keyboard.SHIFT = kala_input_Keyboard._handle.addButton(kala_input_Key.SHIFT);
	kala_input_Keyboard.CTRL = kala_input_Keyboard._handle.addButton(kala_input_Key.CTRL);
	kala_input_Keyboard.ALT = kala_input_Keyboard._handle.addButton(kala_input_Key.ALT);
	kala_input_Keyboard.BACKSPACE = kala_input_Keyboard._handle.addButton(kala_input_Key.BACKSPACE);
	kala_input_Keyboard.ENTER = kala_input_Keyboard._handle.addButton(kala_input_Key.ENTER);
	kala_input_Keyboard.DEL = kala_input_Keyboard._handle.addButton(kala_input_Key.DEL);
	kala_input_Keyboard.BACK = kala_input_Keyboard._handle.addButton(kala_input_Key.BACK);
	kala_input_Keyboard.SPACE = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR(" "));
	kala_input_Keyboard.A = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("a"));
	kala_input_Keyboard.B = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("b"));
	kala_input_Keyboard.C = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("c"));
	kala_input_Keyboard.D = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("d"));
	kala_input_Keyboard.E = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("e"));
	kala_input_Keyboard.F = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("f"));
	kala_input_Keyboard.G = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("g"));
	kala_input_Keyboard.H = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("h"));
	kala_input_Keyboard.I = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("i"));
	kala_input_Keyboard.J = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("j"));
	kala_input_Keyboard.K = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("k"));
	kala_input_Keyboard.L = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("l"));
	kala_input_Keyboard.M = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("m"));
	kala_input_Keyboard.N = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("n"));
	kala_input_Keyboard.O = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("o"));
	kala_input_Keyboard.P = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("p"));
	kala_input_Keyboard.Q = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("q"));
	kala_input_Keyboard.R = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("r"));
	kala_input_Keyboard.S = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("s"));
	kala_input_Keyboard.T = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("t"));
	kala_input_Keyboard.U = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("u"));
	kala_input_Keyboard.V = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("v"));
	kala_input_Keyboard.W = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("w"));
	kala_input_Keyboard.X = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("x"));
	kala_input_Keyboard.Y = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("y"));
	kala_input_Keyboard.Z = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("z"));
	kala_input_Keyboard.ONE = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("1"));
	kala_input_Keyboard.TWO = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("2"));
	kala_input_Keyboard.THREE = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("3"));
	kala_input_Keyboard.FOUR = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("4"));
	kala_input_Keyboard.FIVE = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("5"));
	kala_input_Keyboard.SIX = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("6"));
	kala_input_Keyboard.SEVEN = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("7"));
	kala_input_Keyboard.EIGHT = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("8"));
	kala_input_Keyboard.NINE = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("9"));
	kala_input_Keyboard.ZERO = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("0"));
	kala_input_Keyboard.BACKQUOTE = kala_input_Keyboard._handle.addButton(kala_input_Key.CHAR("à"));
};
kala_input_Keyboard.update = function(elapsed) {
	kala_input_Keyboard._handle.update(elapsed);
};
kala_input_Keyboard.keyDownListener = function(key,$char) {
	switch(key[1]) {
	case 0:
		var _this = kala_input_Keyboard.BACKSPACE;
		_this._handle.activeInputs.push(_this);
		_this._state = 1;
		break;
	case 1:
		var _this1 = kala_input_Keyboard.TAB;
		_this1._handle.activeInputs.push(_this1);
		_this1._state = 1;
		break;
	case 2:
		var _this2 = kala_input_Keyboard.ENTER;
		_this2._handle.activeInputs.push(_this2);
		_this2._state = 1;
		break;
	case 3:
		var _this3 = kala_input_Keyboard.SHIFT;
		_this3._handle.activeInputs.push(_this3);
		_this3._state = 1;
		break;
	case 4:
		var _this4 = kala_input_Keyboard.CTRL;
		_this4._handle.activeInputs.push(_this4);
		_this4._state = 1;
		break;
	case 5:
		var _this5 = kala_input_Keyboard.ALT;
		_this5._handle.activeInputs.push(_this5);
		_this5._state = 1;
		break;
	case 6:
		switch($char.toLowerCase()) {
		case " ":
			var _this6 = kala_input_Keyboard.SPACE;
			_this6._handle.activeInputs.push(_this6);
			_this6._state = 1;
			break;
		case "0":
			var _this7 = kala_input_Keyboard.ZERO;
			_this7._handle.activeInputs.push(_this7);
			_this7._state = 1;
			break;
		case "1":
			var _this8 = kala_input_Keyboard.ONE;
			_this8._handle.activeInputs.push(_this8);
			_this8._state = 1;
			break;
		case "2":
			var _this9 = kala_input_Keyboard.TWO;
			_this9._handle.activeInputs.push(_this9);
			_this9._state = 1;
			break;
		case "3":
			var _this10 = kala_input_Keyboard.THREE;
			_this10._handle.activeInputs.push(_this10);
			_this10._state = 1;
			break;
		case "4":
			var _this11 = kala_input_Keyboard.FOUR;
			_this11._handle.activeInputs.push(_this11);
			_this11._state = 1;
			break;
		case "5":
			var _this12 = kala_input_Keyboard.FIVE;
			_this12._handle.activeInputs.push(_this12);
			_this12._state = 1;
			break;
		case "6":
			var _this13 = kala_input_Keyboard.SIX;
			_this13._handle.activeInputs.push(_this13);
			_this13._state = 1;
			break;
		case "7":
			var _this14 = kala_input_Keyboard.SEVEN;
			_this14._handle.activeInputs.push(_this14);
			_this14._state = 1;
			break;
		case "8":
			var _this15 = kala_input_Keyboard.EIGHT;
			_this15._handle.activeInputs.push(_this15);
			_this15._state = 1;
			break;
		case "9":
			var _this16 = kala_input_Keyboard.NINE;
			_this16._handle.activeInputs.push(_this16);
			_this16._state = 1;
			break;
		case "a":
			var _this17 = kala_input_Keyboard.A;
			_this17._handle.activeInputs.push(_this17);
			_this17._state = 1;
			break;
		case "b":
			var _this18 = kala_input_Keyboard.B;
			_this18._handle.activeInputs.push(_this18);
			_this18._state = 1;
			break;
		case "c":
			var _this19 = kala_input_Keyboard.C;
			_this19._handle.activeInputs.push(_this19);
			_this19._state = 1;
			break;
		case "d":
			var _this20 = kala_input_Keyboard.D;
			_this20._handle.activeInputs.push(_this20);
			_this20._state = 1;
			break;
		case "e":
			var _this21 = kala_input_Keyboard.E;
			_this21._handle.activeInputs.push(_this21);
			_this21._state = 1;
			break;
		case "f":
			var _this22 = kala_input_Keyboard.F;
			_this22._handle.activeInputs.push(_this22);
			_this22._state = 1;
			break;
		case "g":
			var _this23 = kala_input_Keyboard.G;
			_this23._handle.activeInputs.push(_this23);
			_this23._state = 1;
			break;
		case "h":
			var _this24 = kala_input_Keyboard.H;
			_this24._handle.activeInputs.push(_this24);
			_this24._state = 1;
			break;
		case "i":
			var _this25 = kala_input_Keyboard.I;
			_this25._handle.activeInputs.push(_this25);
			_this25._state = 1;
			break;
		case "j":
			var _this26 = kala_input_Keyboard.J;
			_this26._handle.activeInputs.push(_this26);
			_this26._state = 1;
			break;
		case "k":
			var _this27 = kala_input_Keyboard.K;
			_this27._handle.activeInputs.push(_this27);
			_this27._state = 1;
			break;
		case "l":
			var _this28 = kala_input_Keyboard.L;
			_this28._handle.activeInputs.push(_this28);
			_this28._state = 1;
			break;
		case "m":
			var _this29 = kala_input_Keyboard.M;
			_this29._handle.activeInputs.push(_this29);
			_this29._state = 1;
			break;
		case "n":
			var _this30 = kala_input_Keyboard.N;
			_this30._handle.activeInputs.push(_this30);
			_this30._state = 1;
			break;
		case "o":
			var _this31 = kala_input_Keyboard.O;
			_this31._handle.activeInputs.push(_this31);
			_this31._state = 1;
			break;
		case "p":
			var _this32 = kala_input_Keyboard.P;
			_this32._handle.activeInputs.push(_this32);
			_this32._state = 1;
			break;
		case "q":
			var _this33 = kala_input_Keyboard.Q;
			_this33._handle.activeInputs.push(_this33);
			_this33._state = 1;
			break;
		case "r":
			var _this34 = kala_input_Keyboard.R;
			_this34._handle.activeInputs.push(_this34);
			_this34._state = 1;
			break;
		case "s":
			var _this35 = kala_input_Keyboard.S;
			_this35._handle.activeInputs.push(_this35);
			_this35._state = 1;
			break;
		case "t":
			var _this36 = kala_input_Keyboard.T;
			_this36._handle.activeInputs.push(_this36);
			_this36._state = 1;
			break;
		case "u":
			var _this37 = kala_input_Keyboard.U;
			_this37._handle.activeInputs.push(_this37);
			_this37._state = 1;
			break;
		case "v":
			var _this38 = kala_input_Keyboard.V;
			_this38._handle.activeInputs.push(_this38);
			_this38._state = 1;
			break;
		case "w":
			var _this39 = kala_input_Keyboard.W;
			_this39._handle.activeInputs.push(_this39);
			_this39._state = 1;
			break;
		case "x":
			var _this40 = kala_input_Keyboard.X;
			_this40._handle.activeInputs.push(_this40);
			_this40._state = 1;
			break;
		case "y":
			var _this41 = kala_input_Keyboard.Y;
			_this41._handle.activeInputs.push(_this41);
			_this41._state = 1;
			break;
		case "z":
			var _this42 = kala_input_Keyboard.Z;
			_this42._handle.activeInputs.push(_this42);
			_this42._state = 1;
			break;
		case "à":
			var _this43 = kala_input_Keyboard.BACKQUOTE;
			_this43._handle.activeInputs.push(_this43);
			_this43._state = 1;
			break;
		}
		break;
	case 7:
		var _this44 = kala_input_Keyboard.ESC;
		_this44._handle.activeInputs.push(_this44);
		_this44._state = 1;
		break;
	case 8:
		var _this45 = kala_input_Keyboard.DEL;
		_this45._handle.activeInputs.push(_this45);
		_this45._state = 1;
		break;
	case 9:
		var _this46 = kala_input_Keyboard.UP;
		_this46._handle.activeInputs.push(_this46);
		_this46._state = 1;
		break;
	case 10:
		var _this47 = kala_input_Keyboard.DOWN;
		_this47._handle.activeInputs.push(_this47);
		_this47._state = 1;
		break;
	case 11:
		var _this48 = kala_input_Keyboard.LEFT;
		_this48._handle.activeInputs.push(_this48);
		_this48._state = 1;
		break;
	case 12:
		var _this49 = kala_input_Keyboard.RIGHT;
		_this49._handle.activeInputs.push(_this49);
		_this49._state = 1;
		break;
	case 13:
		var _this50 = kala_input_Keyboard.BACK;
		_this50._handle.activeInputs.push(_this50);
		_this50._state = 1;
		break;
	}
};
kala_input_Keyboard.keyUpListener = function(key,$char) {
	switch(key[1]) {
	case 0:
		kala_input_Keyboard.BACKSPACE._state = 2;
		break;
	case 1:
		kala_input_Keyboard.TAB._state = 2;
		break;
	case 2:
		kala_input_Keyboard.ENTER._state = 2;
		break;
	case 3:
		kala_input_Keyboard.SHIFT._state = 2;
		break;
	case 4:
		kala_input_Keyboard.CTRL._state = 2;
		break;
	case 5:
		kala_input_Keyboard.ALT._state = 2;
		break;
	case 6:
		switch($char.toLowerCase()) {
		case " ":
			kala_input_Keyboard.SPACE._state = 2;
			break;
		case "0":
			kala_input_Keyboard.ZERO._state = 2;
			break;
		case "1":
			kala_input_Keyboard.ONE._state = 2;
			break;
		case "2":
			kala_input_Keyboard.TWO._state = 2;
			break;
		case "3":
			kala_input_Keyboard.THREE._state = 2;
			break;
		case "4":
			kala_input_Keyboard.FOUR._state = 2;
			break;
		case "5":
			kala_input_Keyboard.FIVE._state = 2;
			break;
		case "6":
			kala_input_Keyboard.SIX._state = 2;
			break;
		case "7":
			kala_input_Keyboard.SEVEN._state = 2;
			break;
		case "8":
			kala_input_Keyboard.EIGHT._state = 2;
			break;
		case "9":
			kala_input_Keyboard.NINE._state = 2;
			break;
		case "a":
			kala_input_Keyboard.A._state = 2;
			break;
		case "b":
			kala_input_Keyboard.B._state = 2;
			break;
		case "c":
			kala_input_Keyboard.C._state = 2;
			break;
		case "d":
			kala_input_Keyboard.D._state = 2;
			break;
		case "e":
			kala_input_Keyboard.E._state = 2;
			break;
		case "f":
			kala_input_Keyboard.F._state = 2;
			break;
		case "g":
			kala_input_Keyboard.G._state = 2;
			break;
		case "h":
			kala_input_Keyboard.H._state = 2;
			break;
		case "i":
			kala_input_Keyboard.I._state = 2;
			break;
		case "j":
			kala_input_Keyboard.J._state = 2;
			break;
		case "k":
			kala_input_Keyboard.K._state = 2;
			break;
		case "l":
			kala_input_Keyboard.L._state = 2;
			break;
		case "m":
			kala_input_Keyboard.M._state = 2;
			break;
		case "n":
			kala_input_Keyboard.N._state = 2;
			break;
		case "o":
			kala_input_Keyboard.O._state = 2;
			break;
		case "p":
			kala_input_Keyboard.P._state = 2;
			break;
		case "q":
			kala_input_Keyboard.Q._state = 2;
			break;
		case "r":
			kala_input_Keyboard.R._state = 2;
			break;
		case "s":
			kala_input_Keyboard.S._state = 2;
			break;
		case "t":
			kala_input_Keyboard.T._state = 2;
			break;
		case "u":
			kala_input_Keyboard.U._state = 2;
			break;
		case "v":
			kala_input_Keyboard.V._state = 2;
			break;
		case "w":
			kala_input_Keyboard.W._state = 2;
			break;
		case "x":
			kala_input_Keyboard.X._state = 2;
			break;
		case "y":
			kala_input_Keyboard.Y._state = 2;
			break;
		case "z":
			kala_input_Keyboard.Z._state = 2;
			break;
		case "à":
			kala_input_Keyboard.BACKQUOTE._state = 2;
			break;
		}
		break;
	case 7:
		kala_input_Keyboard.ESC._state = 2;
		break;
	case 8:
		kala_input_Keyboard.DEL._state = 2;
		break;
	case 9:
		kala_input_Keyboard.UP._state = 2;
		break;
	case 10:
		kala_input_Keyboard.DOWN._state = 2;
		break;
	case 11:
		kala_input_Keyboard.LEFT._state = 2;
		break;
	case 12:
		kala_input_Keyboard.RIGHT._state = 2;
		break;
	case 13:
		kala_input_Keyboard.BACK._state = 2;
		break;
	}
};
var kala_input_Key = $hxClasses["kala.input.Key"] = { __ename__ : ["kala","input","Key"], __constructs__ : ["BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","DEL","UP","DOWN","LEFT","RIGHT","BACK","CHAR"] };
kala_input_Key.BACKSPACE = ["BACKSPACE",0];
kala_input_Key.BACKSPACE.toString = $estr;
kala_input_Key.BACKSPACE.__enum__ = kala_input_Key;
kala_input_Key.TAB = ["TAB",1];
kala_input_Key.TAB.toString = $estr;
kala_input_Key.TAB.__enum__ = kala_input_Key;
kala_input_Key.ENTER = ["ENTER",2];
kala_input_Key.ENTER.toString = $estr;
kala_input_Key.ENTER.__enum__ = kala_input_Key;
kala_input_Key.SHIFT = ["SHIFT",3];
kala_input_Key.SHIFT.toString = $estr;
kala_input_Key.SHIFT.__enum__ = kala_input_Key;
kala_input_Key.CTRL = ["CTRL",4];
kala_input_Key.CTRL.toString = $estr;
kala_input_Key.CTRL.__enum__ = kala_input_Key;
kala_input_Key.ALT = ["ALT",5];
kala_input_Key.ALT.toString = $estr;
kala_input_Key.ALT.__enum__ = kala_input_Key;
kala_input_Key.ESC = ["ESC",6];
kala_input_Key.ESC.toString = $estr;
kala_input_Key.ESC.__enum__ = kala_input_Key;
kala_input_Key.DEL = ["DEL",7];
kala_input_Key.DEL.toString = $estr;
kala_input_Key.DEL.__enum__ = kala_input_Key;
kala_input_Key.UP = ["UP",8];
kala_input_Key.UP.toString = $estr;
kala_input_Key.UP.__enum__ = kala_input_Key;
kala_input_Key.DOWN = ["DOWN",9];
kala_input_Key.DOWN.toString = $estr;
kala_input_Key.DOWN.__enum__ = kala_input_Key;
kala_input_Key.LEFT = ["LEFT",10];
kala_input_Key.LEFT.toString = $estr;
kala_input_Key.LEFT.__enum__ = kala_input_Key;
kala_input_Key.RIGHT = ["RIGHT",11];
kala_input_Key.RIGHT.toString = $estr;
kala_input_Key.RIGHT.__enum__ = kala_input_Key;
kala_input_Key.BACK = ["BACK",12];
kala_input_Key.BACK.toString = $estr;
kala_input_Key.BACK.__enum__ = kala_input_Key;
kala_input_Key.CHAR = function($char) { var $x = ["CHAR",13,$char]; $x.__enum__ = kala_input_Key; $x.toString = $estr; return $x; };
var kala_input_Mouse = function() { };
$hxClasses["kala.input.Mouse"] = kala_input_Mouse;
kala_input_Mouse.__name__ = ["kala","input","Mouse"];
kala_input_Mouse.__properties__ = {get_wheel:"get_wheel"}
kala_input_Mouse.checkAnyPressed = function(buttons) {
	return kala_input_Mouse._handle.checkAnyPressed(buttons);
};
kala_input_Mouse.checkAnyJustPressed = function(buttons) {
	return kala_input_Mouse._handle.checkAnyJustPressed(buttons);
};
kala_input_Mouse.checkAnyJustReleased = function(buttons) {
	return kala_input_Mouse._handle.checkAnyJustReleased(buttons);
};
kala_input_Mouse.checkAllPressed = function(buttons) {
	return kala_input_Mouse._handle.checkAllPressed(buttons);
};
kala_input_Mouse.checkAllJustPressed = function(buttons) {
	return kala_input_Mouse._handle.checkAllJustPressed(buttons);
};
kala_input_Mouse.checkAllJustReleased = function(buttons) {
	return kala_input_Mouse._handle.checkAllJustReleased(buttons);
};
kala_input_Mouse.isHovering = function(x,y,width,height) {
	if(kala_input_Mouse.x >= x && kala_input_Mouse.x <= x + width && kala_input_Mouse.y >= y) {
		return kala_input_Mouse.y <= y + height;
	} else {
		return false;
	}
};
kala_input_Mouse.isHoveringRect = function(rect) {
	if(kala_input_Mouse.x >= rect.x && kala_input_Mouse.x <= rect.x + rect.width && kala_input_Mouse.y >= rect.y) {
		return kala_input_Mouse.y <= rect.y + rect.height;
	} else {
		return false;
	}
};
kala_input_Mouse.isHoveringObject = function(object) {
	if(kala_input_Mouse.x >= object.position.x && kala_input_Mouse.x <= object.position.x + object.get_width() && kala_input_Mouse.y >= object.position.y) {
		return kala_input_Mouse.y <= object.position.y + object.get_height();
	} else {
		return false;
	}
};
kala_input_Mouse.didLeftClickOn = function(x,y,width,height) {
	if(kala_input_Mouse.LEFT.duration == 0) {
		if(kala_input_Mouse.x >= x && kala_input_Mouse.x <= x + width && kala_input_Mouse.y >= y) {
			return kala_input_Mouse.y <= y + height;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
kala_input_Mouse.didLeftClickRect = function(rect) {
	if(kala_input_Mouse.LEFT.duration == 0) {
		if(kala_input_Mouse.x >= rect.x && kala_input_Mouse.x <= rect.x + rect.width && kala_input_Mouse.y >= rect.y) {
			return kala_input_Mouse.y <= rect.y + rect.height;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
kala_input_Mouse.didLeftClickObject = function(object) {
	if(kala_input_Mouse.LEFT.duration == 0) {
		if(kala_input_Mouse.x >= object.position.x && kala_input_Mouse.x <= object.position.x + object.get_width() && kala_input_Mouse.y >= object.position.y) {
			return kala_input_Mouse.y <= object.position.y + object.get_height();
		} else {
			return false;
		}
	} else {
		return false;
	}
};
kala_input_Mouse.didRightClickOn = function(x,y,width,height) {
	if(kala_input_Mouse.RIGHT.duration == 0) {
		if(kala_input_Mouse.x >= x && kala_input_Mouse.x <= x + width && kala_input_Mouse.y >= y) {
			return kala_input_Mouse.y <= y + height;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
kala_input_Mouse.didRightClickRect = function(rect) {
	if(kala_input_Mouse.RIGHT.duration == 0) {
		if(kala_input_Mouse.x >= rect.x && kala_input_Mouse.x <= rect.x + rect.width && kala_input_Mouse.y >= rect.y) {
			return kala_input_Mouse.y <= rect.y + rect.height;
		} else {
			return false;
		}
	} else {
		return false;
	}
};
kala_input_Mouse.didRightClickObject = function(object) {
	if(kala_input_Mouse.RIGHT.duration == 0) {
		if(kala_input_Mouse.x >= object.position.x && kala_input_Mouse.x <= object.position.x + object.get_width() && kala_input_Mouse.y >= object.position.y) {
			return kala_input_Mouse.y <= object.position.y + object.get_height();
		} else {
			return false;
		}
	} else {
		return false;
	}
};
kala_input_Mouse.project = function(view) {
	var this1 = new kha_math_FastVector2(kala_input_Mouse.realX,kala_input_Mouse.realY);
	var _this = view._cachedDrawingMatrix;
	var c00 = _this._11 * _this._22 - _this._21 * _this._12;
	var c01 = _this._10 * _this._22 - _this._20 * _this._12;
	var c02 = _this._10 * _this._21 - _this._20 * _this._11;
	var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
	if(Math.abs(det) < 0.000001) {
		throw new js__$Boot_HaxeError("determinant is too small");
	}
	var c10 = _this._01 * _this._22 - _this._21 * _this._02;
	var c11 = _this._00 * _this._22 - _this._20 * _this._02;
	var c12 = _this._00 * _this._21 - _this._20 * _this._01;
	var c20 = _this._01 * _this._12 - _this._11 * _this._02;
	var c21 = _this._00 * _this._12 - _this._10 * _this._02;
	var c22 = _this._00 * _this._11 - _this._10 * _this._01;
	var invdet = 1.0 / det;
	var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
	var xx = this1.x;
	var yy = this1.y;
	this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
	this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
	return this1;
};
kala_input_Mouse.init = function() {
	kha_input_Mouse.get().notify(kala_input_Mouse.mouseDownListener,kala_input_Mouse.mouseUpListener,kala_input_Mouse.mouseMoveListener,kala_input_Mouse.onWheel);
	kala_input_Mouse._handle = new kala_input_ButtonInputHandle(kala_input_Mouse.onStartPressing,kala_input_Mouse.onRelease);
	kala_input_Mouse.ANY = kala_input_Mouse._handle.addButton(null);
	kala_input_Mouse.LEFT = kala_input_Mouse._handle.addButton(kala_input_MouseButton.LEFT);
	kala_input_Mouse.RIGHT = kala_input_Mouse._handle.addButton(kala_input_MouseButton.RIGHT);
	kala_input_Mouse.MIDDLE = kala_input_Mouse._handle.addButton(kala_input_MouseButton.MIDDLE);
};
kala_input_Mouse.update = function(elapsed) {
	kala_input_Mouse._handle.update(elapsed);
	if(kala_input_Mouse._wheel != 0) {
		if(kala_input_Mouse._wheelRegistered) {
			kala_input_Mouse._wheel = 0;
		} else {
			kala_input_Mouse._wheelRegistered = true;
		}
	}
};
kala_input_Mouse.mouseDownListener = function(button,x,y) {
	var _this = kala_input_Mouse._handle.inputs[button];
	_this._handle.activeInputs.push(_this);
	_this._state = 1;
};
kala_input_Mouse.mouseUpListener = function(button,x,y) {
	kala_input_Mouse._handle.inputs[button]._state = 2;
};
kala_input_Mouse.mouseMoveListener = function(x,y,_,_1) {
	if(kala_Kala.defaultView == null) {
		kala_input_Mouse.x = kala_input_Mouse.realX = x;
		kala_input_Mouse.y = kala_input_Mouse.realY = y;
	} else {
		kala_input_Mouse.realX = x;
		kala_input_Mouse.realY = y;
		var this1 = new kha_math_FastVector2(x,y);
		var _this = kala_Kala.defaultView._cachedDrawingMatrix;
		var c00 = _this._11 * _this._22 - _this._21 * _this._12;
		var c01 = _this._10 * _this._22 - _this._20 * _this._12;
		var c02 = _this._10 * _this._21 - _this._20 * _this._11;
		var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
		if(Math.abs(det) < 0.000001) {
			throw new js__$Boot_HaxeError("determinant is too small");
		}
		var c10 = _this._01 * _this._22 - _this._21 * _this._02;
		var c11 = _this._00 * _this._22 - _this._20 * _this._02;
		var c12 = _this._00 * _this._21 - _this._20 * _this._01;
		var c20 = _this._01 * _this._12 - _this._11 * _this._02;
		var c21 = _this._00 * _this._12 - _this._10 * _this._02;
		var c22 = _this._00 * _this._11 - _this._10 * _this._01;
		var invdet = 1.0 / det;
		var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
		var xx = this1.x;
		var yy = this1.y;
		this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
		this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
		var p = this1;
		kala_input_Mouse.x = p.x | 0;
		kala_input_Mouse.y = p.y | 0;
	}
};
kala_input_Mouse.onWheel = function(amount) {
	kala_input_Mouse._wheel = amount;
	kala_input_Mouse._wheelRegistered = false;
};
kala_input_Mouse.get_wheel = function() {
	if(kala_input_Mouse._wheelRegistered) {
		return kala_input_Mouse._wheel;
	} else {
		return 0;
	}
};
var kala_input_MouseButton = $hxClasses["kala.input.MouseButton"] = { __ename__ : ["kala","input","MouseButton"], __constructs__ : ["LEFT","RIGHT","MIDDLE"] };
kala_input_MouseButton.LEFT = ["LEFT",0];
kala_input_MouseButton.LEFT.toString = $estr;
kala_input_MouseButton.LEFT.__enum__ = kala_input_MouseButton;
kala_input_MouseButton.RIGHT = ["RIGHT",1];
kala_input_MouseButton.RIGHT.toString = $estr;
kala_input_MouseButton.RIGHT.__enum__ = kala_input_MouseButton;
kala_input_MouseButton.MIDDLE = ["MIDDLE",2];
kala_input_MouseButton.MIDDLE.toString = $estr;
kala_input_MouseButton.MIDDLE.__enum__ = kala_input_MouseButton;
var kala_input_TouchHandle = function() {
	this._capturedTouches = [];
	this._registeredTouches = [];
	this.count = 0;
};
$hxClasses["kala.input.TouchHandle"] = kala_input_TouchHandle;
kala_input_TouchHandle.__name__ = ["kala","input","TouchHandle"];
kala_input_TouchHandle.prototype = {
	count: null
	,_registeredTouches: null
	,_capturedTouches: null
	,get: function(index) {
		return this._registeredTouches[index];
	}
	,findTouch: function(id) {
		var _g = 0;
		var _g1 = this._registeredTouches;
		while(_g < _g1.length) {
			var touch = _g1[_g];
			++_g;
			if(touch.id == id) {
				return touch;
			}
		}
		return null;
	}
	,getSide: function(vertical,middlePoint) {
		if(vertical == null) {
			vertical = false;
		}
		if(middlePoint == null) {
			if(vertical) {
				middlePoint = kala_Kala.height / 2;
			} else {
				middlePoint = kala_Kala.width / 2;
			}
		}
		var leftUpperTouched = false;
		var rightLowerTouched = false;
		if(vertical) {
			var _g = 0;
			var _g1 = this._registeredTouches;
			while(_g < _g1.length) {
				var touch = _g1[_g];
				++_g;
				if(touch.y < middlePoint) {
					leftUpperTouched = true;
				} else {
					rightLowerTouched = true;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = this._registeredTouches;
			while(_g2 < _g11.length) {
				var touch1 = _g11[_g2];
				++_g2;
				if(touch1.x < middlePoint) {
					leftUpperTouched = true;
				} else {
					rightLowerTouched = true;
				}
			}
		}
		if(leftUpperTouched && rightLowerTouched) {
			return 3;
		}
		if(rightLowerTouched) {
			return 2;
		}
		if(leftUpperTouched) {
			return 1;
		}
		return 0;
	}
	,iterator: function() {
		return HxOverrides.iter(this._registeredTouches);
	}
	,update: function(elapsed) {
		var i = this._registeredTouches.length;
		var touch;
		while(i-- > 0) {
			touch = this._registeredTouches[i];
			touch.duration += elapsed;
			if(touch._ending) {
				if(touch.justEnded) {
					this._registeredTouches.splice(i,1);
				} else {
					touch.justEnded = true;
				}
				var tmp = HxOverrides.iter(kala_input_Touch.onEnd._callbacks);
				while(tmp.hasNext()) tmp.next().cbFunction(touch);
				if(this._registeredTouches.length == 0 && this.count > 0) {
					while(this._registeredTouches.length > 0) this._registeredTouches.pop();
				}
			}
		}
		var touch1;
		while(this._capturedTouches.length > 0) {
			touch1 = this._capturedTouches.pop();
			this._registeredTouches.push(touch1);
			var tmp1 = HxOverrides.iter(kala_input_Touch.onStart._callbacks);
			while(tmp1.hasNext()) tmp1.next().cbFunction(touch1);
		}
	}
	,__class__: kala_input_TouchHandle
};
var kala_input_Touch = function(id,x,y,realX,realY) {
	this.id = id;
	this.x = x;
	this.y = y;
	this.realX = realX;
	this.realY = realY;
	this.duration = 0;
	this._ending = false;
};
$hxClasses["kala.input.Touch"] = kala_input_Touch;
kala_input_Touch.__name__ = ["kala","input","Touch"];
kala_input_Touch.init = function() {
	var surface = kha_input_Surface.get();
	if(surface != null) {
		surface.notify(kala_input_Touch.touchStartListener,kala_input_Touch.touchEndListener,kala_input_Touch.touchMoveListener);
	}
};
kala_input_Touch.touchStartListener = function(id,x,y) {
	kala_input_Touch.touches.count++;
	if(kala_Kala.defaultView == null) {
		kala_input_Touch.touches._capturedTouches.push(new kala_input_Touch(id,x,y,x,y));
	} else {
		var this1 = new kha_math_FastVector2(x,y);
		var _this = kala_Kala.defaultView._cachedDrawingMatrix;
		var c00 = _this._11 * _this._22 - _this._21 * _this._12;
		var c01 = _this._10 * _this._22 - _this._20 * _this._12;
		var c02 = _this._10 * _this._21 - _this._20 * _this._11;
		var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
		if(Math.abs(det) < 0.000001) {
			throw new js__$Boot_HaxeError("determinant is too small");
		}
		var c10 = _this._01 * _this._22 - _this._21 * _this._02;
		var c11 = _this._00 * _this._22 - _this._20 * _this._02;
		var c12 = _this._00 * _this._21 - _this._20 * _this._01;
		var c20 = _this._01 * _this._12 - _this._11 * _this._02;
		var c21 = _this._00 * _this._12 - _this._10 * _this._02;
		var c22 = _this._00 * _this._11 - _this._10 * _this._01;
		var invdet = 1.0 / det;
		var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
		var xx = this1.x;
		var yy = this1.y;
		this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
		this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
		var p = this1;
		kala_input_Touch.touches._capturedTouches.push(new kala_input_Touch(id,p.x | 0,p.y | 0,x,y));
	}
};
kala_input_Touch.touchEndListener = function(id,x,y) {
	kala_input_Touch.touches.count--;
	kala_input_Touch.touches.findTouch(id)._ending = true;
};
kala_input_Touch.touchMoveListener = function(id,x,y) {
	var touch = kala_input_Touch.touches.findTouch(id);
	if(kala_Kala.defaultView == null) {
		touch.x = touch.realX = x;
		touch.y = touch.realY = y;
	} else {
		touch.realX = x;
		touch.realY = y;
		var this1 = new kha_math_FastVector2(x,y);
		var _this = kala_Kala.defaultView._cachedDrawingMatrix;
		var c00 = _this._11 * _this._22 - _this._21 * _this._12;
		var c01 = _this._10 * _this._22 - _this._20 * _this._12;
		var c02 = _this._10 * _this._21 - _this._20 * _this._11;
		var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
		if(Math.abs(det) < 0.000001) {
			throw new js__$Boot_HaxeError("determinant is too small");
		}
		var c10 = _this._01 * _this._22 - _this._21 * _this._02;
		var c11 = _this._00 * _this._22 - _this._20 * _this._02;
		var c12 = _this._00 * _this._21 - _this._20 * _this._01;
		var c20 = _this._01 * _this._12 - _this._11 * _this._02;
		var c21 = _this._00 * _this._12 - _this._10 * _this._02;
		var c22 = _this._00 * _this._11 - _this._10 * _this._01;
		var invdet = 1.0 / det;
		var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
		var xx = this1.x;
		var yy = this1.y;
		this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
		this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
	}
	var tmp = HxOverrides.iter(kala_input_Touch.onMove._callbacks);
	while(tmp.hasNext()) tmp.next().cbFunction(touch);
};
kala_input_Touch.update = function(elapsed) {
	kala_input_Touch.touches.update(elapsed);
};
kala_input_Touch.prototype = {
	id: null
	,x: null
	,y: null
	,realX: null
	,realY: null
	,duration: null
	,justEnded: null
	,_ending: null
	,project: function(view) {
		var this1 = new kha_math_FastVector2(this.realX,this.realY);
		var _this = view._cachedDrawingMatrix;
		var c00 = _this._11 * _this._22 - _this._21 * _this._12;
		var c01 = _this._10 * _this._22 - _this._20 * _this._12;
		var c02 = _this._10 * _this._21 - _this._20 * _this._11;
		var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
		if(Math.abs(det) < 0.000001) {
			throw new js__$Boot_HaxeError("determinant is too small");
		}
		var c10 = _this._01 * _this._22 - _this._21 * _this._02;
		var c11 = _this._00 * _this._22 - _this._20 * _this._02;
		var c12 = _this._00 * _this._21 - _this._20 * _this._01;
		var c20 = _this._01 * _this._12 - _this._11 * _this._02;
		var c21 = _this._00 * _this._12 - _this._10 * _this._02;
		var c22 = _this._00 * _this._11 - _this._10 * _this._01;
		var invdet = 1.0 / det;
		var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
		var xx = this1.x;
		var yy = this1.y;
		this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
		this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
		return this1;
	}
	,get_justStarted: function() {
		return this.duration == 0;
	}
	,__class__: kala_input_Touch
	,__properties__: {get_justStarted:"get_justStarted"}
};
var kala_math_Collision = function() { };
$hxClasses["kala.math.Collision"] = kala_math_Collision;
kala_math_Collision.__name__ = ["kala","math","Collision"];
kala_math_Collision.pointVsRect = function(pointX,pointY,rectX,rectY,rectWidth,rectHeight) {
	if(pointX >= rectX && pointX < rectX + rectWidth && pointY >= rectY) {
		return pointY < rectY + rectHeight;
	} else {
		return false;
	}
};
kala_math_Collision.pointVsCircle = function(pointX,pointY,circleX,circleY,circleRadius) {
	var dx = pointX - circleX;
	var dy = pointY - circleY;
	return dx * dx + dy * dy <= circleRadius * circleRadius;
};
kala_math_Collision.pointVsPolygon = function(pointX,pointY,vertices) {
	var angle = 0;
	var p1 = new kha_math_FastVector2(0,0);
	var p2 = new kha_math_FastVector2(0,0);
	var _g1 = 0;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		p1.x = vertices[i].x - pointX;
		p1.y = vertices[i].y - pointY;
		p2.x = vertices[(i + 1) % vertices.length].x - pointX;
		p2.y = vertices[(i + 1) % vertices.length].y - pointY;
		var theta1 = Math.atan2(p1.y,p1.x);
		var dtheta = Math.atan2(p2.y,p2.x) - theta1;
		var twoPI = Math.PI * 2;
		while(dtheta > Math.PI) dtheta -= twoPI;
		while(dtheta < -Math.PI) dtheta += twoPI;
		angle += dtheta;
	}
	if(Math.abs(angle) < Math.PI) {
		return false;
	}
	return true;
};
kala_math_Collision.fastRectVsRect = function(x1,y1,w1,h1,x2,y2,w2,h2) {
	if(x1 < x2 + w2 && x1 + w1 > x2 && y1 < y2 + h2) {
		return y1 + h1 > y2;
	} else {
		return false;
	}
};
kala_math_Collision.fastCircleVsRect = function(circleX,circleY,circleRadius,rectX,rectY,rectWidth,rectHeight) {
	var dx = circleX - Math.max(rectX,Math.min(rectX + rectWidth,circleX));
	var dy = circleY - Math.max(rectY,Math.min(rectY + rectHeight,circleY));
	return dx * dx + dy * dy < circleRadius * circleRadius;
};
kala_math_Collision.fastCircleVsCircle = function(circleAX,circleAY,circleARadius,circleBX,circleBY,circleBRadius) {
	var totalRadius = circleARadius + circleBRadius;
	return (circleAX - circleBX) * (circleAX - circleBX) + (circleAY - circleBY) * (circleAY - circleBY) < totalRadius * totalRadius;
};
kala_math_Collision.circleVsPolygon = function(circleX,circleY,circleRadius,vertices) {
	var test1;
	var test2;
	var test;
	var min1 = 0;
	var max1 = 1073741823;
	var min2 = 0;
	var normalAxis = new kha_math_FastVector2(0,0);
	var offset;
	var vectorOffset = new kha_math_FastVector2(0,0);
	var shortestDistance = 1073741823;
	var distMin;
	var distance = -1;
	var testDistance = 1073741823;
	var closestVec2 = new kha_math_FastVector2(0,0);
	var resultAxis = null;
	var resultOverlapAmount = 0;
	vectorOffset = new kha_math_FastVector2(-circleX,-circleY);
	vertices = vertices.slice();
	if(vertices.length == 2) {
		var temp = new kha_math_FastVector2(-(vertices[1].y - vertices[0].y),vertices[1].x - vertices[0].x);
		var value = Math.min(0.0000000001,Math.sqrt(temp.x * temp.x + temp.y * temp.y));
		var angle = Math.atan2(temp.y,temp.x);
		temp.x = Math.cos(angle) * value;
		temp.y = Math.sin(angle) * value;
		if(Math.abs(temp.x) < 0.00000001) {
			temp.x = 0;
		}
		if(Math.abs(temp.y) < 0.00000001) {
			temp.y = 0;
		}
		var this1 = vertices[1];
		vertices.push(new kha_math_FastVector2(this1.x + temp.x,this1.y + temp.y));
	}
	var _g1 = 0;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		distance = (circleX - vertices[i].x) * (circleX - vertices[i].x) + (circleY - vertices[i].y) * (circleY - vertices[i].y);
		if(distance < testDistance) {
			testDistance = distance;
			closestVec2.x = vertices[i].x;
			closestVec2.y = vertices[i].y;
		}
	}
	normalAxis = new kha_math_FastVector2(closestVec2.x - circleX,closestVec2.y - circleY);
	if(Math.sqrt(normalAxis.x * normalAxis.x + normalAxis.y * normalAxis.y) == 0) {
		normalAxis.x = 1;
	} else {
		var len = Math.sqrt(normalAxis.x * normalAxis.x + normalAxis.y * normalAxis.y);
		var _g2 = normalAxis;
		_g2.x = _g2.x / len;
		var _g3 = normalAxis;
		_g3.y = _g3.y / len;
	}
	var vec = vertices[0];
	min1 = normalAxis.x * vec.x + normalAxis.y * vec.y;
	max1 = min1;
	var _g11 = 1;
	var _g4 = vertices.length;
	while(_g11 < _g4) {
		var vec1 = vertices[_g11++];
		test = normalAxis.x * vec1.x + normalAxis.y * vec1.y;
		if(test < min1) {
			min1 = test;
		}
		if(test > max1) {
			max1 = test;
		}
	}
	min2 -= circleRadius;
	offset = normalAxis.x * vectorOffset.x + normalAxis.y * vectorOffset.y;
	min1 += offset;
	max1 += offset;
	test1 = min1 - circleRadius;
	test2 = min2 - max1;
	if(test1 > 0 || test2 > 0) {
		return null;
	}
	distMin = -(circleRadius - min1);
	if(Math.abs(distMin) < shortestDistance) {
		resultAxis = normalAxis;
		resultOverlapAmount = distMin;
		shortestDistance = Math.abs(distMin);
	}
	var _g12 = 0;
	var _g5 = vertices.length;
	while(_g12 < _g5) {
		normalAxis = kala_math_Collision.findNormalAxis(vertices,_g12++);
		var vec2 = vertices[0];
		min1 = normalAxis.x * vec2.x + normalAxis.y * vec2.y;
		max1 = min1;
		var _g31 = 1;
		var _g21 = vertices.length;
		while(_g31 < _g21) {
			var vec3 = vertices[_g31++];
			test = normalAxis.x * vec3.x + normalAxis.y * vec3.y;
			if(test < min1) {
				min1 = test;
			}
			if(test > max1) {
				max1 = test;
			}
		}
		min2 = -circleRadius;
		offset = normalAxis.x * vectorOffset.x + normalAxis.y * vectorOffset.y;
		min1 += offset;
		max1 += offset;
		test1 = min1 - circleRadius;
		test2 = min2 - max1;
		if(test1 > 0 || test2 > 0) {
			return null;
		}
		distMin = -(circleRadius - min1);
		if(Math.abs(distMin) < shortestDistance) {
			resultAxis = normalAxis;
			resultOverlapAmount = distMin;
			shortestDistance = Math.abs(distMin);
		}
	}
	return new kala_math_CollisionData(resultAxis,resultOverlapAmount,new kha_math_FastVector2(-resultAxis.x * resultOverlapAmount,-resultAxis.y * resultOverlapAmount));
};
kala_math_Collision.circleVsCircle = function(circleAX,circleAY,circleARadius,circleBX,circleBY,circleBRadius) {
	var totalRadius = circleARadius + circleBRadius;
	var distancesq = (circleAX - circleBX) * (circleAX - circleBX) + (circleAY - circleBY) * (circleAY - circleBY);
	if(distancesq < totalRadius * totalRadius) {
		var difference = totalRadius - Math.sqrt(distancesq);
		var axis = new kha_math_FastVector2(circleAX - circleBX,circleAY - circleBY);
		if(Math.sqrt(axis.x * axis.x + axis.y * axis.y) == 0) {
			axis.x = 1;
		} else {
			var len = Math.sqrt(axis.x * axis.x + axis.y * axis.y);
			axis.x = axis.x / len;
			axis.y = axis.y / len;
		}
		var separation = new kha_math_FastVector2(axis.x * difference,axis.y * difference);
		return new kala_math_CollisionData(axis,Math.sqrt(separation.x * separation.x + separation.y * separation.y),separation);
	}
	return null;
};
kala_math_Collision.polygonVsPolygon = function(vertices1,vertices2) {
	var result1 = kala_math_Collision.checkPolygons(vertices1,vertices2);
	if(result1 == null) {
		return null;
	}
	var result2 = kala_math_Collision.checkPolygons(vertices2,vertices1);
	if(result2 == null) {
		return null;
	}
	if(Math.abs(result1.overlapAmount) < Math.abs(result2.overlapAmount)) {
		return new kala_util_types_Pair(result1,false);
	}
	var this1 = result2.axis;
	this1.x = -this1.x;
	this1.y = -this1.y;
	var this2 = result2.separation;
	this2.x = -this2.x;
	this2.y = -this2.y;
	result2.overlapAmount = -result2.overlapAmount;
	return new kala_util_types_Pair(result2,true);
};
kala_math_Collision.rayVsCircle = function(rayStart,rayEnd,rayInfinite,circleX,circleY,circleRadius) {
	var delta = new kha_math_FastVector2(rayEnd.x - rayStart.x,rayEnd.y - rayStart.y);
	var vec = new kha_math_FastVector2(circleX,circleY);
	var ray2circle = new kha_math_FastVector2(rayStart.x - vec.x,rayStart.y - vec.y);
	var a = delta.x * delta.x + delta.y * delta.y;
	var b = 2 * (delta.x * ray2circle.x + delta.y * ray2circle.y);
	var d = b * b - 4 * a * (ray2circle.x * ray2circle.x + ray2circle.y * ray2circle.y - circleRadius * circleRadius);
	if(d >= 0) {
		d = Math.sqrt(d);
		var t1 = (-b - d) / (2 * a);
		var t2 = (-b + d) / (2 * a);
		if(rayInfinite || t1 <= 1.0) {
			return new kala_util_types_Pair(t1,t2);
		}
	}
	return null;
};
kala_math_Collision.rayVsPolygon = function(rayStart,rayEnd,rayInfinite,vertices) {
	var delta = new kha_math_FastVector2(rayEnd.x - rayStart.x,rayEnd.y - rayStart.y);
	vertices = vertices.slice();
	var min_u = Infinity;
	var max_u = 0.0;
	if(vertices.length > 2) {
		var v1 = vertices[vertices.length - 1];
		var v2 = vertices[0];
		var r = kala_math_Collision.intersectRayRay(rayStart,delta,v1,new kha_math_FastVector2(v2.x - v1.x,v2.y - v1.y));
		if(r != null && r.b >= 0.0 && r.b <= 1.0) {
			if(r.a < min_u) {
				min_u = r.a;
			}
			if(r.a > 0.0) {
				max_u = r.a;
			}
		}
		var _g1 = 1;
		var _g = vertices.length;
		while(_g1 < _g) {
			var i = _g1++;
			v1 = vertices[i - 1];
			v2 = vertices[i];
			r = kala_math_Collision.intersectRayRay(rayStart,delta,v1,new kha_math_FastVector2(v2.x - v1.x,v2.y - v1.y));
			if(r != null && r.b >= 0.0 && r.b <= 1.0) {
				if(r.a < min_u) {
					min_u = r.a;
				}
				if(r.a > max_u) {
					max_u = r.a;
				}
			}
		}
		if(rayInfinite || min_u <= 1.0) {
			return new kala_util_types_Pair(min_u,max_u);
		}
	}
	return null;
};
kala_math_Collision.rayVsRay = function(rayAStart,rayAEnd,rayAInfinite,rayBStart,rayBEnd,rayBInfinite) {
	var delta1 = new kha_math_FastVector2(rayAEnd.x - rayAStart.x,rayAEnd.y - rayAStart.y);
	var delta2 = new kha_math_FastVector2(rayBEnd.x - rayBStart.x,rayBEnd.y - rayBStart.y);
	var dx = new kha_math_FastVector2(rayAStart.x - rayBStart.x,rayAStart.y - rayBStart.y);
	var d = delta2.y * delta1.x - delta2.x * delta1.y;
	if(d == 0.0) {
		return null;
	}
	var u1 = (delta2.x * dx.y - delta2.y * dx.x) / d;
	var u2 = (delta1.x * dx.y - delta1.y * dx.x) / d;
	if((rayAInfinite || u1 <= 1.0) && (rayBInfinite || u2 <= 1.0)) {
		return new kala_util_types_Pair(u1,u2);
	}
	return null;
};
kala_math_Collision.bresenhamLine = function(start,end) {
	var points = [];
	var steep = Math.abs(end.y - start.y) > Math.abs(end.x - start.x);
	var swapped = false;
	if(steep) {
		start = new kha_math_FastVector2(start.y,start.x);
		end = new kha_math_FastVector2(end.y,end.x);
	}
	if(start.x > end.x) {
		var t = start.x;
		start.x = end.x;
		end.x = t;
		t = start.y;
		start.y = end.y;
		end.y = t;
		swapped = true;
	}
	var deltax = end.x - start.x;
	var deltay = Math.abs(end.y - start.y);
	var error = deltax / 2;
	var ystep;
	var y = start.y;
	if(start.y < end.y) {
		ystep = 1;
	} else {
		ystep = -1;
	}
	var _g1 = start.x | 0;
	var _g = end.x | 0;
	while(_g1 < _g) {
		var x = _g1++;
		if(steep) {
			points.push(new kha_math_FastVector2(y,x));
		} else {
			points.push(new kha_math_FastVector2(x,y));
		}
		error -= deltay;
		if(error < 0) {
			y += ystep;
			error += deltax;
		}
	}
	if(swapped) {
		points.reverse();
	}
	return points;
};
kala_math_Collision.checkPolygons = function(vertices1,vertices2) {
	var test1;
	var test2;
	var testNum;
	var min1;
	var max1;
	var min2;
	var max2;
	var axis;
	var shortestDistance = 1073741823;
	var resultAxis = null;
	var resultOverlapAmount = 0;
	vertices1 = vertices1.slice();
	vertices2 = vertices2.slice();
	if(vertices1.length == 2) {
		var temp = new kha_math_FastVector2(-(vertices1[1].y - vertices1[0].y),vertices1[1].x - vertices1[0].x);
		var value = Math.min(0.0000000001,Math.sqrt(temp.x * temp.x + temp.y * temp.y));
		var angle = Math.atan2(temp.y,temp.x);
		temp.x = Math.cos(angle) * value;
		temp.y = Math.sin(angle) * value;
		if(Math.abs(temp.x) < 0.00000001) {
			temp.x = 0;
		}
		if(Math.abs(temp.y) < 0.00000001) {
			temp.y = 0;
		}
		var this1 = vertices1[1];
		vertices1.push(new kha_math_FastVector2(this1.x + temp.x,this1.y + temp.y));
	}
	if(vertices2.length == 2) {
		var temp1 = new kha_math_FastVector2(-(vertices2[1].y - vertices2[0].y),vertices2[1].x - vertices2[0].x);
		var value1 = Math.min(0.0000000001,Math.sqrt(temp1.x * temp1.x + temp1.y * temp1.y));
		var angle1 = Math.atan2(temp1.y,temp1.x);
		temp1.x = Math.cos(angle1) * value1;
		temp1.y = Math.sin(angle1) * value1;
		if(Math.abs(temp1.x) < 0.00000001) {
			temp1.x = 0;
		}
		if(Math.abs(temp1.y) < 0.00000001) {
			temp1.y = 0;
		}
		var this2 = vertices2[1];
		vertices2.push(new kha_math_FastVector2(this2.x + temp1.x,this2.y + temp1.y));
	}
	var _g1 = 0;
	var _g = vertices1.length;
	while(_g1 < _g) {
		axis = kala_math_Collision.findNormalAxis(vertices1,_g1++);
		var vec = vertices1[0];
		min1 = axis.x * vec.x + axis.y * vec.y;
		max1 = min1;
		var _g3 = 1;
		var _g2 = vertices1.length;
		while(_g3 < _g2) {
			var vec1 = vertices1[_g3++];
			testNum = axis.x * vec1.x + axis.y * vec1.y;
			if(testNum < min1) {
				min1 = testNum;
			}
			if(testNum > max1) {
				max1 = testNum;
			}
		}
		var vec2 = vertices2[0];
		min2 = axis.x * vec2.x + axis.y * vec2.y;
		max2 = min2;
		var _g31 = 1;
		var _g21 = vertices2.length;
		while(_g31 < _g21) {
			var vec3 = vertices2[_g31++];
			testNum = axis.x * vec3.x + axis.y * vec3.y;
			if(testNum < min2) {
				min2 = testNum;
			}
			if(testNum > max2) {
				max2 = testNum;
			}
		}
		test1 = min1 - max2;
		test2 = min2 - max1;
		if(test1 > 0 || test2 > 0) {
			return null;
		}
		var distMin = -(max2 - min1);
		if(Math.abs(distMin) < shortestDistance) {
			resultAxis = axis;
			resultOverlapAmount = distMin;
			shortestDistance = Math.abs(distMin);
		}
	}
	return new kala_math_CollisionData(resultAxis,resultOverlapAmount,new kha_math_FastVector2(-resultAxis.x * resultOverlapAmount,-resultAxis.y * resultOverlapAmount));
};
kala_math_Collision.swap = function(v) {
	return new kha_math_FastVector2(v.y,v.x);
};
kala_math_Collision.intersectRayRay = function(a,adelta,b,bdelta) {
	var dx = new kha_math_FastVector2(a.x - b.x,a.y - b.y);
	var d = bdelta.y * adelta.x - bdelta.x * adelta.y;
	if(d == 0.0) {
		return null;
	}
	return new kala_util_types_Pair((bdelta.x * dx.y - bdelta.y * dx.x) / d,(adelta.x * dx.y - adelta.y * dx.x) / d);
};
kala_math_Collision.findNormalAxis = function(vertices,index) {
	var vec1 = vertices[index];
	var vec2 = index >= vertices.length - 1?vertices[0]:vertices[index + 1];
	var normalAxis = new kha_math_FastVector2(-(vec2.y - vec1.y),vec2.x - vec1.x);
	var tmp;
	if(Math.sqrt(normalAxis.x * normalAxis.x + normalAxis.y * normalAxis.y) == 0) {
		normalAxis.x = 1;
		tmp = normalAxis;
	} else {
		var len = Math.sqrt(normalAxis.x * normalAxis.x + normalAxis.y * normalAxis.y);
		normalAxis.x = normalAxis.x / len;
		normalAxis.y = normalAxis.y / len;
		tmp = normalAxis;
	}
	return tmp;
};
var kala_math_CollisionData = function(axis,overlapAmount,separation) {
	this.axis = axis;
	this.overlapAmount = overlapAmount;
	this.separation = separation;
};
$hxClasses["kala.math.CollisionData"] = kala_math_CollisionData;
kala_math_CollisionData.__name__ = ["kala","math","CollisionData"];
kala_math_CollisionData.prototype = {
	axis: null
	,overlapAmount: null
	,separation: null
	,__class__: kala_math_CollisionData
};
var kala_math__$Matrix_Matrix_$Impl_$ = {};
$hxClasses["kala.math._Matrix.Matrix_Impl_"] = kala_math__$Matrix_Matrix_$Impl_$;
kala_math__$Matrix_Matrix_$Impl_$.__name__ = ["kala","math","_Matrix","Matrix_Impl_"];
kala_math__$Matrix_Matrix_$Impl_$._new = function(a,c,tx,b,d,ty) {
	if(ty == null) {
		ty = 0;
	}
	if(d == null) {
		d = 1;
	}
	if(b == null) {
		b = 0;
	}
	if(tx == null) {
		tx = 0;
	}
	if(c == null) {
		c = 0;
	}
	if(a == null) {
		a = 1;
	}
	return new kha_math_FastMatrix3(a,c,tx,b,d,ty,0,0,1);
};
var kala_math__$Position_Position_$Impl_$ = {};
$hxClasses["kala.math._Position.Position_Impl_"] = kala_math__$Position_Position_$Impl_$;
kala_math__$Position_Position_$Impl_$.__name__ = ["kala","math","_Position","Position_Impl_"];
kala_math__$Position_Position_$Impl_$.__properties__ = {get_realY:"get_realY",get_realX:"get_realX"}
kala_math__$Position_Position_$Impl_$._new = function(x,y,ox,oy) {
	if(oy == null) {
		oy = 0;
	}
	if(ox == null) {
		ox = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	return new kala_math_Vec2T(x,y,ox,oy);
};
kala_math__$Position_Position_$Impl_$.getDistance = function(this1,pos) {
	return Math.sqrt((this1.x - pos.x) * (this1.x - pos.x) + (this1.y - pos.y) * (this1.y - pos.y));
};
kala_math__$Position_Position_$Impl_$.getAngle = function(this1,pos,asDeg) {
	if(asDeg == null) {
		asDeg = true;
	}
	return Math.atan2(pos.y - this1.y,pos.x - this1.x) * (asDeg?kala_math_Mathf.CONST_DEG:1);
};
kala_math__$Position_Position_$Impl_$.get_realX = function(this1) {
	return this1.x - this1.ox;
};
kala_math__$Position_Position_$Impl_$.get_realY = function(this1) {
	return this1.y - this1.oy;
};
var kha_math_Random = function(seed) {
	this.index = 0;
	this.MT = [];
	this.MT[623] = 0;
	this.MT[0] = seed;
	var _g = 1;
	while(_g < 624) {
		var i = _g++;
		this.MT[i] = 1812433253 * (this.MT[i - 1] ^ this.MT[i - 1] >> 30) + i;
	}
};
$hxClasses["kha.math.Random"] = kha_math_Random;
kha_math_Random.__name__ = ["kha","math","Random"];
kha_math_Random.init = function(seed) {
	kha_math_Random.Default = new kha_math_Random(seed);
};
kha_math_Random.get = function() {
	return kha_math_Random.Default.Get();
};
kha_math_Random.getFloat = function() {
	return kha_math_Random.Default.GetFloat();
};
kha_math_Random.getUpTo = function(max) {
	return kha_math_Random.Default.GetUpTo(max);
};
kha_math_Random.getIn = function(min,max) {
	return kha_math_Random.Default.GetIn(min,max);
};
kha_math_Random.getFloatIn = function(min,max) {
	return min + kha_math_Random.Default.GetFloat() * (max - min);
};
kha_math_Random.prototype = {
	Get: function() {
		if(this.index == 0) {
			this.GenerateNumbers();
		}
		var y = this.MT[this.index];
		y ^= y >> 11;
		y ^= y << 7 & -1658038656;
		y ^= y << 15 & -272236544;
		y ^= y >> 18;
		this.index = (this.index + 1) % 624;
		return y;
	}
	,GetFloat: function() {
		return this.Get() / 2147483646;
	}
	,GetUpTo: function(max) {
		return this.Get() % (max + 1);
	}
	,GetIn: function(min,max) {
		return this.Get() % (max + 1 - min) + min;
	}
	,GetFloatIn: function(min,max) {
		return min + this.GetFloat() * (max - min);
	}
	,MT: null
	,index: null
	,GenerateNumbers: function() {
		var _g = 0;
		while(_g < 624) {
			var i = _g++;
			var y = (this.MT[i] & 1) + this.MT[(i + 1) % 624] & 2147483647;
			this.MT[i] = this.MT[(i + 397) % 624] ^ y >> 1;
			if(y % 2 != 0) {
				this.MT[i] = this.MT[i] ^ -1727483681;
			}
		}
	}
	,__class__: kha_math_Random
};
var kala_math__$Random_Random_$Impl_$ = {};
$hxClasses["kala.math._Random.Random_Impl_"] = kala_math__$Random_Random_$Impl_$;
kala_math__$Random_Random_$Impl_$.__name__ = ["kala","math","_Random","Random_Impl_"];
kala_math__$Random_Random_$Impl_$["int"] = function(min,max) {
	return kala_math__$Random_Random_$Impl_$.instance.GetIn(min,max);
};
kala_math__$Random_Random_$Impl_$["float"] = function(min,max) {
	return kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(min,max);
};
kala_math__$Random_Random_$Impl_$.fast = function(min,max) {
	return kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(min,max);
};
kala_math__$Random_Random_$Impl_$.bool = function(chance) {
	if(chance == null) {
		chance = 50;
	}
	return kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < chance;
};
kala_math__$Random_Random_$Impl_$.roll = function(chance) {
	if(chance == null) {
		chance = 50;
	}
	if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0) {
		return -1;
	}
	return 1;
};
kala_math__$Random_Random_$Impl_$._new = function(seed) {
	return new kha_math_Random(seed);
};
kala_math__$Random_Random_$Impl_$.getInt = function(this1,min,max) {
	return this1.GetIn(min,max);
};
kala_math__$Random_Random_$Impl_$.getFloat = function(this1,min,max) {
	return this1.GetFloatIn(min,max);
};
kala_math__$Random_Random_$Impl_$.getFast = function(this1,min,max) {
	return this1.GetFloatIn(min,max);
};
var kala_math_Rect = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["kala.math.Rect"] = kala_math_Rect;
kala_math_Rect.__name__ = ["kala","math","Rect"];
kala_math_Rect.prototype = {
	x: null
	,y: null
	,width: null
	,height: null
	,__class__: kala_math_Rect
};
var kala_math_RectI = function(x,y,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
};
$hxClasses["kala.math.RectI"] = kala_math_RectI;
kala_math_RectI.__name__ = ["kala","math","RectI"];
kala_math_RectI.prototype = {
	x: null
	,y: null
	,width: null
	,height: null
	,__class__: kala_math_RectI
};
var kala_math_Rotation = function(angle,pivotX,pivotY,asDeg) {
	if(asDeg == null) {
		asDeg = true;
	}
	if(pivotY == null) {
		pivotY = 0;
	}
	if(pivotX == null) {
		pivotX = 0;
	}
	if(angle == null) {
		angle = 0;
	}
	this.angle = angle;
	this.px = pivotX;
	this.py = pivotY;
	this.asDeg = asDeg;
};
$hxClasses["kala.math.Rotation"] = kala_math_Rotation;
kala_math_Rotation.__name__ = ["kala","math","Rotation"];
kala_math_Rotation.prototype = {
	px: null
	,py: null
	,angle: null
	,asDeg: null
	,get_deg: function() {
		if(this.asDeg) {
			return this.angle;
		}
		return this.angle * kala_math_Mathf.CONST_DEG;
	}
	,set_deg: function(value) {
		this.asDeg = true;
		return this.angle = value;
	}
	,get_rad: function() {
		if(this.asDeg) {
			return this.angle * kala_math_Mathf.CONST_RAD;
		}
		return this.angle;
	}
	,set_rad: function(value) {
		this.asDeg = false;
		return this.angle = value;
	}
	,__class__: kala_math_Rotation
	,__properties__: {set_rad:"set_rad",get_rad:"get_rad",set_deg:"set_deg",get_deg:"get_deg"}
};
var kala_math__$Vec2_Vec2_$Impl_$ = {};
$hxClasses["kala.math._Vec2.Vec2_Impl_"] = kala_math__$Vec2_Vec2_$Impl_$;
kala_math__$Vec2_Vec2_$Impl_$.__name__ = ["kala","math","_Vec2","Vec2_Impl_"];
kala_math__$Vec2_Vec2_$Impl_$._new = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	return new kha_math_FastVector2(x,y);
};
var kala_math_Vec2T = function(x,y,originX,originY) {
	if(originY == null) {
		originY = 0;
	}
	if(originX == null) {
		originX = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.ox = originX;
	this.oy = originY;
};
$hxClasses["kala.math.Vec2T"] = kala_math_Vec2T;
kala_math_Vec2T.__name__ = ["kala","math","Vec2T"];
kala_math_Vec2T.prototype = {
	ox: null
	,oy: null
	,x: null
	,y: null
	,toString: function() {
		return "Vec2T(x: " + this.x + ", y: " + this.y + ", ox: " + this.ox + ", oy: " + this.oy + ")";
	}
	,__class__: kala_math_Vec2T
};
var kala_math_Velocity = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this._x = x;
	this._y = y;
	this._angleUpdated = false;
	this._speedUpdated = false;
};
$hxClasses["kala.math.Velocity"] = kala_math_Velocity;
kala_math_Velocity.__name__ = ["kala","math","Velocity"];
kala_math_Velocity.prototype = {
	_x: null
	,_y: null
	,_angle: null
	,_speed: null
	,_angleUpdated: null
	,_speedUpdated: null
	,get_x: function() {
		return this._x;
	}
	,set_x: function(value) {
		this._angleUpdated = this._speedUpdated = false;
		return this._x = value;
	}
	,get_y: function() {
		return this._y;
	}
	,set_y: function(value) {
		this._angleUpdated = this._speedUpdated = false;
		return this._y = value;
	}
	,get_angle: function() {
		if(this._angleUpdated) {
			return this._angle;
		}
		this._angleUpdated = true;
		return this._angle = Math.atan2(this._y,this._x) * kala_math_Mathf.CONST_DEG;
	}
	,set_angle: function(value) {
		var rad = value * kala_math_Mathf.CONST_RAD;
		var tmp;
		if(this._speedUpdated) {
			tmp = this._speed;
		} else {
			this._speedUpdated = true;
			var tmp1 = this._x;
			var deg;
			if(this._angleUpdated) {
				deg = this._angle;
			} else {
				this._angleUpdated = true;
				deg = this._angle = Math.atan2(this._y,this._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp = this._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
		}
		this._x = tmp * Math.cos(rad);
		var tmp2;
		if(this._speedUpdated) {
			tmp2 = this._speed;
		} else {
			this._speedUpdated = true;
			var tmp3 = this._x;
			var deg1;
			if(this._angleUpdated) {
				deg1 = this._angle;
			} else {
				this._angleUpdated = true;
				deg1 = this._angle = Math.atan2(this._y,this._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp2 = this._speed = tmp3 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
		}
		this._y = tmp2 * Math.sin(rad);
		this._angleUpdated = true;
		return this._angle = value;
	}
	,get_speed: function() {
		if(this._speedUpdated) {
			return this._speed;
		}
		this._speedUpdated = true;
		var tmp = this._x;
		var deg;
		if(this._angleUpdated) {
			deg = this._angle;
		} else {
			this._angleUpdated = true;
			deg = this._angle = Math.atan2(this._y,this._x) * kala_math_Mathf.CONST_DEG;
		}
		return this._speed = tmp / Math.cos(deg * kala_math_Mathf.CONST_RAD);
	}
	,set_speed: function(value) {
		var deg;
		if(this._angleUpdated) {
			deg = this._angle;
		} else {
			this._angleUpdated = true;
			deg = this._angle = Math.atan2(this._y,this._x) * kala_math_Mathf.CONST_DEG;
		}
		var rad = deg * kala_math_Mathf.CONST_RAD;
		this._x = value * Math.cos(rad);
		this._y = value * Math.sin(rad);
		this._speedUpdated = true;
		return this._speed = value;
	}
	,__class__: kala_math_Velocity
	,__properties__: {set_speed:"set_speed",get_speed:"get_speed",set_angle:"set_angle",get_angle:"get_angle",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var kala_math_color_BlendMode = $hxClasses["kala.math.color.BlendMode"] = { __ename__ : ["kala","math","color","BlendMode"], __constructs__ : ["ALPHA","ADD","SUB","REVERSE_SUB","MULTI","MULTI_2X","SET"] };
kala_math_color_BlendMode.ALPHA = ["ALPHA",0];
kala_math_color_BlendMode.ALPHA.toString = $estr;
kala_math_color_BlendMode.ALPHA.__enum__ = kala_math_color_BlendMode;
kala_math_color_BlendMode.ADD = ["ADD",1];
kala_math_color_BlendMode.ADD.toString = $estr;
kala_math_color_BlendMode.ADD.__enum__ = kala_math_color_BlendMode;
kala_math_color_BlendMode.SUB = ["SUB",2];
kala_math_color_BlendMode.SUB.toString = $estr;
kala_math_color_BlendMode.SUB.__enum__ = kala_math_color_BlendMode;
kala_math_color_BlendMode.REVERSE_SUB = ["REVERSE_SUB",3];
kala_math_color_BlendMode.REVERSE_SUB.toString = $estr;
kala_math_color_BlendMode.REVERSE_SUB.__enum__ = kala_math_color_BlendMode;
kala_math_color_BlendMode.MULTI = ["MULTI",4];
kala_math_color_BlendMode.MULTI.toString = $estr;
kala_math_color_BlendMode.MULTI.__enum__ = kala_math_color_BlendMode;
kala_math_color_BlendMode.MULTI_2X = ["MULTI_2X",5];
kala_math_color_BlendMode.MULTI_2X.toString = $estr;
kala_math_color_BlendMode.MULTI_2X.__enum__ = kala_math_color_BlendMode;
kala_math_color_BlendMode.SET = function(src,dest,opt) { var $x = ["SET",6,src,dest,opt]; $x.__enum__ = kala_math_color_BlendMode; $x.toString = $estr; return $x; };
var kala_math_color_BlendOpt = $hxClasses["kala.math.color.BlendOpt"] = { __ename__ : ["kala","math","color","BlendOpt"], __constructs__ : ["ADD","SUB","REVERSE_SUB","MAX","MIN"] };
kala_math_color_BlendOpt.ADD = ["ADD",0];
kala_math_color_BlendOpt.ADD.toString = $estr;
kala_math_color_BlendOpt.ADD.__enum__ = kala_math_color_BlendOpt;
kala_math_color_BlendOpt.SUB = ["SUB",1];
kala_math_color_BlendOpt.SUB.toString = $estr;
kala_math_color_BlendOpt.SUB.__enum__ = kala_math_color_BlendOpt;
kala_math_color_BlendOpt.REVERSE_SUB = ["REVERSE_SUB",2];
kala_math_color_BlendOpt.REVERSE_SUB.toString = $estr;
kala_math_color_BlendOpt.REVERSE_SUB.__enum__ = kala_math_color_BlendOpt;
kala_math_color_BlendOpt.MAX = ["MAX",3];
kala_math_color_BlendOpt.MAX.toString = $estr;
kala_math_color_BlendOpt.MAX.__enum__ = kala_math_color_BlendOpt;
kala_math_color_BlendOpt.MIN = ["MIN",4];
kala_math_color_BlendOpt.MIN.toString = $estr;
kala_math_color_BlendOpt.MIN.__enum__ = kala_math_color_BlendOpt;
var kala_math_color_BlendFactor = $hxClasses["kala.math.color.BlendFactor"] = { __ename__ : ["kala","math","color","BlendFactor"], __constructs__ : ["ZERO","ONE","SRC_ALPHA","INV_SRC_ALPHA","SRC_COLOR","INV_SRC_COLOR","DEST_ALPHA","INV_DEST_ALPHA","DEST_COLOR","INV_DEST_COLOR","SRC_ALPHA_SATURATION","DEST_ALPHA_SATURATION","SET"] };
kala_math_color_BlendFactor.ZERO = ["ZERO",0];
kala_math_color_BlendFactor.ZERO.toString = $estr;
kala_math_color_BlendFactor.ZERO.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.ONE = ["ONE",1];
kala_math_color_BlendFactor.ONE.toString = $estr;
kala_math_color_BlendFactor.ONE.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.SRC_ALPHA = ["SRC_ALPHA",2];
kala_math_color_BlendFactor.SRC_ALPHA.toString = $estr;
kala_math_color_BlendFactor.SRC_ALPHA.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.INV_SRC_ALPHA = ["INV_SRC_ALPHA",3];
kala_math_color_BlendFactor.INV_SRC_ALPHA.toString = $estr;
kala_math_color_BlendFactor.INV_SRC_ALPHA.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.SRC_COLOR = ["SRC_COLOR",4];
kala_math_color_BlendFactor.SRC_COLOR.toString = $estr;
kala_math_color_BlendFactor.SRC_COLOR.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.INV_SRC_COLOR = ["INV_SRC_COLOR",5];
kala_math_color_BlendFactor.INV_SRC_COLOR.toString = $estr;
kala_math_color_BlendFactor.INV_SRC_COLOR.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.DEST_ALPHA = ["DEST_ALPHA",6];
kala_math_color_BlendFactor.DEST_ALPHA.toString = $estr;
kala_math_color_BlendFactor.DEST_ALPHA.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.INV_DEST_ALPHA = ["INV_DEST_ALPHA",7];
kala_math_color_BlendFactor.INV_DEST_ALPHA.toString = $estr;
kala_math_color_BlendFactor.INV_DEST_ALPHA.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.DEST_COLOR = ["DEST_COLOR",8];
kala_math_color_BlendFactor.DEST_COLOR.toString = $estr;
kala_math_color_BlendFactor.DEST_COLOR.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.INV_DEST_COLOR = ["INV_DEST_COLOR",9];
kala_math_color_BlendFactor.INV_DEST_COLOR.toString = $estr;
kala_math_color_BlendFactor.INV_DEST_COLOR.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.SRC_ALPHA_SATURATION = ["SRC_ALPHA_SATURATION",10];
kala_math_color_BlendFactor.SRC_ALPHA_SATURATION.toString = $estr;
kala_math_color_BlendFactor.SRC_ALPHA_SATURATION.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.DEST_ALPHA_SATURATION = ["DEST_ALPHA_SATURATION",11];
kala_math_color_BlendFactor.DEST_ALPHA_SATURATION.toString = $estr;
kala_math_color_BlendFactor.DEST_ALPHA_SATURATION.__enum__ = kala_math_color_BlendFactor;
kala_math_color_BlendFactor.SET = function(a,r,g,b) { var $x = ["SET",12,a,r,g,b]; $x.__enum__ = kala_math_color_BlendFactor; $x.toString = $estr; return $x; };
var kala_math_color__$Color_Color_$Impl_$ = {};
$hxClasses["kala.math.color._Color.Color_Impl_"] = kala_math_color__$Color_Color_$Impl_$;
kala_math_color__$Color_Color_$Impl_$.__name__ = ["kala","math","color","_Color","Color_Impl_"];
kala_math_color__$Color_Color_$Impl_$.__properties__ = {set_rgb:"set_rgb",get_rgb:"get_rgb",set_fblue:"set_fblue",get_fblue:"get_fblue",set_fgreen:"set_fgreen",get_fgreen:"get_fgreen",set_fred:"set_fred",get_fred:"get_fred",set_falpha:"set_falpha",get_falpha:"get_falpha",set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red",set_alpha:"set_alpha",get_alpha:"get_alpha"}
kala_math_color__$Color_Color_$Impl_$.fromBytes = function(alpha,red,green,blue) {
	return alpha << 24 | red << 16 | green << 8 | blue;
};
kala_math_color__$Color_Color_$Impl_$.fromFloats = function(alpha,red,green,blue) {
	return (Math.abs(alpha * 255) | 0) << 24 | (Math.abs(red * 255) | 0) << 16 | (Math.abs(green * 255) | 0) << 8 | (Math.abs(blue * 255) | 0);
};
kala_math_color__$Color_Color_$Impl_$.getBlendColor = function(src,dest,colorBlendMode,colorAlphaBlendMode) {
	if(colorAlphaBlendMode == null) {
		return kala_math_color__$Color_Color_$Impl_$.blend(src,dest,colorBlendMode);
	}
	return kala_math_color__$Color_Color_$Impl_$.blendEx(src,dest,colorBlendMode,colorAlphaBlendMode);
};
kala_math_color__$Color_Color_$Impl_$.setBytes = function(this1,alpha,red,green,blue) {
	this1 = alpha << 24 | red << 16 | green << 8 | blue;
};
kala_math_color__$Color_Color_$Impl_$.setFloats = function(this1,alpha,red,green,blue) {
	this1 = (Math.abs(alpha * 255) | 0) << 24 | (Math.abs(red * 255) | 0) << 16 | (Math.abs(green * 255) | 0) << 8 | (Math.abs(blue * 255) | 0);
};
kala_math_color__$Color_Color_$Impl_$.blend = function(this1,dest,mode) {
	var srcAlpha = _$UInt_UInt_$Impl_$.toFloat(this1 >>> 24 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var srcRed = _$UInt_UInt_$Impl_$.toFloat(this1 >>> 16 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var srcGreen = _$UInt_UInt_$Impl_$.toFloat(this1 >>> 8 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var srcBlue = _$UInt_UInt_$Impl_$.toFloat(this1 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var destAlpha = _$UInt_UInt_$Impl_$.toFloat(dest >>> 24 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var destRed = _$UInt_UInt_$Impl_$.toFloat(dest >>> 16 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var destGreen = _$UInt_UInt_$Impl_$.toFloat(dest >>> 8 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var destBlue = _$UInt_UInt_$Impl_$.toFloat(dest & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var factorsOpt = kala_math_color__$Color_Color_$Impl_$.getBlendFactorsOpt(this1,mode);
	var srcFactor = factorsOpt.a;
	var destFactor = factorsOpt.b;
	var opt = factorsOpt.c;
	var result;
	switch(srcFactor[1]) {
	case 0:
		srcBlue = 0;
		srcGreen = srcBlue;
		srcRed = srcGreen;
		srcAlpha = srcRed;
		break;
	case 1:
		break;
	case 2:
		srcAlpha *= srcAlpha;
		srcRed *= srcAlpha;
		srcGreen *= srcAlpha;
		srcBlue *= srcAlpha;
		break;
	case 3:
		srcAlpha *= 1 - srcAlpha;
		srcRed *= 1 - srcAlpha;
		srcGreen *= 1 - srcAlpha;
		srcBlue *= 1 - srcAlpha;
		break;
	case 4:
		srcAlpha *= srcAlpha;
		srcRed *= srcRed;
		srcGreen *= srcGreen;
		srcBlue *= srcBlue;
		break;
	case 5:
		srcAlpha *= 1 - srcAlpha;
		srcRed *= 1 - srcRed;
		srcGreen *= 1 - srcGreen;
		srcBlue *= 1 - srcBlue;
		break;
	case 6:
		srcAlpha *= destAlpha;
		srcRed *= destAlpha;
		srcGreen *= destAlpha;
		srcBlue *= destAlpha;
		break;
	case 7:
		srcAlpha *= 1 - destAlpha;
		srcRed *= 1 - destAlpha;
		srcGreen *= 1 - destAlpha;
		srcBlue *= 1 - destAlpha;
		break;
	case 8:
		srcAlpha *= destAlpha;
		srcRed *= destRed;
		srcGreen *= destGreen;
		srcBlue *= destBlue;
		break;
	case 9:
		srcAlpha *= 1 - destAlpha;
		srcRed *= 1 - destRed;
		srcGreen *= 1 - destGreen;
		srcBlue *= 1 - destBlue;
		break;
	case 10:
		var f = Math.min(srcAlpha,1 - srcAlpha);
		srcRed *= f;
		srcGreen *= f;
		srcBlue *= f;
		break;
	case 11:
		var f1 = Math.min(destAlpha,1 - destAlpha);
		srcRed *= f1;
		srcGreen *= f1;
		srcBlue *= f1;
		break;
	case 12:
		srcAlpha *= srcFactor[2];
		srcRed *= srcFactor[3];
		srcGreen *= srcFactor[4];
		srcBlue *= srcFactor[5];
		break;
	}
	switch(destFactor[1]) {
	case 0:
		destBlue = 0;
		destGreen = destBlue;
		destRed = destGreen;
		destAlpha = destRed;
		break;
	case 1:
		break;
	case 2:
		destAlpha *= srcAlpha;
		destRed *= srcAlpha;
		destGreen *= srcAlpha;
		destBlue *= srcAlpha;
		break;
	case 3:
		destAlpha *= 1 - srcAlpha;
		destRed *= 1 - srcAlpha;
		destGreen *= 1 - srcAlpha;
		destBlue *= 1 - srcAlpha;
		break;
	case 4:
		destAlpha *= srcAlpha;
		destRed *= srcRed;
		destGreen *= srcGreen;
		destBlue *= srcBlue;
		break;
	case 5:
		destAlpha *= 1 - srcAlpha;
		destRed *= 1 - srcRed;
		destGreen *= 1 - srcGreen;
		destBlue *= 1 - srcBlue;
		break;
	case 6:
		destAlpha *= destAlpha;
		destRed *= destAlpha;
		destGreen *= destAlpha;
		destBlue *= destAlpha;
		break;
	case 7:
		destAlpha *= 1 - destAlpha;
		destRed *= 1 - destAlpha;
		destGreen *= 1 - destAlpha;
		destBlue *= 1 - destAlpha;
		break;
	case 8:
		destAlpha *= destAlpha;
		destRed *= destRed;
		destGreen *= destGreen;
		destBlue *= destBlue;
		break;
	case 9:
		destAlpha *= 1 - destAlpha;
		destRed *= 1 - destRed;
		destGreen *= 1 - destGreen;
		destBlue *= 1 - destBlue;
		break;
	case 10:
		var f2 = Math.min(srcAlpha,1 - srcAlpha);
		destRed *= f2;
		destGreen *= f2;
		destBlue *= f2;
		break;
	case 11:
		var f3 = Math.min(destAlpha,1 - destAlpha);
		destRed *= f3;
		destGreen *= f3;
		destBlue *= f3;
		break;
	case 12:
		destAlpha *= destFactor[2];
		destRed *= destFactor[3];
		destGreen *= destFactor[4];
		destBlue *= destFactor[5];
		break;
	}
	switch(opt[1]) {
	case 0:
		result = (Math.abs((srcAlpha + destAlpha) * 255) | 0) << 24 | (Math.abs((srcRed + destRed) * 255) | 0) << 16 | (Math.abs((srcGreen + destGreen) * 255) | 0) << 8 | (Math.abs((srcBlue + destBlue) * 255) | 0);
		break;
	case 1:
		result = (Math.abs((srcAlpha - destAlpha) * 255) | 0) << 24 | (Math.abs((srcRed - destRed) * 255) | 0) << 16 | (Math.abs((srcGreen - destGreen) * 255) | 0) << 8 | (Math.abs((srcBlue - destBlue) * 255) | 0);
		break;
	case 2:
		result = (Math.abs((destAlpha - srcAlpha) * 255) | 0) << 24 | (Math.abs((destRed - srcRed) * 255) | 0) << 16 | (Math.abs((destGreen - srcGreen) * 255) | 0) << 8 | (Math.abs((destBlue - srcBlue) * 255) | 0);
		break;
	case 3:
		var alpha = Math.max(srcAlpha,destAlpha);
		var red = Math.max(srcRed,destRed);
		var green = Math.max(srcGreen,destGreen);
		var blue = Math.max(srcBlue,destBlue);
		result = (Math.abs(alpha * 255) | 0) << 24 | (Math.abs(red * 255) | 0) << 16 | (Math.abs(green * 255) | 0) << 8 | (Math.abs(blue * 255) | 0);
		break;
	case 4:
		var alpha1 = Math.min(srcAlpha,destAlpha);
		var red1 = Math.min(srcRed,destRed);
		var green1 = Math.min(srcGreen,destGreen);
		var blue1 = Math.min(srcBlue,destBlue);
		result = (Math.abs(alpha1 * 255) | 0) << 24 | (Math.abs(red1 * 255) | 0) << 16 | (Math.abs(green1 * 255) | 0) << 8 | (Math.abs(blue1 * 255) | 0);
		break;
	}
	return result;
};
kala_math_color__$Color_Color_$Impl_$.blendEx = function(this1,dest,rgbBlendMode,alphaBlendMode) {
	var result = kala_math_color__$Color_Color_$Impl_$.blend(this1,dest,rgbBlendMode);
	var srcAlpha = _$UInt_UInt_$Impl_$.toFloat(this1 >>> 24 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var destAlpha = _$UInt_UInt_$Impl_$.toFloat(dest >>> 24 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
	var factorsOpt = kala_math_color__$Color_Color_$Impl_$.getBlendFactorsOpt(this1,alphaBlendMode);
	var srcFactor = factorsOpt.a;
	var destFactor = factorsOpt.b;
	var opt = factorsOpt.c;
	switch(srcFactor[1]) {
	case 0:
		srcAlpha = 0;
		break;
	case 1:
		break;
	case 2:
		srcAlpha *= srcAlpha;
		break;
	case 3:
		srcAlpha *= 1 - srcAlpha;
		break;
	case 4:
		srcAlpha *= srcAlpha;
		break;
	case 5:
		srcAlpha *= 1 - srcAlpha;
		break;
	case 6:
		srcAlpha *= destAlpha;
		break;
	case 7:
		srcAlpha *= 1 - destAlpha;
		break;
	case 8:
		srcAlpha *= destAlpha;
		break;
	case 9:
		srcAlpha *= 1 - destAlpha;
		break;
	case 10:
		srcAlpha *= Math.min(srcAlpha,1 - srcAlpha);
		break;
	case 11:
		srcAlpha *= Math.min(destAlpha,1 - destAlpha);
		break;
	case 12:
		srcAlpha *= srcFactor[2];
		break;
	}
	switch(destFactor[1]) {
	case 0:
		destAlpha = 0;
		break;
	case 1:
		break;
	case 2:
		destAlpha *= srcAlpha;
		break;
	case 3:
		destAlpha *= 1 - srcAlpha;
		break;
	case 4:
		destAlpha *= srcAlpha;
		break;
	case 5:
		destAlpha *= 1 - srcAlpha;
		break;
	case 6:
		destAlpha *= destAlpha;
		break;
	case 7:
		destAlpha *= 1 - destAlpha;
		break;
	case 8:
		destAlpha *= destAlpha;
		break;
	case 9:
		destAlpha *= 1 - destAlpha;
		break;
	case 10:
		destAlpha *= Math.min(srcAlpha,1 - srcAlpha);
		break;
	case 11:
		destAlpha *= Math.min(destAlpha,1 - destAlpha);
		break;
	case 12:
		destAlpha *= destFactor[2];
		break;
	}
	switch(opt[1]) {
	case 0:
		result = (Math.abs((srcAlpha + destAlpha) * 255) | 0) << 24 | (result >>> 16 & 255) << 16 | (result >>> 8 & 255) << 8 | result & 255;
		break;
	case 1:
		result = (Math.abs((srcAlpha - destAlpha) * 255) | 0) << 24 | (result >>> 16 & 255) << 16 | (result >>> 8 & 255) << 8 | result & 255;
		break;
	case 2:
		result = (Math.abs((destAlpha - srcAlpha) * 255) | 0) << 24 | (result >>> 16 & 255) << 16 | (result >>> 8 & 255) << 8 | result & 255;
		break;
	case 3:
		result = (Math.abs(Math.max(srcAlpha,destAlpha) * 255) | 0) << 24 | (result >>> 16 & 255) << 16 | (result >>> 8 & 255) << 8 | result & 255;
		break;
	case 4:
		result = (Math.abs(Math.min(srcAlpha,destAlpha) * 255) | 0) << 24 | (result >>> 16 & 255) << 16 | (result >>> 8 & 255) << 8 | result & 255;
		break;
	}
	return result;
};
kala_math_color__$Color_Color_$Impl_$.blendBy = function(this1,dest,mode) {
	this1 = kala_math_color__$Color_Color_$Impl_$.blend(this1,dest,mode);
	return this1;
};
kala_math_color__$Color_Color_$Impl_$.blendExBy = function(this1,dest,rgbMode,alphaMode) {
	this1 = kala_math_color__$Color_Color_$Impl_$.blendEx(this1,dest,rgbMode,alphaMode);
	return this1;
};
kala_math_color__$Color_Color_$Impl_$.getBlendFactorsOpt = function(this1,mode) {
	switch(mode[1]) {
	case 0:
		return new kala_util_types_Trio(kala_math_color_BlendFactor.SRC_ALPHA,kala_math_color_BlendFactor.INV_SRC_ALPHA,kala_math_color_BlendOpt.ADD);
	case 1:
		return new kala_util_types_Trio(kala_math_color_BlendFactor.ONE,kala_math_color_BlendFactor.ONE,kala_math_color_BlendOpt.ADD);
	case 2:
		return new kala_util_types_Trio(kala_math_color_BlendFactor.ONE,kala_math_color_BlendFactor.ONE,kala_math_color_BlendOpt.SUB);
	case 3:
		return new kala_util_types_Trio(kala_math_color_BlendFactor.ONE,kala_math_color_BlendFactor.ONE,kala_math_color_BlendOpt.REVERSE_SUB);
	case 4:
		return new kala_util_types_Trio(kala_math_color_BlendFactor.ZERO,kala_math_color_BlendFactor.SRC_COLOR,kala_math_color_BlendOpt.ADD);
	case 5:
		return new kala_util_types_Trio(kala_math_color_BlendFactor.DEST_COLOR,kala_math_color_BlendFactor.SRC_COLOR,kala_math_color_BlendOpt.ADD);
	case 6:
		return new kala_util_types_Trio(mode[2],mode[3],mode[4]);
	}
};
kala_math_color__$Color_Color_$Impl_$.get_alpha = function(this1) {
	return this1 >>> 24 & 255;
};
kala_math_color__$Color_Color_$Impl_$.set_alpha = function(this1,value) {
	this1 = value << 24 | (this1 >>> 16 & 255) << 16 | (this1 >>> 8 & 255) << 8 | this1 & 255;
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_red = function(this1) {
	return this1 >>> 16 & 255;
};
kala_math_color__$Color_Color_$Impl_$.set_red = function(this1,value) {
	this1 = (this1 >>> 24 & 255) << 24 | value << 16 | (this1 >>> 8 & 255) << 8 | this1 & 255;
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_green = function(this1) {
	return this1 >>> 8 & 255;
};
kala_math_color__$Color_Color_$Impl_$.set_green = function(this1,value) {
	this1 = (this1 >>> 24 & 255) << 24 | (this1 >>> 16 & 255) << 16 | value << 8 | this1 & 255;
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_blue = function(this1) {
	return this1 & 255;
};
kala_math_color__$Color_Color_$Impl_$.set_blue = function(this1,value) {
	this1 = (this1 >>> 24 & 255) << 24 | (this1 >>> 16 & 255) << 16 | (this1 >>> 8 & 255) << 8 | value;
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_falpha = function(this1) {
	return _$UInt_UInt_$Impl_$.toFloat(this1 >>> 24 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
};
kala_math_color__$Color_Color_$Impl_$.set_falpha = function(this1,value) {
	this1 = (Math.abs(value * 255) | 0) << 24 | (this1 >>> 16 & 255) << 16 | (this1 >>> 8 & 255) << 8 | this1 & 255;
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_fred = function(this1) {
	return _$UInt_UInt_$Impl_$.toFloat(this1 >>> 16 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
};
kala_math_color__$Color_Color_$Impl_$.set_fred = function(this1,value) {
	this1 = (this1 >>> 24 & 255) << 24 | (Math.abs(value * 255) | 0) << 16 | (this1 >>> 8 & 255) << 8 | this1 & 255;
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_fgreen = function(this1) {
	return _$UInt_UInt_$Impl_$.toFloat(this1 >>> 8 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
};
kala_math_color__$Color_Color_$Impl_$.set_fgreen = function(this1,value) {
	this1 = (this1 >>> 24 & 255) << 24 | (this1 >>> 16 & 255) << 16 | (Math.abs(value * 255) | 0) << 8 | this1 & 255;
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_fblue = function(this1) {
	return _$UInt_UInt_$Impl_$.toFloat(this1 & 255) / _$UInt_UInt_$Impl_$.toFloat(255);
};
kala_math_color__$Color_Color_$Impl_$.set_fblue = function(this1,value) {
	this1 = (this1 >>> 24 & 255) << 24 | (this1 >>> 16 & 255) << 16 | (this1 >>> 8 & 255) << 8 | (Math.abs(value * 255) | 0);
	return value;
};
kala_math_color__$Color_Color_$Impl_$.get_rgb = function(this1) {
	return (this1 >>> 16 & 255) << 16 | (this1 >>> 8 & 255) << 8 | this1 & 255;
};
kala_math_color__$Color_Color_$Impl_$.set_rgb = function(this1,value) {
	this1 = (this1 >>> 24 & 255) << 24 | value;
	return value;
};
var kala_objects_group_View = function(viewX,viewY,viewWidth,viewHeight,antiAliasingSamples) {
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	kala_objects_Object.call(this);
	this.viewBuffer = kha_Image.createRenderTarget(_$UInt_UInt_$Impl_$.toFloat(viewWidth) | 0,_$UInt_UInt_$Impl_$.toFloat(viewHeight) | 0,null,0,antiAliasingSamples);
	this.viewBuffer.get_g2().set_imageScaleQuality(kha_graphics2_ImageScaleQuality.Low);
	this.viewport = new kala_math_Rect(viewX,viewY,_$UInt_UInt_$Impl_$.toFloat(viewWidth),_$UInt_UInt_$Impl_$.toFloat(viewHeight));
};
$hxClasses["kala.objects.group.View"] = kala_objects_group_View;
kala_objects_group_View.__name__ = ["kala","objects","group","View"];
kala_objects_group_View.__super__ = kala_objects_Object;
kala_objects_group_View.prototype = $extend(kala_objects_Object.prototype,{
	viewBuffer: null
	,viewport: null
	,halign: null
	,valign: null
	,scaleMode: null
	,shakeLeft: null
	,shakeIntensity: null
	,shakeDelay: null
	,shakeAxes: null
	,_shakeOffsetX: null
	,_shakeOffsetY: null
	,_shakeDelayTimeLeft: null
	,_onShakeCompleteCB: null
	,bgColor: null
	,transparent: null
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		kala_objects_Object.prototype.reset.call(this,resetBehaviors);
		this.bgColor = 0;
		this.transparent = true;
		this.scaleMode = kala_objects_group_ScaleMode.NONE;
		this._shakeOffsetX = this._shakeOffsetY = 0;
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_Object.prototype.destroy.call(this,destroyBehaviors);
		this.viewBuffer.unload();
		this.viewBuffer = null;
		this.viewport = null;
	}
	,update: function(elapsed) {
		kala_objects_Object.prototype.update.call(this,elapsed);
		if(this.shakeLeft > 0) {
			if(this._shakeDelayTimeLeft > 0) {
				this._shakeDelayTimeLeft -= elapsed;
			} else {
				this._shakeDelayTimeLeft = this.shakeDelay;
				if(this.shakeAxes != 1) {
					this._shakeOffsetX = this._shakeOffsetX < 0?kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.shakeIntensity):kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.shakeIntensity,0);
				}
				if(this.shakeAxes != 0) {
					this._shakeOffsetY = this._shakeOffsetY < 0?kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.shakeIntensity):kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.shakeIntensity,0);
				}
				this.shakeLeft--;
				if(this.shakeLeft == 0) {
					this._shakeOffsetX = this._shakeOffsetY = 0;
					if(this._onShakeCompleteCB != null) {
						this._onShakeCompleteCB();
					}
				}
			}
		}
	}
	,draw: function(data,canvas) {
		var cw = canvas.get_width();
		var ch = canvas.get_height();
		var w = this.viewport.width = this.viewBuffer.get_width();
		var h = this.viewport.height = this.viewBuffer.get_height();
		var _g = this.scaleMode;
		switch(_g[1]) {
		case 0:
			break;
		case 1:
			var _this = this.scale;
			_this.x = cw / w;
			_this.y = ch / h;
			w = cw;
			h = ch;
			break;
		case 2:
			var s = Math.min(cw / w,ch / h);
			var _this1 = this.scale;
			_this1.x = s;
			_this1.y = s;
			w *= s;
			h *= s;
			break;
		case 3:
			var s1 = Math.max(cw / w,ch / h);
			var _this2 = this.scale;
			_this2.x = s1;
			_this2.y = s1;
			w *= s1;
			h *= s1;
			break;
		case 4:
			var _this3 = this.scale;
			_this3.x = cw * _g[2] / w;
			_this3.y = ch * _g[3] / h;
			w *= this.scale.x;
			h *= this.scale.y;
			break;
		}
		this.applyDrawingData(data,canvas);
		if(this.halign != null) {
			var _this4 = canvas.get_g2();
			_this4.transformations[_this4.transformations.length - 1]._20 = (cw - w) * this.halign;
		}
		if(this.valign != null) {
			var _this5 = canvas.get_g2();
			_this5.transformations[_this5.transformations.length - 1]._21 = (ch - h) * this.valign;
		}
		var _this6 = canvas.get_g2();
		_this6.transformations[_this6.transformations.length - 1]._20 += this._shakeOffsetX;
		var _this7 = canvas.get_g2();
		_this7.transformations[_this7.transformations.length - 1]._21 += this._shakeOffsetY;
		var _this8 = canvas.get_g2();
		this._cachedDrawingMatrix = _this8.transformations[_this8.transformations.length - 1];
		canvas.get_g2().drawImage(this.viewBuffer,0,0);
	}
	,project: function(x,y) {
		var this1 = new kha_math_FastVector2(x,y);
		var _this = this._cachedDrawingMatrix;
		var c00 = _this._11 * _this._22 - _this._21 * _this._12;
		var c01 = _this._10 * _this._22 - _this._20 * _this._12;
		var c02 = _this._10 * _this._21 - _this._20 * _this._11;
		var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
		if(Math.abs(det) < 0.000001) {
			throw new js__$Boot_HaxeError("determinant is too small");
		}
		var c10 = _this._01 * _this._22 - _this._21 * _this._02;
		var c11 = _this._00 * _this._22 - _this._20 * _this._02;
		var c12 = _this._00 * _this._21 - _this._20 * _this._01;
		var c20 = _this._01 * _this._12 - _this._11 * _this._02;
		var c21 = _this._00 * _this._12 - _this._10 * _this._02;
		var c22 = _this._00 * _this._11 - _this._10 * _this._01;
		var invdet = 1.0 / det;
		var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
		var xx = this1.x;
		var yy = this1.y;
		this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
		this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
		return this1;
	}
	,setAlignScaleMode: function(halign,valign,scaleMode) {
		this.scaleMode = scaleMode;
		this.halign = halign;
		this.valign = valign;
		return this;
	}
	,setCenterScaleMode: function(scaleMode) {
		this.scaleMode = scaleMode;
		this.halign = 0.5;
		this.valign = 0.5;
		var _this = this.position;
		_this.ox = 0;
		_this.oy = 0;
		return this;
	}
	,shake: function(intensity,duration,delay,onCompleteCB,axes) {
		if(delay == null) {
			delay = 0;
		}
		this.shakeIntensity = intensity;
		this.shakeLeft = duration / (delay + 1) | 0;
		this.shakeDelay = delay;
		this._shakeDelayTimeLeft = 0;
		this.shakeAxes = axes == null?2:axes;
	}
	,get_width: function() {
		return this.viewBuffer.get_width();
	}
	,get_height: function() {
		return this.viewBuffer.get_height();
	}
	,updateShake: function(elapsed) {
		if(this.shakeLeft > 0) {
			if(this._shakeDelayTimeLeft > 0) {
				this._shakeDelayTimeLeft -= elapsed;
			} else {
				this._shakeDelayTimeLeft = this.shakeDelay;
				if(this.shakeAxes != 1) {
					this._shakeOffsetX = this._shakeOffsetX < 0?kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.shakeIntensity):kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.shakeIntensity,0);
				}
				if(this.shakeAxes != 0) {
					this._shakeOffsetY = this._shakeOffsetY < 0?kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0,this.shakeIntensity):kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(-this.shakeIntensity,0);
				}
				this.shakeLeft--;
				if(this.shakeLeft == 0) {
					this._shakeOffsetX = this._shakeOffsetY = 0;
					if(this._onShakeCompleteCB != null) {
						this._onShakeCompleteCB();
					}
				}
			}
		}
	}
	,get_shaking: function() {
		return this.shakeLeft > 0;
	}
	,__class__: kala_objects_group_View
	,__properties__: $extend(kala_objects_Object.prototype.__properties__,{get_shaking:"get_shaking"})
});
var kala_objects_group_ScaleMode = $hxClasses["kala.objects.group.ScaleMode"] = { __ename__ : ["kala","objects","group","ScaleMode"], __constructs__ : ["NONE","EXACT","RATIO","RATIO_FILL","FIXED"] };
kala_objects_group_ScaleMode.NONE = ["NONE",0];
kala_objects_group_ScaleMode.NONE.toString = $estr;
kala_objects_group_ScaleMode.NONE.__enum__ = kala_objects_group_ScaleMode;
kala_objects_group_ScaleMode.EXACT = ["EXACT",1];
kala_objects_group_ScaleMode.EXACT.toString = $estr;
kala_objects_group_ScaleMode.EXACT.__enum__ = kala_objects_group_ScaleMode;
kala_objects_group_ScaleMode.RATIO = ["RATIO",2];
kala_objects_group_ScaleMode.RATIO.toString = $estr;
kala_objects_group_ScaleMode.RATIO.__enum__ = kala_objects_group_ScaleMode;
kala_objects_group_ScaleMode.RATIO_FILL = ["RATIO_FILL",3];
kala_objects_group_ScaleMode.RATIO_FILL.toString = $estr;
kala_objects_group_ScaleMode.RATIO_FILL.__enum__ = kala_objects_group_ScaleMode;
kala_objects_group_ScaleMode.FIXED = function(hpercent,vpercent) { var $x = ["FIXED",4,hpercent,vpercent]; $x.__enum__ = kala_objects_group_ScaleMode; $x.toString = $estr; return $x; };
var kala_objects_shapes_Shape = function(fill,outline) {
	if(outline == null) {
		outline = false;
	}
	if(fill == null) {
		fill = true;
	}
	kala_objects_Object.call(this);
	if(fill) {
		this.fillOpacity = 1;
	} else {
		this.fillOpacity = 0;
	}
	if(outline) {
		this.lineOpacity = 1;
	} else {
		this.lineOpacity = 0;
	}
};
$hxClasses["kala.objects.shapes.Shape"] = kala_objects_shapes_Shape;
kala_objects_shapes_Shape.__name__ = ["kala","objects","shapes","Shape"];
kala_objects_shapes_Shape.__super__ = kala_objects_Object;
kala_objects_shapes_Shape.prototype = $extend(kala_objects_Object.prototype,{
	lineStrenght: null
	,lineColor: null
	,lineOpacity: null
	,fillColor: null
	,fillOpacity: null
	,colorBlendMode: null
	,colorAlphaBlendMode: null
	,_color: null
	,_opacity: null
	,_canvas: null
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		kala_objects_Object.prototype.reset.call(this,resetBehaviors);
		this.color = -1;
		this.lineStrenght = 1;
		this.lineColor = -1;
		this.fillColor = -1;
		this.colorBlendMode = kala_math_color_BlendMode.MULTI_2X;
		this.colorAlphaBlendMode = null;
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_Object.prototype.destroy.call(this,destroyBehaviors);
		this._canvas = null;
	}
	,isVisible: function() {
		if(kala_objects_Object.prototype.isVisible.call(this)) {
			if(!(this.fillOpacity > 0)) {
				return this.lineOpacity > 0;
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,applyDrawingData: function(data,canvas) {
		kala_objects_Object.prototype.applyDrawingData.call(this,data,canvas);
		this._color = canvas.get_g2().get_color();
		this._opacity = canvas.get_g2().get_opacity();
		this._canvas = canvas;
	}
	,applyFillDrawingData: function() {
		var tmp = this._canvas.get_g2();
		var src = this.fillColor;
		var dest = this._color;
		var colorBlendMode = this.colorBlendMode;
		var colorAlphaBlendMode = this.colorAlphaBlendMode;
		tmp.set_color(colorAlphaBlendMode == null?kala_math_color__$Color_Color_$Impl_$.blend(src,dest,colorBlendMode):kala_math_color__$Color_Color_$Impl_$.blendEx(src,dest,colorBlendMode,colorAlphaBlendMode));
		this._canvas.get_g2().set_opacity(this._opacity * this.fillOpacity);
	}
	,applyLineDrawingData: function() {
		var tmp = this._canvas.get_g2();
		var src = this.lineColor;
		var dest = this._color;
		var colorBlendMode = this.colorBlendMode;
		var colorAlphaBlendMode = this.colorAlphaBlendMode;
		tmp.set_color(colorAlphaBlendMode == null?kala_math_color__$Color_Color_$Impl_$.blend(src,dest,colorBlendMode):kala_math_color__$Color_Color_$Impl_$.blendEx(src,dest,colorBlendMode,colorAlphaBlendMode));
		this._canvas.get_g2().set_opacity(this._opacity * this.lineOpacity);
	}
	,__class__: kala_objects_shapes_Shape
});
var kala_objects_shapes_Rectangle = function(width,height,fill,outline) {
	if(outline == null) {
		outline = false;
	}
	if(fill == null) {
		fill = true;
	}
	kala_objects_shapes_Shape.call(this,fill,outline);
	this._width = width;
	this._height = height;
};
$hxClasses["kala.objects.shapes.Rectangle"] = kala_objects_shapes_Rectangle;
kala_objects_shapes_Rectangle.__name__ = ["kala","objects","shapes","Rectangle"];
kala_objects_shapes_Rectangle.__super__ = kala_objects_shapes_Shape;
kala_objects_shapes_Rectangle.prototype = $extend(kala_objects_shapes_Shape.prototype,{
	draw: function(data,canvas) {
		this.applyDrawingData(data,canvas);
		var tmp = this._canvas.get_g2();
		var src = this.fillColor;
		var dest = this._color;
		var colorBlendMode = this.colorBlendMode;
		var colorAlphaBlendMode = this.colorAlphaBlendMode;
		tmp.set_color(colorAlphaBlendMode == null?kala_math_color__$Color_Color_$Impl_$.blend(src,dest,colorBlendMode):kala_math_color__$Color_Color_$Impl_$.blendEx(src,dest,colorBlendMode,colorAlphaBlendMode));
		this._canvas.get_g2().set_opacity(this._opacity * this.fillOpacity);
		canvas.get_g2().fillRect(0,0,this._width,this._height);
		var tmp1 = this._canvas.get_g2();
		var src1 = this.lineColor;
		var dest1 = this._color;
		var colorBlendMode1 = this.colorBlendMode;
		var colorAlphaBlendMode1 = this.colorAlphaBlendMode;
		tmp1.set_color(colorAlphaBlendMode1 == null?kala_math_color__$Color_Color_$Impl_$.blend(src1,dest1,colorBlendMode1):kala_math_color__$Color_Color_$Impl_$.blendEx(src1,dest1,colorBlendMode1,colorAlphaBlendMode1));
		this._canvas.get_g2().set_opacity(this._opacity * this.lineOpacity);
		canvas.get_g2().drawRect(0,0,this._width,this._height,_$UInt_UInt_$Impl_$.toFloat(this.lineStrenght));
	}
	,set_width: function(value) {
		return this._width = value;
	}
	,set_height: function(value) {
		return this._height = value;
	}
	,__class__: kala_objects_shapes_Rectangle
});
var kala_objects_sprite_BasicButtonSprite = function(image,frameX,frameY,frameWidth,frameHeight,animated) {
	if(animated == null) {
		animated = false;
	}
	kala_objects_sprite_Sprite.call(this,image,frameX,frameY,frameWidth,frameHeight,animated);
	this.collider = new kala_behaviors_collision_basic_Collider(this);
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onPush = handle;
	var handle1 = new kala_CallbackHandle();
	this._cbHandles.push(handle1);
	this.onRelease = handle1;
	var handle2 = new kala_CallbackHandle();
	this._cbHandles.push(handle2);
	this.onOver = handle2;
	var handle3 = new kala_CallbackHandle();
	this._cbHandles.push(handle3);
	this.onOut = handle3;
};
$hxClasses["kala.objects.sprite.BasicButtonSprite"] = kala_objects_sprite_BasicButtonSprite;
kala_objects_sprite_BasicButtonSprite.__name__ = ["kala","objects","sprite","BasicButtonSprite"];
kala_objects_sprite_BasicButtonSprite.__super__ = kala_objects_sprite_Sprite;
kala_objects_sprite_BasicButtonSprite.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	collider: null
	,hovered: null
	,onPush: null
	,onRelease: null
	,onOver: null
	,onOut: null
	,view: null
	,disableMouseOnMobile: null
	,_mouseHovered: null
	,_touched: null
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		kala_objects_sprite_Sprite.prototype.reset.call(this,resetBehaviors);
		this.hovered = this._mouseHovered = this._touched = false;
		this.disableMouseOnMobile = true;
		this.view = null;
		if(this.collider != null) {
			this.collider.reset();
		}
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_sprite_Sprite.prototype.destroy.call(this,destroyBehaviors);
		this.collider = null;
		this.view = null;
		this.onPush = null;
		this.onRelease = null;
		this.onOver = null;
		this.onOut = null;
	}
	,update: function(elapsed) {
		if(!this.disableMouseOnMobile || !kha_SystemImpl.mobile) {
			this.updateMouse();
		}
		this.updateTouch();
		if(this.hovered && !this._touched && !this._mouseHovered) {
			this.hovered = false;
			var tmp = HxOverrides.iter(this.onOut._callbacks);
			while(tmp.hasNext()) tmp.next().cbFunction(this);
		}
	}
	,addCircleMask: function(x,y,radius) {
		var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
		circle.reset();
		var _this = circle.position;
		_this.x = x;
		_this.y = y;
		circle.radius = radius;
		this.collider._shapes.push(circle);
		return circle;
	}
	,addRectMask: function(x,y,width,height) {
		var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
		rect.reset();
		var _this = rect.position;
		_this.x = x;
		_this.y = y;
		rect.width = width;
		rect.height = height;
		this.collider._shapes.push(rect);
		return rect;
	}
	,addObjectRectMask: function() {
		var _this = this.collider;
		var width = _this.object.get_width();
		var height = _this.object.get_height();
		var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
		rect.reset();
		var _this1 = rect.position;
		_this1.x = 0;
		_this1.y = 0;
		rect.width = width;
		rect.height = height;
		_this._shapes.push(rect);
		var _this2 = rect.position;
		var x = (_this.object.get_width() - rect.width) / 2;
		var y = (_this.object.get_height() - rect.height) / 2;
		_this2.x = x;
		_this2.y = y;
		return rect;
	}
	,updateMouse: function() {
		var p;
		if(this.view == null) {
			p = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
		} else {
			var this1 = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
			var _this = this.view._cachedDrawingMatrix;
			var c00 = _this._11 * _this._22 - _this._21 * _this._12;
			var c01 = _this._10 * _this._22 - _this._20 * _this._12;
			var c02 = _this._10 * _this._21 - _this._20 * _this._11;
			var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var c10 = _this._01 * _this._22 - _this._21 * _this._02;
			var c11 = _this._00 * _this._22 - _this._20 * _this._02;
			var c12 = _this._00 * _this._21 - _this._20 * _this._01;
			var c20 = _this._01 * _this._12 - _this._11 * _this._02;
			var c21 = _this._00 * _this._12 - _this._10 * _this._02;
			var c22 = _this._00 * _this._11 - _this._10 * _this._01;
			var invdet = 1.0 / det;
			var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
			var xx = this1.x;
			var yy = this1.y;
			this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
			this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
			p = this1;
		}
		if(this.collider.testPoint(p.x,p.y)) {
			if(!this.hovered) {
				this.hovered = true;
				var tmp = HxOverrides.iter(this.onOver._callbacks);
				while(tmp.hasNext()) tmp.next().cbFunction(this);
			}
			if(kala_input_Mouse.LEFT.duration == 0) {
				var tmp1 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp1.hasNext()) tmp1.next().cbFunction(this,1);
			} else if(kala_input_Mouse.LEFT.justReleased) {
				var tmp2 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp2.hasNext()) tmp2.next().cbFunction(this,1);
			}
			if(kala_input_Mouse.MIDDLE.duration == 0) {
				var tmp3 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp3.hasNext()) tmp3.next().cbFunction(this,2);
			} else if(kala_input_Mouse.MIDDLE.justReleased) {
				var tmp4 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp4.hasNext()) tmp4.next().cbFunction(this,2);
			}
			if(kala_input_Mouse.RIGHT.duration == 0) {
				var tmp5 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp5.hasNext()) tmp5.next().cbFunction(this,3);
			} else if(kala_input_Mouse.RIGHT.justReleased) {
				var tmp6 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp6.hasNext()) tmp6.next().cbFunction(this,3);
			}
			this._mouseHovered = true;
		} else {
			this._mouseHovered = false;
		}
	}
	,updateTouch: function() {
		this._touched = false;
		var p;
		var tmp = kala_input_Touch.touches.iterator();
		while(tmp.hasNext()) {
			var touch = tmp.next();
			if(this.view == null) {
				p = new kha_math_FastVector2(touch.x,touch.y);
			} else {
				var this1 = new kha_math_FastVector2(touch.x,touch.y);
				var _this = this.view._cachedDrawingMatrix;
				var c00 = _this._11 * _this._22 - _this._21 * _this._12;
				var c01 = _this._10 * _this._22 - _this._20 * _this._12;
				var c02 = _this._10 * _this._21 - _this._20 * _this._11;
				var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
				if(Math.abs(det) < 0.000001) {
					throw new js__$Boot_HaxeError("determinant is too small");
				}
				var c10 = _this._01 * _this._22 - _this._21 * _this._02;
				var c11 = _this._00 * _this._22 - _this._20 * _this._02;
				var c12 = _this._00 * _this._21 - _this._20 * _this._01;
				var c20 = _this._01 * _this._12 - _this._11 * _this._02;
				var c21 = _this._00 * _this._12 - _this._10 * _this._02;
				var c22 = _this._00 * _this._11 - _this._10 * _this._01;
				var invdet = 1.0 / det;
				var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
				var xx = this1.x;
				var yy = this1.y;
				this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
				this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
				p = this1;
			}
			if(this.collider.testPoint(p.x,p.y)) {
				if(!this.hovered) {
					this.hovered = true;
					var tmp1 = HxOverrides.iter(this.onOver._callbacks);
					while(tmp1.hasNext()) tmp1.next().cbFunction(this);
				}
				if(touch.duration == 0) {
					var tmp2 = HxOverrides.iter(this.onPush._callbacks);
					while(tmp2.hasNext()) tmp2.next().cbFunction(this,touch.id);
				} else if(touch.justEnded) {
					var tmp3 = HxOverrides.iter(this.onRelease._callbacks);
					while(tmp3.hasNext()) tmp3.next().cbFunction(this,touch.id);
				}
				this._touched = true;
			}
		}
	}
	,get_pushed: function() {
		if(!this._touched) {
			return this._mouseHovered;
		} else {
			return true;
		}
	}
	,__class__: kala_objects_sprite_BasicButtonSprite
	,__properties__: $extend(kala_objects_sprite_Sprite.prototype.__properties__,{get_pushed:"get_pushed"})
});
var kala_objects_sprite_ButtonSprite = function(image,frameX,frameY,frameWidth,frameHeight,animated) {
	if(animated == null) {
		animated = false;
	}
	kala_objects_sprite_Sprite.call(this,image,frameX,frameY,frameWidth,frameHeight,animated);
	this.collider = new kala_behaviors_collision_transformable_Collider(this);
	var handle = new kala_CallbackHandle();
	this._cbHandles.push(handle);
	this.onPush = handle;
	var handle1 = new kala_CallbackHandle();
	this._cbHandles.push(handle1);
	this.onRelease = handle1;
	var handle2 = new kala_CallbackHandle();
	this._cbHandles.push(handle2);
	this.onOver = handle2;
	var handle3 = new kala_CallbackHandle();
	this._cbHandles.push(handle3);
	this.onOut = handle3;
};
$hxClasses["kala.objects.sprite.ButtonSprite"] = kala_objects_sprite_ButtonSprite;
kala_objects_sprite_ButtonSprite.__name__ = ["kala","objects","sprite","ButtonSprite"];
kala_objects_sprite_ButtonSprite.__super__ = kala_objects_sprite_Sprite;
kala_objects_sprite_ButtonSprite.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	collider: null
	,hovered: null
	,onPush: null
	,onRelease: null
	,onOver: null
	,onOut: null
	,view: null
	,disableMouseOnMobile: null
	,_mouseHovered: null
	,_touched: null
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		kala_objects_sprite_Sprite.prototype.reset.call(this,resetBehaviors);
		this.hovered = this._mouseHovered = this._touched = false;
		this.disableMouseOnMobile = true;
		this.view = null;
		if(this.collider != null) {
			this.collider.reset();
		}
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_sprite_Sprite.prototype.destroy.call(this,destroyBehaviors);
		this.collider = null;
		this.view = null;
		this.onPush = null;
		this.onRelease = null;
		this.onOver = null;
		this.onOut = null;
	}
	,update: function(elapsed) {
		if(!this.disableMouseOnMobile || !kha_SystemImpl.mobile) {
			this.updateMouse();
		}
		this.updateTouch();
		if(this.hovered && !this._touched && !this._mouseHovered) {
			this.hovered = false;
			var tmp = HxOverrides.iter(this.onOut._callbacks);
			while(tmp.hasNext()) tmp.next().cbFunction(this);
		}
	}
	,addCircleMask: function(x,y,radius) {
		return this.collider.addCircle(x,y,radius);
	}
	,addRectMask: function(x,y,width,height) {
		return this.collider.addRect(x,y,width,height);
	}
	,addPolygonMask: function(x,y,vertices,concave) {
		if(concave == null) {
			concave = false;
		}
		return this.collider.addPolygon(x,y,vertices,concave);
	}
	,addObjectRectMask: function() {
		var _this = this.collider;
		return _this.addRect(0,0,_this.object.get_width(),_this.object.get_height());
	}
	,addShapeMask: function(shape) {
		this.collider._shapes.push(shape);
		return shape;
	}
	,updateMouse: function() {
		var p;
		if(this.view == null) {
			p = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
		} else {
			var this1 = new kha_math_FastVector2(kala_input_Mouse.x,kala_input_Mouse.y);
			var _this = this.view._cachedDrawingMatrix;
			var c00 = _this._11 * _this._22 - _this._21 * _this._12;
			var c01 = _this._10 * _this._22 - _this._20 * _this._12;
			var c02 = _this._10 * _this._21 - _this._20 * _this._11;
			var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
			if(Math.abs(det) < 0.000001) {
				throw new js__$Boot_HaxeError("determinant is too small");
			}
			var c10 = _this._01 * _this._22 - _this._21 * _this._02;
			var c11 = _this._00 * _this._22 - _this._20 * _this._02;
			var c12 = _this._00 * _this._21 - _this._20 * _this._01;
			var c20 = _this._01 * _this._12 - _this._11 * _this._02;
			var c21 = _this._00 * _this._12 - _this._10 * _this._02;
			var c22 = _this._00 * _this._11 - _this._10 * _this._01;
			var invdet = 1.0 / det;
			var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
			var xx = this1.x;
			var yy = this1.y;
			this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
			this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
			p = this1;
		}
		if(this.collider.testPoint(p.x,p.y)) {
			if(!this.hovered) {
				this.hovered = true;
				var tmp = HxOverrides.iter(this.onOver._callbacks);
				while(tmp.hasNext()) tmp.next().cbFunction(this);
			}
			if(kala_input_Mouse.LEFT.duration == 0) {
				var tmp1 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp1.hasNext()) tmp1.next().cbFunction(this,1);
			} else if(kala_input_Mouse.LEFT.justReleased) {
				var tmp2 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp2.hasNext()) tmp2.next().cbFunction(this,1);
			}
			if(kala_input_Mouse.MIDDLE.duration == 0) {
				var tmp3 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp3.hasNext()) tmp3.next().cbFunction(this,2);
			} else if(kala_input_Mouse.MIDDLE.justReleased) {
				var tmp4 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp4.hasNext()) tmp4.next().cbFunction(this,2);
			}
			if(kala_input_Mouse.RIGHT.duration == 0) {
				var tmp5 = HxOverrides.iter(this.onPush._callbacks);
				while(tmp5.hasNext()) tmp5.next().cbFunction(this,3);
			} else if(kala_input_Mouse.RIGHT.justReleased) {
				var tmp6 = HxOverrides.iter(this.onRelease._callbacks);
				while(tmp6.hasNext()) tmp6.next().cbFunction(this,3);
			}
			this._mouseHovered = true;
		} else {
			this._mouseHovered = false;
		}
	}
	,updateTouch: function() {
		this._touched = false;
		var p;
		var tmp = kala_input_Touch.touches.iterator();
		while(tmp.hasNext()) {
			var touch = tmp.next();
			if(this.view == null) {
				p = new kha_math_FastVector2(touch.x,touch.y);
			} else {
				var this1 = new kha_math_FastVector2(touch.x,touch.y);
				var _this = this.view._cachedDrawingMatrix;
				var c00 = _this._11 * _this._22 - _this._21 * _this._12;
				var c01 = _this._10 * _this._22 - _this._20 * _this._12;
				var c02 = _this._10 * _this._21 - _this._20 * _this._11;
				var det = _this._00 * c00 - _this._01 * c01 + _this._02 * c02;
				if(Math.abs(det) < 0.000001) {
					throw new js__$Boot_HaxeError("determinant is too small");
				}
				var c10 = _this._01 * _this._22 - _this._21 * _this._02;
				var c11 = _this._00 * _this._22 - _this._20 * _this._02;
				var c12 = _this._00 * _this._21 - _this._20 * _this._01;
				var c20 = _this._01 * _this._12 - _this._11 * _this._02;
				var c21 = _this._00 * _this._12 - _this._10 * _this._02;
				var c22 = _this._00 * _this._11 - _this._10 * _this._01;
				var invdet = 1.0 / det;
				var matrix = new kha_math_FastMatrix3(c00 * invdet,-c01 * invdet,c02 * invdet,-c10 * invdet,c11 * invdet,-c12 * invdet,c20 * invdet,-c21 * invdet,c22 * invdet);
				var xx = this1.x;
				var yy = this1.y;
				this1.x = xx * matrix._00 + yy * matrix._10 + matrix._20;
				this1.y = xx * matrix._01 + yy * matrix._11 + matrix._21;
				p = this1;
			}
			if(this.collider.testPoint(p.x,p.y)) {
				if(!this.hovered) {
					this.hovered = true;
					var tmp1 = HxOverrides.iter(this.onOver._callbacks);
					while(tmp1.hasNext()) tmp1.next().cbFunction(this);
				}
				if(touch.duration == 0) {
					var tmp2 = HxOverrides.iter(this.onPush._callbacks);
					while(tmp2.hasNext()) tmp2.next().cbFunction(this,touch.id);
				} else if(touch.justEnded) {
					var tmp3 = HxOverrides.iter(this.onRelease._callbacks);
					while(tmp3.hasNext()) tmp3.next().cbFunction(this,touch.id);
				}
				this._touched = true;
			}
		}
	}
	,get_pushed: function() {
		if(!this._touched) {
			return this._mouseHovered;
		} else {
			return true;
		}
	}
	,__class__: kala_objects_sprite_ButtonSprite
	,__properties__: $extend(kala_objects_sprite_Sprite.prototype.__properties__,{get_pushed:"get_pushed"})
});
var kala_objects_sprite_SpriteData = function(key,image,frames,animDelay) {
	this.key = key;
	this.image = image;
	this.frames = frames;
	this.animDelay = animDelay;
};
$hxClasses["kala.objects.sprite.SpriteData"] = kala_objects_sprite_SpriteData;
kala_objects_sprite_SpriteData.__name__ = ["kala","objects","sprite","SpriteData"];
kala_objects_sprite_SpriteData.prototype = {
	key: null
	,image: null
	,frames: null
	,animDelay: null
	,__class__: kala_objects_sprite_SpriteData
};
var kala_objects_text_BitmapFont = function() {
};
$hxClasses["kala.objects.text.BitmapFont"] = kala_objects_text_BitmapFont;
kala_objects_text_BitmapFont.__name__ = ["kala","objects","text","BitmapFont"];
kala_objects_text_BitmapFont.prototype = {
	__class__: kala_objects_text_BitmapFont
};
var kala_objects_text__$Font_Font_$Impl_$ = {};
$hxClasses["kala.objects.text._Font.Font_Impl_"] = kala_objects_text__$Font_Font_$Impl_$;
kala_objects_text__$Font_Font_$Impl_$.__name__ = ["kala","objects","text","_Font","Font_Impl_"];
kala_objects_text__$Font_Font_$Impl_$.getWidth = function(this1,str,size,bold) {
	if(js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)) {
		return 0;
	} else {
		return this1.width(size,str);
	}
};
kala_objects_text__$Font_Font_$Impl_$.getHeight = function(this1,size) {
	if(js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)) {
		return 0;
	} else {
		return this1.height(size);
	}
};
kala_objects_text__$Font_Font_$Impl_$.getBaseline = function(this1,size) {
	if(js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)) {
		return 0;
	} else {
		return this1.baseline(size);
	}
};
kala_objects_text__$Font_Font_$Impl_$.isBitmapFont = function(this1) {
	return js_Boot.__instanceof(this1,kala_objects_text_BitmapFont);
};
var kala_objects_text_Text = function(text,font,size,width,align) {
	if(width == null) {
		width = 0;
	}
	if(size == null) {
		size = 24;
	}
	this._lines = [];
	this.colorAlphaBlendMode = null;
	this.colorBlendMode = kala_math_color_BlendMode.ADD;
	this.textColor = -1;
	this.bgColor = -1;
	this.borderColor = -1;
	this.padding = new kha_math_FastVector2(0,0);
	kala_objects_text_BasicText.call(this,text,font,size);
	this.set_width(_$UInt_UInt_$Impl_$.toFloat(width));
	this.align = align == null?kala_objects_text_TextAlign.LEFT:align;
	if(text != null) {
		this.refreshText();
	}
};
$hxClasses["kala.objects.text.Text"] = kala_objects_text_Text;
kala_objects_text_Text.__name__ = ["kala","objects","text","Text"];
kala_objects_text_Text.__super__ = kala_objects_text_BasicText;
kala_objects_text_Text.prototype = $extend(kala_objects_text_BasicText.prototype,{
	_htmlText: null
	,lineSpacing: null
	,fixedLineSpacing: null
	,align: null
	,contentWidth: null
	,wrapByWord: null
	,eolSymbol: null
	,padding: null
	,borderSize: null
	,borderColor: null
	,borderOpacity: null
	,bgColor: null
	,bgOpacity: null
	,textColor: null
	,textOpacity: null
	,colorBlendMode: null
	,colorAlphaBlendMode: null
	,_dirty: null
	,_lines: null
	,reset: function(resetBehaviors) {
		if(resetBehaviors == null) {
			resetBehaviors = false;
		}
		kala_objects_text_BasicText.prototype.reset.call(this,resetBehaviors);
		this._htmlText = null;
		this.fixedLineSpacing = false;
		this.align = kala_objects_text_TextAlign.LEFT;
		this.set_width(0);
		this.set_wrapByWord(true);
		this.set_eolSymbol("\n");
		var this1 = this.padding;
		this1.x = 0;
		this1.y = 0;
		this.borderSize = 1;
		this.borderColor = -1;
		this.borderOpacity = 0;
		this.bgColor = -1;
		this.bgOpacity = 0;
		this.textColor = -1;
		this.textOpacity = 1;
		this.color = 0;
		this.colorBlendMode = kala_math_color_BlendMode.ADD;
		this.colorAlphaBlendMode = null;
	}
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_text_BasicText.prototype.destroy.call(this,destroyBehaviors);
		this.padding = null;
		this._lines = null;
	}
	,draw: function(data,canvas) {
		if(this._dirty) {
			if(this._htmlText == null) {
				this.refreshText();
			} else {
				this.refreshHTMLText();
			}
			this._dirty = false;
		}
		data.color = null;
		this.applyDrawingData(data,canvas);
		var g2 = canvas.get_g2();
		var color = g2.get_color();
		this.opacity = g2.get_opacity();
		if(this.bgOpacity > 0) {
			var src = this.bgColor;
			var colorBlendMode = this.colorBlendMode;
			var colorAlphaBlendMode = this.colorAlphaBlendMode;
			g2.set_color(colorAlphaBlendMode == null?kala_math_color__$Color_Color_$Impl_$.blend(src,color,colorBlendMode):kala_math_color__$Color_Color_$Impl_$.blendEx(src,color,colorBlendMode,colorAlphaBlendMode));
			g2.set_opacity(this.opacity * this.bgOpacity);
			g2.fillRect(0,0,this.get_width(),this.get_height());
		}
		if(this.borderOpacity > 0 || _$UInt_UInt_$Impl_$.gt(this.borderSize,0)) {
			var src1 = this.borderColor;
			var colorBlendMode1 = this.colorBlendMode;
			var colorAlphaBlendMode1 = this.colorAlphaBlendMode;
			g2.set_color(colorAlphaBlendMode1 == null?kala_math_color__$Color_Color_$Impl_$.blend(src1,color,colorBlendMode1):kala_math_color__$Color_Color_$Impl_$.blendEx(src1,color,colorBlendMode1,colorAlphaBlendMode1));
			g2.set_opacity(this.opacity * this.borderOpacity);
			g2.drawRect(0,0,this.get_width(),this.get_height(),_$UInt_UInt_$Impl_$.toFloat(this.borderSize));
		}
		var src2 = this.textColor;
		var colorBlendMode2 = this.colorBlendMode;
		var colorAlphaBlendMode2 = this.colorAlphaBlendMode;
		var defaultTextColor = colorAlphaBlendMode2 == null?kala_math_color__$Color_Color_$Impl_$.blend(src2,color,colorBlendMode2):kala_math_color__$Color_Color_$Impl_$.blendEx(src2,color,colorBlendMode2,colorAlphaBlendMode2);
		g2.set_opacity(this.opacity * this.textOpacity);
		if(this.align[1] == 3) {
			var contentWidth = this.get_contentWidth();
			var line;
			var lineWidth;
			var words;
			var tx;
			var ty = this.padding.y;
			var spaceSize;
			var _g1 = 0;
			var _g = this._lines.length;
			while(_g1 < _g) {
				line = this._lines[_g1++];
				tx = this.padding.x;
				words = [];
				var tmp = HxOverrides.iter(line._texts);
				while(tmp.hasNext()) words = words.concat(kala_util_StringUtil.words(tmp.next().text,this.eolSymbol,false,false));
				var w = 0;
				var _g2 = 0;
				var _g11 = line._texts;
				while(_g2 < _g11.length) {
					var text = _g11[_g2];
					++_g2;
					var str = StringTools.replace(text.text," ","");
					var this1 = text.font;
					var size = text.size;
					w += js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)?0:this1.width(size,str);
				}
				lineWidth = w;
				if(lineWidth < contentWidth * 0.8) {
					var tmp1 = HxOverrides.iter(line._texts);
					while(tmp1.hasNext()) {
						var textData = tmp1.next();
						g2.set_font(textData.font);
						g2.set_fontSize(textData.size);
						var tmp2;
						if(textData.color == null) {
							tmp2 = defaultTextColor;
						} else {
							var src3 = textData.color;
							var colorBlendMode3 = this.colorBlendMode;
							var colorAlphaBlendMode3 = this.colorAlphaBlendMode;
							if(colorAlphaBlendMode3 == null) {
								tmp2 = kala_math_color__$Color_Color_$Impl_$.blend(src3,color,colorBlendMode3);
							} else {
								tmp2 = kala_math_color__$Color_Color_$Impl_$.blendEx(src3,color,colorBlendMode3,colorAlphaBlendMode3);
							}
						}
						g2.set_color(tmp2);
						g2.drawString(textData.text,tx,ty);
						var str1 = textData.text;
						var this2 = textData.font;
						var size1 = textData.size;
						tx += js_Boot.__instanceof(this2,kala_objects_text_BitmapFont)?0:this2.width(size1,str1);
					}
				} else {
					spaceSize = (contentWidth - lineWidth) / (words.length - 1);
					if(this._htmlText == null) {
						var _g21 = 0;
						while(_g21 < words.length) {
							var word = words[_g21];
							++_g21;
							g2.set_font(this.font);
							g2.set_fontSize(this.size);
							g2.set_color(defaultTextColor);
							g2.drawString(word,tx,ty);
							var this3 = this.font;
							var size2 = this.size;
							tx += (js_Boot.__instanceof(this3,kala_objects_text_BitmapFont)?0:this3.width(size2,word)) + spaceSize;
						}
					} else {
						var tmp3 = HxOverrides.iter(line._texts);
						while(tmp3.hasNext()) {
							var textData1 = tmp3.next();
							var _g22 = 0;
							var _g3 = kala_util_StringUtil.words(textData1.text,this.eolSymbol,false,false);
							while(_g22 < _g3.length) {
								var word1 = _g3[_g22];
								++_g22;
								g2.set_font(textData1.font);
								g2.set_fontSize(textData1.size);
								var tmp4;
								if(textData1.color == null) {
									tmp4 = defaultTextColor;
								} else {
									var src4 = textData1.color;
									var colorBlendMode4 = this.colorBlendMode;
									var colorAlphaBlendMode4 = this.colorAlphaBlendMode;
									if(colorAlphaBlendMode4 == null) {
										tmp4 = kala_math_color__$Color_Color_$Impl_$.blend(src4,color,colorBlendMode4);
									} else {
										tmp4 = kala_math_color__$Color_Color_$Impl_$.blendEx(src4,color,colorBlendMode4,colorAlphaBlendMode4);
									}
								}
								g2.set_color(tmp4);
								var this4 = textData1.font;
								var size3 = textData1.size;
								tx += (js_Boot.__instanceof(this4,kala_objects_text_BitmapFont)?0:this4.width(size3,word1)) + spaceSize;
							}
						}
					}
				}
				ty += line.height + this.lineSpacing;
			}
		} else {
			var contentWidth1 = this.get_contentWidth();
			var tx1 = 0;
			var ty1 = this.padding.y;
			var _g4 = 0;
			var _g12 = this._lines;
			while(_g4 < _g12.length) {
				var line1 = _g12[_g4];
				++_g4;
				if(Type.enumEq(this.align,kala_objects_text_TextAlign.LEFT)) {
					tx1 = 0;
				} else if(Type.enumEq(this.align,kala_objects_text_TextAlign.RIGHT)) {
					tx1 = contentWidth1 - line1.width;
				} else {
					tx1 = (contentWidth1 - line1.width) / 2;
				}
				tx1 += this.padding.x;
				var tmp5 = HxOverrides.iter(line1._texts);
				while(tmp5.hasNext()) {
					var textData2 = tmp5.next();
					g2.set_font(textData2.font);
					g2.set_fontSize(textData2.size);
					var tmp6;
					if(textData2.color == null) {
						tmp6 = defaultTextColor;
					} else {
						var src5 = textData2.color;
						var colorBlendMode5 = this.colorBlendMode;
						var colorAlphaBlendMode5 = this.colorAlphaBlendMode;
						if(colorAlphaBlendMode5 == null) {
							tmp6 = kala_math_color__$Color_Color_$Impl_$.blend(src5,color,colorBlendMode5);
						} else {
							tmp6 = kala_math_color__$Color_Color_$Impl_$.blendEx(src5,color,colorBlendMode5,colorAlphaBlendMode5);
						}
					}
					g2.set_color(tmp6);
					g2.drawString(textData2.text,tx1,ty1);
					var str2 = textData2.text;
					var this5 = textData2.font;
					var size4 = textData2.size;
					tx1 += js_Boot.__instanceof(this5,kala_objects_text_BitmapFont)?0:this5.width(size4,str2);
				}
				ty1 += line1.height + this.lineSpacing;
			}
		}
	}
	,refreshText: function() {
		this._lines.splice(0,this._lines.length);
		var array = this.wrapByWord?kala_util_StringUtil.words(this.get_text(),this.eolSymbol,true,true):kala_util_StringUtil.chars(this.get_text(),this.eolSymbol);
		this._height = 0;
		var lineString = "";
		var _g = 0;
		while(_g < array.length) {
			var s = array[_g];
			++_g;
			var tmp;
			if(s != this.eolSymbol) {
				if(!(this._width == 0 || lineString == "")) {
					var this1 = this.font;
					var size = this.size;
					tmp = (js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)?0:this1.width(size,lineString + s)) <= this.get_contentWidth();
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				lineString += s;
			} else {
				var _this = new kala_objects_text_LineData();
				_this._texts.push(new kala_objects_text_TextData(lineString,this.font,this.size,this.bold,this.italic,this.underlined,null));
				var w = 0;
				var _g1 = 0;
				var _g11 = _this._texts;
				while(_g1 < _g11.length) {
					var text = _g11[_g1];
					++_g1;
					var str = text.text;
					var this2 = text.font;
					var size1 = text.size;
					w += js_Boot.__instanceof(this2,kala_objects_text_BitmapFont)?0:this2.width(size1,str);
				}
				_this.width = w;
				_this.height = 0;
				var textHeight = 0;
				var _g2 = 0;
				var _g12 = _this._texts;
				while(_g2 < _g12.length) {
					var text1 = _g12[_g2];
					++_g2;
					var this3 = text1.font;
					var size2 = text1.size;
					if(js_Boot.__instanceof(this3,kala_objects_text_BitmapFont)) {
						textHeight = 0;
					} else {
						textHeight = this3.height(size2);
					}
					if(textHeight > _this.height) {
						_this.height = textHeight;
					}
				}
				this._lines.push(_this);
				this._height += _this.height;
				if(s == this.eolSymbol || StringTools.isSpace(s,0)) {
					lineString = "";
				} else {
					lineString = s;
				}
			}
		}
		var _this1 = new kala_objects_text_LineData();
		_this1._texts.push(new kala_objects_text_TextData(lineString,this.font,this.size,this.bold,this.italic,this.underlined,this.color));
		var w1 = 0;
		var _g3 = 0;
		var _g13 = _this1._texts;
		while(_g3 < _g13.length) {
			var text2 = _g13[_g3];
			++_g3;
			var str1 = text2.text;
			var this4 = text2.font;
			var size3 = text2.size;
			w1 += js_Boot.__instanceof(this4,kala_objects_text_BitmapFont)?0:this4.width(size3,str1);
		}
		_this1.width = w1;
		_this1.height = 0;
		var textHeight1 = 0;
		var _g4 = 0;
		var _g14 = _this1._texts;
		while(_g4 < _g14.length) {
			var text3 = _g14[_g4];
			++_g4;
			var this5 = text3.font;
			var size4 = text3.size;
			if(js_Boot.__instanceof(this5,kala_objects_text_BitmapFont)) {
				textHeight1 = 0;
			} else {
				textHeight1 = this5.height(size4);
			}
			if(textHeight1 > _this1.height) {
				_this1.height = textHeight1;
			}
		}
		this._lines.push(_this1);
		this._height += _this1.height;
	}
	,refreshHTMLText: function() {
	}
	,refreshLineSpacing: function() {
		if(this.fixedLineSpacing || this.font == null) {
			return;
		}
		var this1 = this.font;
		var size = this.size;
		this.lineSpacing = (js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)?0:this1.height(size)) * 0.15 | 0;
	}
	,get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		this._dirty = true;
		return this._width = value;
	}
	,get_height: function() {
		return this._height + this.lineSpacing * (this._lines.length - 1) + this.padding.y * 2;
	}
	,set_text: function(value) {
		var prvText = this._text;
		this._dirty = true;
		this._htmlText = null;
		this._text = value;
		var tmp = HxOverrides.iter(this.onTextChange._callbacks);
		while(tmp.hasNext()) tmp.next().cbFunction(this,prvText);
		return value;
	}
	,set_font: function(value) {
		this._dirty = true;
		kala_objects_text_BasicText.prototype.set_font.call(this,value);
		this.refreshLineSpacing();
		return this.font;
	}
	,set_size: function(value) {
		this._dirty = true;
		this.size = value;
		this.refreshLineSpacing();
		return value;
	}
	,set_bold: function(value) {
		this._dirty = true;
		return this.bold = value;
	}
	,get_contentWidth: function() {
		return this.get_width() - this.padding.x * 2;
	}
	,set_eolSymbol: function(value) {
		this._dirty = true;
		return this.eolSymbol = value;
	}
	,set_wrapByWord: function(value) {
		this._dirty = true;
		return this.wrapByWord = value;
	}
	,get_htmlText: function() {
		if(this._htmlText == null) {
			return this._text;
		} else {
			return this._htmlText;
		}
	}
	,set_htmlText: function(value) {
		this._dirty = true;
		return this._htmlText = value;
	}
	,__class__: kala_objects_text_Text
	,__properties__: $extend(kala_objects_text_BasicText.prototype.__properties__,{set_eolSymbol:"set_eolSymbol",set_wrapByWord:"set_wrapByWord",get_contentWidth:"get_contentWidth",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var kala_objects_text_TextData = function(text,font,size,bold,italic,underlined,color,url) {
	this.text = text;
	this.font = font;
	this.size = size;
	this.bold = bold;
	this.italic = italic;
	this.underlined = underlined;
	this.url = url;
};
$hxClasses["kala.objects.text.TextData"] = kala_objects_text_TextData;
kala_objects_text_TextData.__name__ = ["kala","objects","text","TextData"];
kala_objects_text_TextData.prototype = {
	text: null
	,font: null
	,size: null
	,bold: null
	,italic: null
	,underlined: null
	,color: null
	,url: null
	,__class__: kala_objects_text_TextData
};
var kala_objects_text_LineData = function() {
	this._texts = [];
};
$hxClasses["kala.objects.text.LineData"] = kala_objects_text_LineData;
kala_objects_text_LineData.__name__ = ["kala","objects","text","LineData"];
kala_objects_text_LineData.prototype = {
	_texts: null
	,width: null
	,height: null
	,iterator: function() {
		return HxOverrides.iter(this._texts);
	}
	,add: function(textData) {
		this._texts.push(textData);
		return this;
	}
	,getWidth: function(excludeSpace) {
		if(excludeSpace == null) {
			excludeSpace = false;
		}
		var w = 0;
		var _g = 0;
		var _g1 = this._texts;
		while(_g < _g1.length) {
			var text = _g1[_g];
			++_g;
			var str = excludeSpace?StringTools.replace(text.text," ",""):text.text;
			var this1 = text.font;
			var size = text.size;
			w += js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)?0:this1.width(size,str);
		}
		return w;
	}
	,refreshWidth: function(excludeSpace) {
		if(excludeSpace == null) {
			excludeSpace = false;
		}
		var w = 0;
		var _g = 0;
		var _g1 = this._texts;
		while(_g < _g1.length) {
			var text = _g1[_g];
			++_g;
			var str = excludeSpace?StringTools.replace(text.text," ",""):text.text;
			var this1 = text.font;
			var size = text.size;
			w += js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)?0:this1.width(size,str);
		}
		return this.width = w;
	}
	,refreshHeight: function() {
		this.height = 0;
		var textHeight = 0;
		var _g = 0;
		var _g1 = this._texts;
		while(_g < _g1.length) {
			var text = _g1[_g];
			++_g;
			var this1 = text.font;
			var size = text.size;
			if(js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)) {
				textHeight = 0;
			} else {
				textHeight = this1.height(size);
			}
			if(textHeight > this.height) {
				this.height = textHeight;
			}
		}
		return this.height;
	}
	,refreshSize: function() {
		var w = 0;
		var _g = 0;
		var _g1 = this._texts;
		while(_g < _g1.length) {
			var text = _g1[_g];
			++_g;
			var str = text.text;
			var this1 = text.font;
			var size = text.size;
			w += js_Boot.__instanceof(this1,kala_objects_text_BitmapFont)?0:this1.width(size,str);
		}
		this.width = w;
		this.height = 0;
		var textHeight = 0;
		var _g2 = 0;
		var _g11 = this._texts;
		while(_g2 < _g11.length) {
			var text1 = _g11[_g2];
			++_g2;
			var this2 = text1.font;
			var size1 = text1.size;
			if(js_Boot.__instanceof(this2,kala_objects_text_BitmapFont)) {
				textHeight = 0;
			} else {
				textHeight = this2.height(size1);
			}
			if(textHeight > this.height) {
				this.height = textHeight;
			}
		}
		return this;
	}
	,__class__: kala_objects_text_LineData
};
var kala_objects_text_TextAlign = $hxClasses["kala.objects.text.TextAlign"] = { __ename__ : ["kala","objects","text","TextAlign"], __constructs__ : ["LEFT","RIGHT","CENTER","JUSTIFY"] };
kala_objects_text_TextAlign.LEFT = ["LEFT",0];
kala_objects_text_TextAlign.LEFT.toString = $estr;
kala_objects_text_TextAlign.LEFT.__enum__ = kala_objects_text_TextAlign;
kala_objects_text_TextAlign.RIGHT = ["RIGHT",1];
kala_objects_text_TextAlign.RIGHT.toString = $estr;
kala_objects_text_TextAlign.RIGHT.__enum__ = kala_objects_text_TextAlign;
kala_objects_text_TextAlign.CENTER = ["CENTER",2];
kala_objects_text_TextAlign.CENTER.toString = $estr;
kala_objects_text_TextAlign.CENTER.__enum__ = kala_objects_text_TextAlign;
kala_objects_text_TextAlign.JUSTIFY = ["JUSTIFY",3];
kala_objects_text_TextAlign.JUSTIFY.toString = $estr;
kala_objects_text_TextAlign.JUSTIFY.__enum__ = kala_objects_text_TextAlign;
var kala_util_StringUtil = function() { };
$hxClasses["kala.util.StringUtil"] = kala_util_StringUtil;
kala_util_StringUtil.__name__ = ["kala","util","StringUtil"];
kala_util_StringUtil.chars = function(string,eolSymbol) {
	if(eolSymbol == null) {
		eolSymbol = "\n";
	}
	var lines = string.split(eolSymbol);
	var array = [];
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		var _g2 = 0;
		var _g1 = line.length;
		while(_g2 < _g1) array.push(line.charAt(_g2++));
		array.push(eolSymbol);
	}
	return array;
};
kala_util_StringUtil.words = function(string,eolSymbol,spaceAsWord,lineFeedAsWord) {
	if(lineFeedAsWord == null) {
		lineFeedAsWord = false;
	}
	if(spaceAsWord == null) {
		spaceAsWord = false;
	}
	if(eolSymbol == null) {
		eolSymbol = "\n";
	}
	var words = [];
	var lines = string.split(eolSymbol);
	var wordsInLine;
	var lineIndex = 0;
	var wordIndex = 0;
	var _g = 0;
	while(_g < lines.length) {
		var line = lines[_g];
		++_g;
		wordIndex = 0;
		wordsInLine = line.split(" ");
		var _g1 = 0;
		while(_g1 < wordsInLine.length) {
			var word = wordsInLine[_g1];
			++_g1;
			if(word.length != 0) {
				words.push(word);
			}
			if(spaceAsWord && wordIndex < wordsInLine.length - 1) {
				words.push(" ");
			}
			++wordIndex;
		}
		if(lineFeedAsWord && lineIndex < lines.length - 1) {
			words.push(eolSymbol);
		}
		++lineIndex;
	}
	return words;
};
var kala_util_types_Pair = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["kala.util.types.Pair"] = kala_util_types_Pair;
kala_util_types_Pair.__name__ = ["kala","util","types","Pair"];
kala_util_types_Pair.prototype = {
	a: null
	,b: null
	,__class__: kala_util_types_Pair
};
var kala_util_types_Trio = function(a,b,c) {
	this.a = a;
	this.b = b;
	this.c = c;
};
$hxClasses["kala.util.types.Trio"] = kala_util_types_Trio;
kala_util_types_Trio.__name__ = ["kala","util","types","Trio"];
kala_util_types_Trio.prototype = {
	a: null
	,b: null
	,c: null
	,__class__: kala_util_types_Trio
};
var kha_ImageList = function() {
	this.names = ["background_blur","invisible_pixel","sprite_sheet_1","sprite_sheet_2"];
	this.sprite_sheet_2Description = { files : ["sprite_sheet_2.png"], original_height : 1895, type : "image", original_width : 1226, name : "sprite_sheet_2"};
	this.sprite_sheet_2Name = "sprite_sheet_2";
	this.sprite_sheet_2 = null;
	this.sprite_sheet_1Description = { files : ["sprite_sheet_1.png"], original_height : 1018, type : "image", original_width : 1740, name : "sprite_sheet_1"};
	this.sprite_sheet_1Name = "sprite_sheet_1";
	this.sprite_sheet_1 = null;
	this.invisible_pixelDescription = { files : ["invisible_pixel.png"], original_height : 1, type : "image", original_width : 1, name : "invisible_pixel"};
	this.invisible_pixelName = "invisible_pixel";
	this.invisible_pixel = null;
	this.background_blurDescription = { files : ["background_blur.jpg"], original_height : 495, type : "image", original_width : 700, name : "background_blur"};
	this.background_blurName = "background_blur";
	this.background_blur = null;
};
$hxClasses["kha.ImageList"] = kha_ImageList;
kha_ImageList.__name__ = ["kha","ImageList"];
kha_ImageList.prototype = {
	background_blur: null
	,background_blurName: null
	,background_blurDescription: null
	,background_blurLoad: function(done) {
		kha_Assets.loadImage("background_blur",function(image) {
			done();
		});
	}
	,background_blurUnload: function() {
		this.background_blur.unload();
		this.background_blur = null;
	}
	,invisible_pixel: null
	,invisible_pixelName: null
	,invisible_pixelDescription: null
	,invisible_pixelLoad: function(done) {
		kha_Assets.loadImage("invisible_pixel",function(image) {
			done();
		});
	}
	,invisible_pixelUnload: function() {
		this.invisible_pixel.unload();
		this.invisible_pixel = null;
	}
	,sprite_sheet_1: null
	,sprite_sheet_1Name: null
	,sprite_sheet_1Description: null
	,sprite_sheet_1Load: function(done) {
		kha_Assets.loadImage("sprite_sheet_1",function(image) {
			done();
		});
	}
	,sprite_sheet_1Unload: function() {
		this.sprite_sheet_1.unload();
		this.sprite_sheet_1 = null;
	}
	,sprite_sheet_2: null
	,sprite_sheet_2Name: null
	,sprite_sheet_2Description: null
	,sprite_sheet_2Load: function(done) {
		kha_Assets.loadImage("sprite_sheet_2",function(image) {
			done();
		});
	}
	,sprite_sheet_2Unload: function() {
		this.sprite_sheet_2.unload();
		this.sprite_sheet_2 = null;
	}
	,names: null
	,__class__: kha_ImageList
};
var kha_SoundList = function() {
	this.names = ["Dissonant_Waltz","bounce","flap","lightning","upgrade","spawn"];
	this.spawnDescription = { files : ["spawn.ogg"], type : "sound", name : "spawn"};
	this.spawnName = "spawn";
	this.spawn = null;
	this.upgradeDescription = { files : ["upgrade.ogg"], type : "sound", name : "upgrade"};
	this.upgradeName = "upgrade";
	this.upgrade = null;
	this.lightningDescription = { files : ["lightning.ogg"], type : "sound", name : "lightning"};
	this.lightningName = "lightning";
	this.lightning = null;
	this.flapDescription = { files : ["flap.ogg"], type : "sound", name : "flap"};
	this.flapName = "flap";
	this.flap = null;
	this.bounceDescription = { files : ["bounce.ogg"], type : "sound", name : "bounce"};
	this.bounceName = "bounce";
	this.bounce = null;
	this.Dissonant_WaltzDescription = { files : ["Dissonant_Waltz.ogg"], type : "sound", name : "Dissonant_Waltz"};
	this.Dissonant_WaltzName = "Dissonant_Waltz";
	this.Dissonant_Waltz = null;
};
$hxClasses["kha.SoundList"] = kha_SoundList;
kha_SoundList.__name__ = ["kha","SoundList"];
kha_SoundList.prototype = {
	Dissonant_Waltz: null
	,Dissonant_WaltzName: null
	,Dissonant_WaltzDescription: null
	,Dissonant_WaltzLoad: function(done) {
		kha_Assets.loadSound("Dissonant_Waltz",function(sound) {
			done();
		});
	}
	,Dissonant_WaltzUnload: function() {
		this.Dissonant_Waltz.unload();
		this.Dissonant_Waltz = null;
	}
	,bounce: null
	,bounceName: null
	,bounceDescription: null
	,bounceLoad: function(done) {
		kha_Assets.loadSound("bounce",function(sound) {
			done();
		});
	}
	,bounceUnload: function() {
		this.bounce.unload();
		this.bounce = null;
	}
	,flap: null
	,flapName: null
	,flapDescription: null
	,flapLoad: function(done) {
		kha_Assets.loadSound("flap",function(sound) {
			done();
		});
	}
	,flapUnload: function() {
		this.flap.unload();
		this.flap = null;
	}
	,lightning: null
	,lightningName: null
	,lightningDescription: null
	,lightningLoad: function(done) {
		kha_Assets.loadSound("lightning",function(sound) {
			done();
		});
	}
	,lightningUnload: function() {
		this.lightning.unload();
		this.lightning = null;
	}
	,upgrade: null
	,upgradeName: null
	,upgradeDescription: null
	,upgradeLoad: function(done) {
		kha_Assets.loadSound("upgrade",function(sound) {
			done();
		});
	}
	,upgradeUnload: function() {
		this.upgrade.unload();
		this.upgrade = null;
	}
	,spawn: null
	,spawnName: null
	,spawnDescription: null
	,spawnLoad: function(done) {
		kha_Assets.loadSound("spawn",function(sound) {
			done();
		});
	}
	,spawnUnload: function() {
		this.spawn.unload();
		this.spawn = null;
	}
	,names: null
	,__class__: kha_SoundList
};
var kha_BlobList = function() {
	this.names = ["sprite_sheet_1_ssd","sprite_sheet_2_ssd","SpaceMono_SIL_Open_Font_License_txt","Montserrat_SIL_Open_Font_License_txt"];
	this.Montserrat_SIL_Open_Font_License_txtDescription = { files : ["Montserrat_SIL Open Font License.txt"], type : "blob", name : "Montserrat_SIL_Open_Font_License_txt"};
	this.Montserrat_SIL_Open_Font_License_txtName = "Montserrat_SIL_Open_Font_License_txt";
	this.Montserrat_SIL_Open_Font_License_txt = null;
	this.SpaceMono_SIL_Open_Font_License_txtDescription = { files : ["SpaceMono_SIL Open Font License.txt"], type : "blob", name : "SpaceMono_SIL_Open_Font_License_txt"};
	this.SpaceMono_SIL_Open_Font_License_txtName = "SpaceMono_SIL_Open_Font_License_txt";
	this.SpaceMono_SIL_Open_Font_License_txt = null;
	this.sprite_sheet_2_ssdDescription = { files : ["sprite_sheet_2.ssd"], type : "blob", name : "sprite_sheet_2_ssd"};
	this.sprite_sheet_2_ssdName = "sprite_sheet_2_ssd";
	this.sprite_sheet_2_ssd = null;
	this.sprite_sheet_1_ssdDescription = { files : ["sprite_sheet_1.ssd"], type : "blob", name : "sprite_sheet_1_ssd"};
	this.sprite_sheet_1_ssdName = "sprite_sheet_1_ssd";
	this.sprite_sheet_1_ssd = null;
};
$hxClasses["kha.BlobList"] = kha_BlobList;
kha_BlobList.__name__ = ["kha","BlobList"];
kha_BlobList.prototype = {
	sprite_sheet_1_ssd: null
	,sprite_sheet_1_ssdName: null
	,sprite_sheet_1_ssdDescription: null
	,sprite_sheet_1_ssdLoad: function(done) {
		kha_Assets.loadBlob("sprite_sheet_1_ssd",function(blob) {
			done();
		});
	}
	,sprite_sheet_1_ssdUnload: function() {
		this.sprite_sheet_1_ssd.unload();
		this.sprite_sheet_1_ssd = null;
	}
	,sprite_sheet_2_ssd: null
	,sprite_sheet_2_ssdName: null
	,sprite_sheet_2_ssdDescription: null
	,sprite_sheet_2_ssdLoad: function(done) {
		kha_Assets.loadBlob("sprite_sheet_2_ssd",function(blob) {
			done();
		});
	}
	,sprite_sheet_2_ssdUnload: function() {
		this.sprite_sheet_2_ssd.unload();
		this.sprite_sheet_2_ssd = null;
	}
	,SpaceMono_SIL_Open_Font_License_txt: null
	,SpaceMono_SIL_Open_Font_License_txtName: null
	,SpaceMono_SIL_Open_Font_License_txtDescription: null
	,SpaceMono_SIL_Open_Font_License_txtLoad: function(done) {
		kha_Assets.loadBlob("SpaceMono_SIL_Open_Font_License_txt",function(blob) {
			done();
		});
	}
	,SpaceMono_SIL_Open_Font_License_txtUnload: function() {
		this.SpaceMono_SIL_Open_Font_License_txt.unload();
		this.SpaceMono_SIL_Open_Font_License_txt = null;
	}
	,Montserrat_SIL_Open_Font_License_txt: null
	,Montserrat_SIL_Open_Font_License_txtName: null
	,Montserrat_SIL_Open_Font_License_txtDescription: null
	,Montserrat_SIL_Open_Font_License_txtLoad: function(done) {
		kha_Assets.loadBlob("Montserrat_SIL_Open_Font_License_txt",function(blob) {
			done();
		});
	}
	,Montserrat_SIL_Open_Font_License_txtUnload: function() {
		this.Montserrat_SIL_Open_Font_License_txt.unload();
		this.Montserrat_SIL_Open_Font_License_txt = null;
	}
	,names: null
	,__class__: kha_BlobList
};
var kha_FontList = function() {
	this.names = ["SpaceMono_Bold","Montserrat_Bold"];
	this.Montserrat_BoldDescription = { files : ["Montserrat-Bold.ttf"], type : "font", name : "Montserrat_Bold"};
	this.Montserrat_BoldName = "Montserrat_Bold";
	this.Montserrat_Bold = null;
	this.SpaceMono_BoldDescription = { files : ["SpaceMono-Bold.ttf"], type : "font", name : "SpaceMono_Bold"};
	this.SpaceMono_BoldName = "SpaceMono_Bold";
	this.SpaceMono_Bold = null;
};
$hxClasses["kha.FontList"] = kha_FontList;
kha_FontList.__name__ = ["kha","FontList"];
kha_FontList.prototype = {
	SpaceMono_Bold: null
	,SpaceMono_BoldName: null
	,SpaceMono_BoldDescription: null
	,SpaceMono_BoldLoad: function(done) {
		kha_Assets.loadFont("SpaceMono_Bold",function(font) {
			done();
		});
	}
	,SpaceMono_BoldUnload: function() {
		this.SpaceMono_Bold.unload();
		this.SpaceMono_Bold = null;
	}
	,Montserrat_Bold: null
	,Montserrat_BoldName: null
	,Montserrat_BoldDescription: null
	,Montserrat_BoldLoad: function(done) {
		kha_Assets.loadFont("Montserrat_Bold",function(font) {
			done();
		});
	}
	,Montserrat_BoldUnload: function() {
		this.Montserrat_Bold.unload();
		this.Montserrat_Bold = null;
	}
	,names: null
	,__class__: kha_FontList
};
var kha_VideoList = function() {
	this.names = [];
};
$hxClasses["kha.VideoList"] = kha_VideoList;
kha_VideoList.__name__ = ["kha","VideoList"];
kha_VideoList.prototype = {
	names: null
	,__class__: kha_VideoList
};
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = ["kha","Assets"];
kha_Assets.__properties__ = {get_videoFormats:"get_videoFormats",get_fontFormats:"get_fontFormats",get_soundFormats:"get_soundFormats",get_imageFormats:"get_imageFormats"}
kha_Assets.loadEverything = function(callback) {
	var fileCount = 0;
	var _g = 0;
	var _g1 = Type.getInstanceFields(kha_BlobList);
	while(_g < _g1.length) {
		var blob = _g1[_g];
		++_g;
		if(StringTools.endsWith(blob,"Load")) {
			++fileCount;
		}
	}
	var _g2 = 0;
	var _g11 = Type.getInstanceFields(kha_ImageList);
	while(_g2 < _g11.length) {
		var image = _g11[_g2];
		++_g2;
		if(StringTools.endsWith(image,"Load")) {
			++fileCount;
		}
	}
	var _g3 = 0;
	var _g12 = Type.getInstanceFields(kha_SoundList);
	while(_g3 < _g12.length) {
		var sound = _g12[_g3];
		++_g3;
		if(StringTools.endsWith(sound,"Load")) {
			++fileCount;
		}
	}
	var _g4 = 0;
	var _g13 = Type.getInstanceFields(kha_FontList);
	while(_g4 < _g13.length) {
		var font = _g13[_g4];
		++_g4;
		if(StringTools.endsWith(font,"Load")) {
			++fileCount;
		}
	}
	var _g5 = 0;
	var _g14 = Type.getInstanceFields(kha_VideoList);
	while(_g5 < _g14.length) {
		var video = _g14[_g5];
		++_g5;
		if(StringTools.endsWith(video,"Load")) {
			++fileCount;
		}
	}
	if(fileCount == 0) {
		callback();
		return;
	}
	var filesLeft = fileCount;
	var _g6 = 0;
	var _g15 = Type.getInstanceFields(kha_BlobList);
	while(_g6 < _g15.length) {
		var blob1 = _g15[_g6];
		++_g6;
		if(StringTools.endsWith(blob1,"Load")) {
			(Reflect.field(kha_Assets.blobs,blob1))(function() {
				--filesLeft;
				kha_Assets.progress = 1 - filesLeft / fileCount;
				if(filesLeft == 0) {
					callback();
				}
			});
		}
	}
	var _g7 = 0;
	var _g16 = Type.getInstanceFields(kha_ImageList);
	while(_g7 < _g16.length) {
		var image1 = _g16[_g7];
		++_g7;
		if(StringTools.endsWith(image1,"Load")) {
			(Reflect.field(kha_Assets.images,image1))(function() {
				--filesLeft;
				kha_Assets.progress = 1 - filesLeft / fileCount;
				if(filesLeft == 0) {
					callback();
				}
			});
		}
	}
	var _g8 = 0;
	var _g17 = Type.getInstanceFields(kha_SoundList);
	while(_g8 < _g17.length) {
		var sound1 = [_g17[_g8]];
		++_g8;
		if(StringTools.endsWith(sound1[0],"Load")) {
			(Reflect.field(kha_Assets.sounds,sound1[0]))((function(sound2) {
				return function() {
					var sound3 = Reflect.field(kha_Assets.sounds,sound2[0].substring(0,sound2[0].length - 4));
					sound3.uncompress((function() {
						return function() {
							--filesLeft;
							kha_Assets.progress = 1 - filesLeft / fileCount;
							if(filesLeft == 0) {
								callback();
							}
						};
					})());
				};
			})(sound1));
		}
	}
	var _g9 = 0;
	var _g18 = Type.getInstanceFields(kha_FontList);
	while(_g9 < _g18.length) {
		var font1 = _g18[_g9];
		++_g9;
		if(StringTools.endsWith(font1,"Load")) {
			(Reflect.field(kha_Assets.fonts,font1))(function() {
				--filesLeft;
				kha_Assets.progress = 1 - filesLeft / fileCount;
				if(filesLeft == 0) {
					callback();
				}
			});
		}
	}
	var _g10 = 0;
	var _g19 = Type.getInstanceFields(kha_VideoList);
	while(_g10 < _g19.length) {
		var video1 = _g19[_g10];
		++_g10;
		if(StringTools.endsWith(video1,"Load")) {
			(Reflect.field(kha_Assets.videos,video1))(function() {
				--filesLeft;
				kha_Assets.progress = 1 - filesLeft / fileCount;
				if(filesLeft == 0) {
					callback();
				}
			});
		}
	}
};
kha_Assets.loadImage = function(name,done) {
	kha_LoaderImpl.loadImageFromDescription(Reflect.field(kha_Assets.images,name + "Description"),function(image) {
		kha_Assets.images[name] = image;
		done(image);
	});
};
kha_Assets.loadImageFromPath = function(path,readable,done) {
	kha_LoaderImpl.loadImageFromDescription({ files : [path], readable : readable},done);
};
kha_Assets.get_imageFormats = function() {
	return kha_LoaderImpl.getImageFormats();
};
kha_Assets.loadBlob = function(name,done) {
	kha_LoaderImpl.loadBlobFromDescription(Reflect.field(kha_Assets.blobs,name + "Description"),function(blob) {
		kha_Assets.blobs[name] = blob;
		done(blob);
	});
};
kha_Assets.loadBlobFromPath = function(path,done) {
	kha_LoaderImpl.loadBlobFromDescription({ files : [path]},done);
};
kha_Assets.loadSound = function(name,done) {
	kha_LoaderImpl.loadSoundFromDescription(Reflect.field(kha_Assets.sounds,name + "Description"),function(sound) {
		kha_Assets.sounds[name] = sound;
		done(sound);
	});
	return;
};
kha_Assets.loadSoundFromPath = function(path,done) {
	kha_LoaderImpl.loadSoundFromDescription({ files : [path]},done);
	return;
};
kha_Assets.get_soundFormats = function() {
	return kha_LoaderImpl.getSoundFormats();
};
kha_Assets.loadFont = function(name,done) {
	kha_LoaderImpl.loadFontFromDescription(Reflect.field(kha_Assets.fonts,name + "Description"),function(font) {
		kha_Assets.fonts[name] = font;
		done(font);
	});
	return;
};
kha_Assets.loadFontFromPath = function(path,done) {
	kha_LoaderImpl.loadFontFromDescription({ files : [path]},done);
	return;
};
kha_Assets.get_fontFormats = function() {
	return ["ttf"];
};
kha_Assets.loadVideo = function(name,done) {
	kha_LoaderImpl.loadVideoFromDescription(Reflect.field(kha_Assets.videos,name + "Description"),function(video) {
		kha_Assets.videos[name] = video;
		done(video);
	});
	return;
};
kha_Assets.loadVideoFromPath = function(path,done) {
	kha_LoaderImpl.loadVideoFromDescription({ files : [path]},done);
	return;
};
kha_Assets.get_videoFormats = function() {
	return kha_LoaderImpl.getVideoFormats();
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = ["kha","Canvas"];
kha_Canvas.prototype = {
	get_width: null
	,get_height: null
	,get_g1: null
	,get_g2: null
	,get_g4: null
	,width: null
	,height: null
	,g1: null
	,g2: null
	,g4: null
	,__class__: kha_Canvas
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_height:"get_height",get_width:"get_width"}
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = ["kha","Resource"];
kha_Resource.prototype = {
	unload: null
	,__class__: kha_Resource
};
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = ["kha","Image"];
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported:"get_nonPow2Supported",get_maxSize:"get_maxSize"}
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0);
	}
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false,0);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	return null;
};
kha_Image.fromVideo = function(video) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false);
		img.video = video.element;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false,0);
		img1.video = video.element;
		img1.createTexture();
		return img1;
	}
};
kha_Image.get_maxSize = function() {
	if(kha_SystemImpl.gl == null) {
		return 8192;
	} else {
		return kha_SystemImpl.gl.getParameter(3379);
	}
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.prototype = {
	isOpaque: function(x,y) {
		return false;
	}
	,at: function(x,y) {
		return kha__$Color_Color_$Impl_$.Black;
	}
	,unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,generateMipmaps: function(levels) {
	}
	,setMipmaps: function(mipmaps) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,realWidth: null
	,get_realWidth: function() {
		return 0;
	}
	,realHeight: null
	,get_realHeight: function() {
		return 0;
	}
	,g1: null
	,get_g1: function() {
		return null;
	}
	,g2: null
	,get_g2: function() {
		return null;
	}
	,g4: null
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_realHeight:"get_realHeight",get_realWidth:"get_realWidth",get_height:"get_height",get_width:"get_width"}
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = ["kha","CanvasImage"];
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,frameBuffer: null
	,graphics1: null
	,g2canvas: null
	,get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context,this.get_width(),this.get_height());
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return kha__$Color_Color_$Impl_$.Black;
			} else {
				this.createImageData();
			}
		}
		return kha__$Color_Color_$Impl_$._new(this.data.data[y * (this.image.width | 0) * 4 + x * 4]);
	}
	,createImageData: function() {
		kha_CanvasImage.context.strokeStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillRect(0,0,this.image.width,this.image.height);
		kha_CanvasImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
		this.data = kha_CanvasImage.context.getImageData(0,0,this.image.width,this.image.height);
	}
	,texture: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == kha_graphics4_TextureFormat.RGBA32?4 * this.get_width() * this.get_height():this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g1 = 0;
				var _g = this.get_height();
				while(_g1 < _g) {
					var y = _g1++;
					var _g3 = 0;
					var _g2 = this.get_width();
					while(_g3 < _g2) {
						var x = _g3++;
						var value = this.bytes.b[y * this.get_width() + x];
						rgbaBytes.b[y * this.get_width() * 4 + x * 4] = value & 255;
						rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 1] = value & 255;
						rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 2] = value & 255;
						rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 3] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = $hx_exports["kha"]["_Color"]["Color_Impl_"] = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = ["kha","_Color","Color_Impl_"];
kha__$Color_Color_$Impl_$.__properties__ = {set_value:"set_value",get_value:"get_value",set_A:"set_A",get_A:"get_A",set_B:"set_B",get_B:"get_B",set_G:"set_G",get_G:"get_G",set_R:"set_R",get_R:"get_R",set_Ab:"set_Ab",get_Ab:"get_Ab",set_Bb:"set_Bb",get_Bb:"get_Bb",set_Gb:"set_Gb",get_Gb:"get_Gb",set_Rb:"set_Rb",get_Rb:"get_Rb"}
kha__$Color_Color_$Impl_$.fromValue = function(value) {
	return kha__$Color_Color_$Impl_$._new(value);
};
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha__$Color_Color_$Impl_$._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha__$Color_Color_$Impl_$.fromString = function(value) {
	if((value.length == 7 || value.length == 9) && value.charCodeAt(0) == 35) {
		var colorValue = Std.parseInt("0x" + HxOverrides.substr(value,1,null));
		if(value.length == 7) {
			colorValue += -16777216;
		}
		return kha__$Color_Color_$Impl_$._new(colorValue);
	} else {
		throw new js__$Boot_HaxeError("Invalid Color string: '" + value + "'");
	}
};
kha__$Color_Color_$Impl_$._new = function(value) {
	return value;
};
kha__$Color_Color_$Impl_$.get_value = function(this1) {
	return this1;
};
kha__$Color_Color_$Impl_$.set_value = function(this1,value) {
	this1 = value;
	return value;
};
kha__$Color_Color_$Impl_$.get_Rb = function(this1) {
	return (this1 & 16711680) >>> 16;
};
kha__$Color_Color_$Impl_$.get_Gb = function(this1) {
	return (this1 & 65280) >>> 8;
};
kha__$Color_Color_$Impl_$.get_Bb = function(this1) {
	return this1 & 255;
};
kha__$Color_Color_$Impl_$.get_Ab = function(this1) {
	return this1 >>> 24;
};
kha__$Color_Color_$Impl_$.set_Rb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | i << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Gb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | i << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Bb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | i;
	return i;
};
kha__$Color_Color_$Impl_$.set_Ab = function(this1,i) {
	this1 = i << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.get_R = function(this1) {
	return ((this1 & 16711680) >>> 16) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_G = function(this1) {
	return ((this1 & 65280) >>> 8) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_B = function(this1) {
	return (this1 & 255) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_A = function(this1) {
	return (this1 >>> 24) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.set_R = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_G = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (f * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_B = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | (f * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_A = function(this1,f) {
	this1 = (f * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
var kha_EnvironmentVariables = function() {
};
$hxClasses["kha.EnvironmentVariables"] = kha_EnvironmentVariables;
kha_EnvironmentVariables.__name__ = ["kha","EnvironmentVariables"];
kha_EnvironmentVariables.prototype = {
	getVariable: function(name) {
		return "";
	}
	,__class__: kha_EnvironmentVariables
};
var kha_Font = function() { };
$hxClasses["kha.Font"] = kha_Font;
kha_Font.__name__ = ["kha","Font"];
kha_Font.__interfaces__ = [kha_Resource];
kha_Font.prototype = {
	height: null
	,width: null
	,baseline: null
	,__class__: kha_Font
};
var kha_FontStyle = function(bold,italic,underlined) {
	this.bold = bold;
	this.italic = italic;
	this.underlined = underlined;
};
$hxClasses["kha.FontStyle"] = kha_FontStyle;
kha_FontStyle.__name__ = ["kha","FontStyle"];
kha_FontStyle.prototype = {
	bold: null
	,italic: null
	,underlined: null
	,getBold: function() {
		return this.bold;
	}
	,getItalic: function() {
		return this.italic;
	}
	,getUnderlined: function() {
		return this.underlined;
	}
	,__class__: kha_FontStyle
};
var kha_Framebuffer = function(windowId,g1,g2,g4) {
	this.windowId = windowId;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = ["kha","Framebuffer"];
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	windowId: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,init: function(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	,g1: null
	,get_g1: function() {
		return this.graphics1;
	}
	,g2: null
	,get_g2: function() {
		return this.graphics2;
	}
	,g4: null
	,get_g4: function() {
		return this.graphics4;
	}
	,width: null
	,get_width: function() {
		return kha_System.windowWidth(this.windowId);
	}
	,height: null
	,get_height: function() {
		return kha_System.windowHeight(this.windowId);
	}
	,__class__: kha_Framebuffer
	,__properties__: {get_height:"get_height",get_width:"get_width",get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1"}
};
var kha_Key = $hxClasses["kha.Key"] = { __ename__ : ["kha","Key"], __constructs__ : ["BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","CHAR","ESC","DEL","UP","DOWN","LEFT","RIGHT","BACK"] };
kha_Key.BACKSPACE = ["BACKSPACE",0];
kha_Key.BACKSPACE.toString = $estr;
kha_Key.BACKSPACE.__enum__ = kha_Key;
kha_Key.TAB = ["TAB",1];
kha_Key.TAB.toString = $estr;
kha_Key.TAB.__enum__ = kha_Key;
kha_Key.ENTER = ["ENTER",2];
kha_Key.ENTER.toString = $estr;
kha_Key.ENTER.__enum__ = kha_Key;
kha_Key.SHIFT = ["SHIFT",3];
kha_Key.SHIFT.toString = $estr;
kha_Key.SHIFT.__enum__ = kha_Key;
kha_Key.CTRL = ["CTRL",4];
kha_Key.CTRL.toString = $estr;
kha_Key.CTRL.__enum__ = kha_Key;
kha_Key.ALT = ["ALT",5];
kha_Key.ALT.toString = $estr;
kha_Key.ALT.__enum__ = kha_Key;
kha_Key.CHAR = ["CHAR",6];
kha_Key.CHAR.toString = $estr;
kha_Key.CHAR.__enum__ = kha_Key;
kha_Key.ESC = ["ESC",7];
kha_Key.ESC.toString = $estr;
kha_Key.ESC.__enum__ = kha_Key;
kha_Key.DEL = ["DEL",8];
kha_Key.DEL.toString = $estr;
kha_Key.DEL.__enum__ = kha_Key;
kha_Key.UP = ["UP",9];
kha_Key.UP.toString = $estr;
kha_Key.UP.__enum__ = kha_Key;
kha_Key.DOWN = ["DOWN",10];
kha_Key.DOWN.toString = $estr;
kha_Key.DOWN.__enum__ = kha_Key;
kha_Key.LEFT = ["LEFT",11];
kha_Key.LEFT.toString = $estr;
kha_Key.LEFT.__enum__ = kha_Key;
kha_Key.RIGHT = ["RIGHT",12];
kha_Key.RIGHT.toString = $estr;
kha_Key.RIGHT.__enum__ = kha_Key;
kha_Key.BACK = ["BACK",13];
kha_Key.BACK.toString = $estr;
kha_Key.BACK.__enum__ = kha_Key;
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = ["kha","AlignedQuad"];
kha_AlignedQuad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,xadvance: null
	,__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) {
		var $char = chars[_g];
		++_g;
		$char.yoff += this.baseline;
	}
	this.texture = kha_Image.create(width,height,kha_graphics4_TextureFormat.L8);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	while(_g1 < height) {
		++_g1;
		var _g3 = 0;
		while(_g3 < width) {
			++_g3;
			bytes.b[pos] = pixels.readU8(pos) & 255;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = ["kha","KravurImage"];
kha_KravurImage.prototype = {
	mySize: null
	,chars: null
	,texture: null
	,width: null
	,height: null
	,baseline: null
	,getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		var q = new kha_AlignedQuad();
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,getCharWidth: function(charIndex) {
		if(charIndex < 32) {
			return 0;
		}
		if(charIndex - 32 >= this.chars.length) {
			return 0;
		}
		return this.chars[charIndex - 32].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(string) {
		var str = new String(string);
		var width = 0;
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) width += this.getCharWidth(HxOverrides.cca(str,_g1++));
		return width;
	}
	,getBaselinePosition: function() {
		return this.baseline;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = ["kha","Kravur"];
kha_Kravur.__interfaces__ = [kha_Font];
kha_Kravur.prototype = {
	blob: null
	,images: null
	,_get: function(fontSize,glyphs) {
		if(!this.images.h.hasOwnProperty(fontSize)) {
			if(glyphs == null) {
				glyphs = [];
				var _g = 32;
				while(_g < 256) glyphs.push(_g++);
			}
			var width = 64;
			var height = 32;
			var length = glyphs.length;
			var baked = new Array(length);
			var _g1 = 0;
			var _g2 = baked.length;
			while(_g1 < _g2) baked[_g1++] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			var pixels = null;
			var status = -1;
			while(status < 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var image = new kha_KravurImage(fontSize | 0,Math.round(metrics.ascent * scale),Math.round(metrics.descent * scale),Math.round(metrics.lineGap * scale),width,height,baked,pixels);
			this.images.h[fontSize] = image;
			return image;
		}
		return this.images.h[fontSize];
	}
	,height: function(fontSize) {
		return this._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	,baseline: function(fontSize) {
		return this._get(fontSize).getBaselinePosition();
	}
	,unload: function() {
		this.blob = null;
		this.images = null;
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = ["kha","LoaderImpl"];
kha_LoaderImpl.getImageFormats = function() {
	return ["png","jpg","hdr"];
};
kha_LoaderImpl.loadImageFromDescription = function(desc,done) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			done(kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,kha_graphics4_TextureFormat.RGBA128,readable?kha_graphics4_Usage.DynamicUsage:kha_graphics4_Usage.StaticUsage));
		});
	} else {
		var img = window.document.createElement("img");
		img.src = desc.files[0];
		img.onload = function(event) {
			done(kha_Image.fromImage(img,readable));
		};
	}
};
kha_LoaderImpl.getSoundFormats = function() {
	var element = window.document.createElement("audio");
	var formats = [];
	if(element.canPlayType("audio/mp4") != "") {
		formats.push("mp4");
	}
	if(kha_SystemImpl._hasWebAudio || element.canPlayType("audio/ogg") != "") {
		formats.push("ogg");
	}
	return formats;
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done) {
	if(kha_SystemImpl._hasWebAudio) {
		if(window.document.createElement("audio").canPlayType("audio/mp4") != "") {
			var _g1 = 0;
			var _g = desc.files.length;
			while(_g1 < _g) {
				var file = desc.files[_g1++];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done);
					return;
				}
			}
		}
		var _g11 = 0;
		var _g2 = desc.files.length;
		while(_g11 < _g2) {
			var file1 = desc.files[_g11++];
			if(StringTools.endsWith(file1,".ogg")) {
				new kha_js_WebAudioSound(file1,done);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done);
	}
};
kha_LoaderImpl.getVideoFormats = function() {
	return ["mp4","webm"];
};
kha_LoaderImpl.loadVideoFromDescription = function(desc,done) {
	new kha_js_Video(desc.files,done);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = new haxe_io_Bytes(new ArrayBuffer(byteArray.byteLength));
				var _g1 = 0;
				var _g = byteArray.byteLength;
				while(_g1 < _g) {
					var i = _g1++;
					bytes.b[i] = byteArray[i] & 255;
				}
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g11 = 0;
				var _g2 = data.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					bytes.b[i1] = data[i1] & 255;
				}
			} else {
				haxe_Log.trace("Error loading " + desc.files[0],{ fileName : "LoaderImpl.hx", lineNumber : 122, className : "kha.LoaderImpl", methodName : "loadBlobFromDescription"});
				window.console.log("loadBlob failed");
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			haxe_Log.trace("Error loading " + desc.files[0],{ fileName : "LoaderImpl.hx", lineNumber : 128, className : "kha.LoaderImpl", methodName : "loadBlobFromDescription"});
			window.console.log("loadBlob failed");
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		if(kha_SystemImpl.gl == null) {
			done(new kha_js_Font(new kha_Kravur(blob)));
		} else {
			done(new kha_Kravur(blob));
		}
	});
};
var kha_Rotation = function(center,angle) {
	this.center = center;
	this.angle = angle;
};
$hxClasses["kha.Rotation"] = kha_Rotation;
kha_Rotation.__name__ = ["kha","Rotation"];
kha_Rotation.prototype = {
	center: null
	,angle: null
	,__class__: kha_Rotation
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = ["kha","TimeTask"];
kha_TimeTask.prototype = {
	task: null
	,start: null
	,period: null
	,duration: null
	,next: null
	,id: null
	,groupId: null
	,active: null
	,paused: null
	,__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = ["kha","FrameTask"];
kha_FrameTask.prototype = {
	task: null
	,priority: null
	,id: null
	,active: null
	,paused: null
	,__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = ["kha","Scheduler"];
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) kha_Scheduler.deltas[_g1++] = 0;
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.realTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_System.get_vsync();
	var hz = kha_System.get_refreshRate();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime();
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) kha_Scheduler.deltas[_g1++] = 0;
	if(restartTimers) {
		var _g2 = 0;
		var _g11 = kha_Scheduler.timeTasks;
		while(_g2 < _g11.length) {
			var timeTask = _g11[_g2];
			++_g2;
			timeTask.paused = false;
		}
		var _g3 = 0;
		var _g12 = kha_Scheduler.frameTasks;
		while(_g3 < _g12.length) {
			var frameTask = _g12[_g3];
			++_g3;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.stop = function() {
	kha_Scheduler.stopped = true;
};
kha_Scheduler.isStopped = function() {
	return kha_Scheduler.stopped;
};
kha_Scheduler.warpTimeTasks = function(time,tasks) {
	var _g = 0;
	while(_g < tasks.length) {
		var timeTask = tasks[_g];
		++_g;
		if(timeTask.start >= time) {
			timeTask.next = timeTask.start;
		} else if(timeTask.period > 0) {
			var times = Math.ceil((time - timeTask.start) / timeTask.period);
			timeTask.next = timeTask.start + times * timeTask.period;
		}
	}
};
kha_Scheduler.back = function(time) {
	if(time >= kha_Scheduler.lastTime) {
		return;
	}
	kha_Scheduler.current = time;
	kha_Scheduler.lastTime = time;
	kha_Scheduler.warpTimeTasks(time,kha_Scheduler.outdatedTimeTasks);
	kha_Scheduler.warpTimeTasks(time,kha_Scheduler.timeTasks);
	var _g = 0;
	var _g1 = kha_Scheduler.outdatedTimeTasks;
	while(_g < _g1.length) {
		var task = _g1[_g];
		++_g;
		if(task.next >= time) {
			kha_Scheduler.timeTasksScratchpad.push(task);
		}
	}
	var _g2 = 0;
	var _g11 = kha_Scheduler.timeTasksScratchpad;
	while(_g2 < _g11.length) {
		var task1 = _g11[_g2];
		++_g2;
		HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
	}
	var _g3 = 0;
	var _g12 = kha_Scheduler.timeTasksScratchpad;
	while(_g3 < _g12.length) {
		var task2 = _g12[_g3];
		++_g3;
		kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,task2);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	var _g4 = 0;
	var _g13 = kha_Scheduler.outdatedTimeTasks;
	while(_g4 < _g13.length) {
		var task3 = _g13[_g4];
		++_g4;
		if(task3.next < time - 1.0) {
			kha_Scheduler.timeTasksScratchpad.push(task3);
		}
	}
	var _g5 = 0;
	var _g14 = kha_Scheduler.timeTasksScratchpad;
	while(_g5 < _g14.length) {
		var task4 = _g14[_g5];
		++_g5;
		HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task4);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
};
kha_Scheduler.executeFrame = function() {
	var delta = kha_Scheduler.realTime() - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta < 0) {
		return;
	}
	if(delta > kha_Scheduler.maxframetime) {
		kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
		delta = kha_Scheduler.maxframetime;
		frameEnd += delta;
	} else if(kha_Scheduler.vsync) {
		var realdif = kha_Scheduler.onedifhz;
		while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
		delta = realdif;
		var _g1 = 0;
		var _g = kha_Scheduler.DIF_COUNT - 2;
		while(_g1 < _g) {
			var i = _g1++;
			delta += kha_Scheduler.deltas[i];
			kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
		}
		delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
		delta /= kha_Scheduler.DIF_COUNT;
		kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
		frameEnd += delta;
	} else {
		var _g11 = 0;
		var _g2 = kha_Scheduler.DIF_COUNT - 1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
		}
		kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
		var next = 0;
		var _g12 = 0;
		var _g3 = kha_Scheduler.DIF_COUNT;
		while(_g12 < _g3) next += kha_Scheduler.deltas[_g12++];
		next /= kha_Scheduler.DIF_COUNT;
		frameEnd += next;
	}
	kha_Scheduler.lastTime = frameEnd;
	if(!kha_Scheduler.stopped) {
		kha_Scheduler.current = frameEnd;
	}
	var _g4 = 0;
	var _g13 = kha_Scheduler.pausedTimeTasks;
	while(_g4 < _g13.length) {
		var pausedTask = _g13[_g4];
		++_g4;
		pausedTask.next += delta;
	}
	if(kha_Scheduler.stopped) {
		var _g5 = 0;
		var _g14 = kha_Scheduler.timeTasks;
		while(_g5 < _g14.length) {
			var timeTask = _g14[_g5];
			++_g5;
			timeTask.next += delta;
		}
	}
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= frameEnd) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,frameEnd);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,frameEnd);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
	kha_Scheduler.sortFrameTasks();
	var _g6 = 0;
	var _g15 = kha_Scheduler.frameTasks;
	while(_g6 < _g15.length) {
		var frameTask = _g15[_g6];
		++_g6;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g7 = 0;
	var _g16 = kha_Scheduler.frameTasks;
	while(_g7 < _g16.length) {
		var frameTask1 = _g16[_g7];
		++_g7;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time() - kha_Scheduler.startTime;
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g11 = 0;
	var _g2 = kha_Scheduler.DIF_COUNT;
	while(_g11 < _g2) kha_Scheduler.deltas[_g11++] = 0;
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableFrameTask = function(task,priority) {
	kha_Scheduler.frameTasks.push(new kha_FrameTask(task,priority,++kha_Scheduler.currentFrameTaskId));
	kha_Scheduler.frame_tasks_sorted = false;
	return kha_Scheduler.currentFrameTaskId;
};
kha_Scheduler.addFrameTask = function(task,priority) {
	return kha_Scheduler.addBreakableFrameTask(function() {
		task();
		return true;
	},priority);
};
kha_Scheduler.pauseFrameTask = function(id,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.paused = paused;
			break;
		}
	}
};
kha_Scheduler.removeFrameTask = function(id) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.active = false;
			break;
		}
	}
};
kha_Scheduler.generateGroupId = function() {
	return ++kha_Scheduler.currentGroupId;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addBreakableTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.getTimeTask = function(id) {
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		return kha_Scheduler.activeTimeTask;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.id == id) {
			return timeTask;
		}
	}
	var _g2 = 0;
	var _g11 = kha_Scheduler.pausedTimeTasks;
	while(_g2 < _g11.length) {
		var timeTask1 = _g11[_g2];
		++_g2;
		if(timeTask1.id == id) {
			return timeTask1;
		}
	}
	return null;
};
kha_Scheduler.pauseTimeTask = function(id,paused) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.pauseRunningTimeTask = function(timeTask,paused) {
	timeTask.paused = paused;
	if(paused) {
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
		kha_Scheduler.pausedTimeTasks.push(timeTask);
	} else {
		kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,timeTask);
		HxOverrides.remove(kha_Scheduler.pausedTimeTasks,timeTask);
	}
};
kha_Scheduler.pauseTimeTasks = function(groupId,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
		}
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.removeTimeTask = function(id) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		timeTask.active = false;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
	}
};
kha_Scheduler.removeTimeTasks = function(groupId) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			timeTask.active = false;
			kha_Scheduler.timeTasksScratchpad.push(timeTask);
		}
	}
	var _g2 = 0;
	var _g11 = kha_Scheduler.timeTasksScratchpad;
	while(_g2 < _g11.length) {
		var timeTask1 = _g11[_g2];
		++_g2;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask1);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.active = false;
	}
};
kha_Scheduler.numTasksInSchedule = function() {
	return kha_Scheduler.timeTasks.length + kha_Scheduler.frameTasks.length;
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_ScreenRotation = $hxClasses["kha.ScreenRotation"] = { __ename__ : ["kha","ScreenRotation"], __constructs__ : ["RotationNone","Rotation90","Rotation180","Rotation270"] };
kha_ScreenRotation.RotationNone = ["RotationNone",0];
kha_ScreenRotation.RotationNone.toString = $estr;
kha_ScreenRotation.RotationNone.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation90 = ["Rotation90",1];
kha_ScreenRotation.Rotation90.toString = $estr;
kha_ScreenRotation.Rotation90.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation180 = ["Rotation180",2];
kha_ScreenRotation.Rotation180.toString = $estr;
kha_ScreenRotation.Rotation180.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation270 = ["Rotation270",3];
kha_ScreenRotation.Rotation270.toString = $estr;
kha_ScreenRotation.Rotation270.__enum__ = kha_ScreenRotation;
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = ["kha","Shaders"];
kha_Shaders.init = function() {
	var data = Reflect.field(kha_Shaders,"painter_colored_fragData");
	var bytes = haxe_Unserializer.run(data);
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(kha_internal_BytesBlob.fromBytes(bytes),"painter_colored_frag");
	var data1 = Reflect.field(kha_Shaders,"painter_colored_vertData");
	var bytes1 = haxe_Unserializer.run(data1);
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(kha_internal_BytesBlob.fromBytes(bytes1),"painter_colored_vert");
	var data2 = Reflect.field(kha_Shaders,"painter_image_fragData");
	var bytes2 = haxe_Unserializer.run(data2);
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(kha_internal_BytesBlob.fromBytes(bytes2),"painter_image_frag");
	var data3 = Reflect.field(kha_Shaders,"painter_text_vertData");
	var bytes3 = haxe_Unserializer.run(data3);
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(kha_internal_BytesBlob.fromBytes(bytes3),"painter_text_vert");
	var data4 = Reflect.field(kha_Shaders,"painter_image_vertData");
	var bytes4 = haxe_Unserializer.run(data4);
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(kha_internal_BytesBlob.fromBytes(bytes4),"painter_image_vert");
	var data5 = Reflect.field(kha_Shaders,"painter_text_fragData");
	var bytes5 = haxe_Unserializer.run(data5);
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(kha_internal_BytesBlob.fromBytes(bytes5),"painter_text_frag");
	var data6 = Reflect.field(kha_Shaders,"painter_video_fragData");
	var bytes6 = haxe_Unserializer.run(data6);
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(kha_internal_BytesBlob.fromBytes(bytes6),"painter_video_frag");
	var data7 = Reflect.field(kha_Shaders,"painter_video_vertData");
	var bytes7 = haxe_Unserializer.run(data7);
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(kha_internal_BytesBlob.fromBytes(bytes7),"painter_video_vert");
};
var kha_Sound = function() {
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = ["kha","Sound"];
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	compressedData: null
	,uncompressedData: null
	,uncompress: function(done) {
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			this.uncompressedData = new Array(count * 2);
			var _g1 = 0;
			var _g = count;
			while(_g1 < _g) {
				var i = _g1++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			this.uncompressedData = new Array(count);
			var _g11 = 0;
			var _g2 = count;
			while(_g11 < _g2) {
				var i1 = _g11++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.compressedData = null;
		done();
	}
	,unload: function() {
		this.compressedData = null;
		this.uncompressedData = null;
	}
	,__class__: kha_Sound
};
var kha_StorageFile = function() { };
$hxClasses["kha.StorageFile"] = kha_StorageFile;
kha_StorageFile.__name__ = ["kha","StorageFile"];
kha_StorageFile.prototype = {
	read: function() {
		return null;
	}
	,write: function(data) {
	}
	,append: function(data) {
	}
	,canAppend: function() {
		return false;
	}
	,maxSize: function() {
		return -1;
	}
	,writeString: function(data) {
		this.write(kha_internal_BytesBlob.fromBytes(haxe_io_Bytes.ofString(data)));
	}
	,appendString: function(data) {
		this.append(kha_internal_BytesBlob.fromBytes(haxe_io_Bytes.ofString(data)));
	}
	,readString: function() {
		var blob = this.read();
		if(blob == null) {
			return null;
		} else {
			return blob.toString();
		}
	}
	,writeObject: function(object) {
		this.writeString(haxe_Serializer.run(object));
	}
	,readObject: function() {
		var s = this.readString();
		if(s == null) {
			return null;
		}
		try {
			return haxe_Unserializer.run(s);
		} catch( e ) {
			return null;
		}
	}
	,__class__: kha_StorageFile
};
var kha_LocalStorageFile = function(name) {
	this.name = name;
};
$hxClasses["kha.LocalStorageFile"] = kha_LocalStorageFile;
kha_LocalStorageFile.__name__ = ["kha","LocalStorageFile"];
kha_LocalStorageFile.encode = function(source) {
	var reserved = [0,10,13,61];
	var output = "";
	var converted;
	var ele;
	var bytes = new Uint8Array(source);
	var _g1 = 0;
	var _g = bytes.length;
	while(_g1 < _g) {
		ele = bytes[_g1++];
		converted = (ele + 42) % 256;
		if(!Lambda.has(reserved,converted)) {
			output += String.fromCharCode(converted);
		} else {
			converted = (converted + 64) % 256;
			output += "=" + String.fromCharCode(converted);
		}
	}
	return output;
};
kha_LocalStorageFile.decode = function(source) {
	var output = new haxe_io_BytesBuffer();
	var ck = false;
	var c;
	var _g1 = 0;
	var _g = source.length;
	while(_g1 < _g) {
		c = source.charCodeAt(_g1++);
		if(c == 13 || c == 10) {
			continue;
		}
		if(c == 61 && !ck) {
			ck = true;
			continue;
		}
		if(ck) {
			ck = false;
			c -= 64;
		}
		if(c < 42 && c > 0) {
			output.b.push(c + 214);
		} else {
			output.b.push(c - 42);
		}
	}
	return output.getBytes();
};
kha_LocalStorageFile.__super__ = kha_StorageFile;
kha_LocalStorageFile.prototype = $extend(kha_StorageFile.prototype,{
	name: null
	,read: function() {
		var storage = window.localStorage;
		if(storage == null) {
			return null;
		}
		var value = storage.getItem(this.name);
		if(value == null) {
			return null;
		} else {
			return kha_internal_BytesBlob.fromBytes(kha_LocalStorageFile.decode(value));
		}
	}
	,write: function(data) {
		var storage = window.localStorage;
		if(storage == null) {
			return;
		}
		storage.setItem(this.name,kha_LocalStorageFile.encode(data.bytes.b.bufferValue));
	}
	,__class__: kha_LocalStorageFile
});
var kha_Storage = function() { };
$hxClasses["kha.Storage"] = kha_Storage;
kha_Storage.__name__ = ["kha","Storage"];
kha_Storage.namedFile = function(name) {
	return new kha_LocalStorageFile(name);
};
kha_Storage.defaultFile = function() {
	return kha_Storage.namedFile("default.kha");
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = ["kha","System"];
kha_System.__properties__ = {get_systemId:"get_systemId",get_refreshRate:"get_refreshRate",get_vsync:"get_vsync",get_screenRotation:"get_screenRotation",get_time:"get_time"}
kha_System.init = function(options,callback) {
	if(options.title == null) {
		options.title = "Kha";
	}
	if(options.width == null) {
		options.width = 800;
	}
	if(options.height == null) {
		options.height = 600;
	}
	if(options.samplesPerPixel == null) {
		options.samplesPerPixel = 1;
	}
	kha_SystemImpl.init(options,callback);
};
kha_System.initEx = function(title,options,windowCallback,callback) {
	kha_SystemImpl.initEx(title,options,windowCallback,callback);
};
kha_System.notifyOnRender = function(listener,id) {
	if(id == null) {
		id = 0;
	}
	while(id >= kha_System.renderListeners.length) kha_System.renderListeners.push([]);
	kha_System.renderListeners[id].push(listener);
};
kha_System.notifyOnApplicationState = function(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
	if(foregroundListener != null) {
		kha_System.foregroundListeners.push(foregroundListener);
	}
	if(resumeListener != null) {
		kha_System.resumeListeners.push(resumeListener);
	}
	if(pauseListener != null) {
		kha_System.pauseListeners.push(pauseListener);
	}
	if(backgroundListener != null) {
		kha_System.backgroundListeners.push(backgroundListener);
	}
	if(shutdownListener != null) {
		kha_System.shutdownListeners.push(shutdownListener);
	}
};
kha_System.render = function(id,framebuffer) {
	if(kha_System.renderListeners.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = kha_System.renderListeners[id];
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffer);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.resume = function() {
	var _g = 0;
	var _g1 = kha_System.resumeListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.pause = function() {
	var _g = 0;
	var _g1 = kha_System.pauseListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.windowWidth(windowId);
};
kha_System.windowHeight = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.windowHeight(windowId);
};
kha_System.screenDpi = function() {
	return kha_SystemImpl.screenDpi();
};
kha_System.get_screenRotation = function() {
	return kha_SystemImpl.getScreenRotation();
};
kha_System.get_vsync = function() {
	return kha_SystemImpl.getVsync();
};
kha_System.get_refreshRate = function() {
	return kha_SystemImpl.getRefreshRate();
};
kha_System.get_systemId = function() {
	return kha_SystemImpl.getSystemId();
};
kha_System.requestShutdown = function() {
	kha_SystemImpl.requestShutdown();
};
kha_System.changeResolution = function(width,height) {
	kha_SystemImpl.changeResolution(width,height);
};
kha_System.loadUrl = function(url) {
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = ["kha","GamepadStates"];
kha_GamepadStates.prototype = {
	axes: null
	,buttons: null
	,__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = ["kha","SystemImpl"];
kha_SystemImpl.initPerformanceTimer = function() {
	if(window.performance != null) {
		kha_SystemImpl.performance = window.performance;
	} else {
		kha_SystemImpl.performance = window.Date;
	}
};
kha_SystemImpl.errorHandler = function(message,source,lineno,colno,error) {
	window.console.error(error.stack);
	return true;
};
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.init2();
	callback();
};
kha_SystemImpl.initEx = function(title,options,windowCallback,callback) {
	haxe_Log.trace("initEx is not supported on the html5 target, running init() with first window options",{ fileName : "SystemImpl.hx", lineNumber : 80, className : "kha.SystemImpl", methodName : "initEx"});
	kha_SystemImpl.init({ title : title, width : options[0].width, height : options[0].height},callback);
	if(windowCallback != null) {
		windowCallback(0);
	}
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	} else {
		return false;
	}
};
kha_SystemImpl.windowWidth = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.khanvas.width;
};
kha_SystemImpl.windowHeight = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.khanvas.height;
};
kha_SystemImpl.screenDpi = function() {
	var dpiElement = window.document.createElement("div");
	dpiElement.style.position = "absolute";
	dpiElement.style.width = "1in";
	dpiElement.style.height = "1in";
	dpiElement.style.left = "-100%";
	dpiElement.style.top = "-100%";
	window.document.body.appendChild(dpiElement);
	var dpi = dpiElement.offsetHeight;
	dpiElement.remove();
	return dpi;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getScreenRotation = function() {
	return kha_ScreenRotation.RotationNone;
};
kha_SystemImpl.getTime = function() {
	return kha_SystemImpl.performance.now() / 1000;
};
kha_SystemImpl.getVsync = function() {
	return true;
};
kha_SystemImpl.getRefreshRate = function() {
	return 60;
};
kha_SystemImpl.getSystemId = function() {
	return "HTML5";
};
kha_SystemImpl.requestShutdown = function() {
	window.close();
};
kha_SystemImpl.init2 = function(backbufferFormat) {
	haxe_Log.trace = js_Boot.__trace;
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	var _g1 = 0;
	var _g = kha_SystemImpl.maxGamepads;
	while(_g1 < _g) {
		var i = _g1++;
		kha_SystemImpl.gamepads[i] = new kha_input_Gamepad(i);
		kha_SystemImpl.gamepadStates[i] = new kha_GamepadStates();
	}
	kha_SystemImpl.pressedKeys = [];
	var _g2 = 0;
	while(_g2 < 256) {
		var i1 = _g2++;
		kha_SystemImpl.pressedKeys.push(false);
	}
	var _g3 = 0;
	while(_g3 < 256) {
		var i2 = _g3++;
		kha_SystemImpl.pressedKeys.push(null);
	}
	kha_SystemImpl.buttonspressed = [];
	var _g4 = 0;
	while(_g4 < 10) {
		var i3 = _g4++;
		kha_SystemImpl.buttonspressed.push(false);
	}
	kha_CanvasImage.init();
	kha_SystemImpl.initPerformanceTimer();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished();
	kha_EnvironmentVariables.instance = new kha_js_EnvironmentVariables();
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepadButton = function(pad,num) {
	if(kha_SystemImpl.buttonspressed[num]) {
		if(pad.buttons[num] < 0.5) {
			kha_SystemImpl.buttonspressed[num] = false;
		}
	} else if(pad.buttons[num] > 0.5) {
		kha_SystemImpl.buttonspressed[num] = true;
	}
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g1 = 0;
	var _g = pad.axes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(pad.axes[i] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != pad.axes[i]) {
				var axis = pad.axes[i];
				if(i % 2 == 1) {
					axis = -axis;
				}
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g11 = 0;
	var _g2 = pad.buttons.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.loadFinished = function() {
	var canvas = window.document.getElementById("khanvas");
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.samplesPerPixel > 1, stencil : true, preserveDrawingBuffer : true});
		if(kha_SystemImpl.gl != null) {
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			gl = true;
			kha_Shaders.init();
		}
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		haxe_Log.trace(e,{ fileName : "SystemImpl.hx", lineNumber : 289, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	kha_SystemImpl.setCanvas(canvas);
	if(gl) {
		var g4 = gl?new kha_js_graphics4_Graphics():null;
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"),kha_System.windowWidth(),kha_System.windowHeight());
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_AudioElementAudio._compile();
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var b = false;
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.666666666666668);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = (navigator.getGamepads && navigator.getGamepads()) || (navigator.webkitGetGamepads && navigator.webkitGetGamepads());
		if(sysGamepads != null) {
			var _g1 = 0;
			var _g = sysGamepads.length;
			while(_g1 < _g) {
				var i = _g1++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepadButton(pad,0);
					kha_SystemImpl.checkGamepadButton(pad,1);
					kha_SystemImpl.checkGamepadButton(pad,12);
					kha_SystemImpl.checkGamepadButton(pad,13);
					kha_SystemImpl.checkGamepadButton(pad,14);
					kha_SystemImpl.checkGamepadButton(pad,15);
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		if(b) {
			b = !b;
			return;
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render(0,kha_SystemImpl.frame);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	var animate1 = animate;
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate1,16.666666666666668);
	} else {
		requestAnimationFrame(animate1);
	}
	if(canvas.getAttribute("tabindex") == null) {
		canvas.setAttribute("tabindex","0");
	}
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	canvas.onkeydown = kha_SystemImpl.keyDown;
	canvas.onkeyup = kha_SystemImpl.keyUp;
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	window.addEventListener("unload",kha_SystemImpl.unload);
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_Sys.khanvas ||
			document.mozPointerLockElement === kha_Sys.khanvas ||
			document.webkitPointerLockElement === kha_Sys.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.unload = function(_) {
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	event.preventDefault();
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	kha_SystemImpl.insideInputEvent = false;
	return false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		if(event.ctrlKey) {
			kha_SystemImpl.leftMouseCtrlDown = true;
			kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		} else {
			kha_SystemImpl.leftMouseCtrlDown = false;
			kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		}
		window.document.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		window.document.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		window.document.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	if(event.which != 1) {
		return;
	}
	window.document.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(kha_SystemImpl.leftMouseCtrlDown) {
		kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	} else {
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	}
	kha_SystemImpl.leftMouseCtrlDown = false;
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	if(event.which != 2) {
		return;
	}
	window.document.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	if(event.which != 3) {
		return;
	}
	window.document.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		if(!(event.mozMovementX || event.webkitMovementX)) {
			movementX = kha_SystemImpl.mouseX - lastMouseX;
		} else {
			movementX = true;
		}
		if(!(event.mozMovementY || event.webkitMovementY)) {
			movementY = kha_SystemImpl.mouseY - lastMouseY;
		} else {
			movementY = true;
		}
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_js_AEAudioChannel.catchUp();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		kha_SystemImpl.surface.sendMoveEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keycodeToChar = function(key,keycode,shift) {
	if(key != null) {
		if(key.length == 1) {
			return key;
		}
		switch(key) {
		case "Add":
			return "+";
		case "Divide":
			return "/";
		case "Multiply":
			return "*";
		case "Subtract":
			return "-";
		}
	}
	switch(keycode) {
	case 48:
		if(shift) {
			return "=";
		} else {
			return "0";
		}
		break;
	case 49:
		if(shift) {
			return "!";
		} else {
			return "1";
		}
		break;
	case 50:
		if(shift) {
			return "\"";
		} else {
			return "2";
		}
		break;
	case 51:
		if(shift) {
			return "§";
		} else {
			return "3";
		}
		break;
	case 52:
		if(shift) {
			return "$";
		} else {
			return "4";
		}
		break;
	case 53:
		if(shift) {
			return "%";
		} else {
			return "5";
		}
		break;
	case 54:
		if(shift) {
			return "&";
		} else {
			return "6";
		}
		break;
	case 55:
		if(shift) {
			return "/";
		} else {
			return "7";
		}
		break;
	case 56:
		if(shift) {
			return "(";
		} else {
			return "8";
		}
		break;
	case 57:
		if(shift) {
			return ")";
		} else {
			return "9";
		}
		break;
	case 106:
		return "*";
	case 107:
		return "+";
	case 109:
		return "-";
	case 111:
		return "/";
	case 187:
		if(shift) {
			return "*";
		} else {
			return "+";
		}
		break;
	case 188:
		if(shift) {
			return ";";
		} else {
			return ",";
		}
		break;
	case 189:
		if(shift) {
			return "_";
		} else {
			return "-";
		}
		break;
	case 190:
		if(shift) {
			return ":";
		} else {
			return ".";
		}
		break;
	case 191:
		if(shift) {
			return "'";
		} else {
			return "#";
		}
		break;
	case 212:
		if(shift) {
			return "`";
		} else {
			return "´";
		}
		break;
	case 219:
		if(shift) {
			return "?";
		} else {
			return "ß";
		}
		break;
	case 226:
		if(shift) {
			return ">";
		} else {
			return "<";
		}
		break;
	}
	if(keycode >= 96 && keycode <= 105) {
		return String.fromCharCode(-48 + keycode);
	}
	if(keycode >= 65 && keycode <= 90) {
		if(shift) {
			return String.fromCharCode(keycode);
		} else {
			return String.fromCharCode(keycode - 65 + 97);
		}
	}
	return String.fromCharCode(keycode);
};
kha_SystemImpl.keyDown = function(event) {
	event.stopPropagation();
	if(kha_SystemImpl.pressedKeys[event.keyCode]) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.pressedKeys[event.keyCode] = true;
	switch(event.keyCode) {
	case 8:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.BACKSPACE,"");
		event.preventDefault();
		break;
	case 9:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.TAB,"");
		event.preventDefault();
		break;
	case 13:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.ENTER,"");
		event.preventDefault();
		break;
	case 16:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.SHIFT,"");
		event.preventDefault();
		break;
	case 17:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.CTRL,"");
		event.preventDefault();
		break;
	case 18:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.ALT,"");
		event.preventDefault();
		break;
	case 27:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.ESC,"");
		event.preventDefault();
		break;
	case 32:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.CHAR," ");
		event.preventDefault();
		break;
	case 37:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.LEFT,"");
		event.preventDefault();
		break;
	case 38:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.UP,"");
		event.preventDefault();
		break;
	case 39:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.RIGHT,"");
		event.preventDefault();
		break;
	case 40:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.DOWN,"");
		event.preventDefault();
		break;
	case 46:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.DEL,"");
		event.preventDefault();
		break;
	default:
		if(!event.altKey) {
			kha_SystemImpl.keyboard.sendDownEvent(kha_Key.CHAR,kha_SystemImpl.keycodeToChar(event.key,event.keyCode,event.shiftKey));
		}
	}
};
kha_SystemImpl.keyUp = function(event) {
	event.preventDefault();
	event.stopPropagation();
	kha_SystemImpl.pressedKeys[event.keyCode] = false;
	switch(event.keyCode) {
	case 8:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.BACKSPACE,"");
		break;
	case 9:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.TAB,"");
		break;
	case 13:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.ENTER,"");
		break;
	case 16:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.SHIFT,"");
		break;
	case 17:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.CTRL,"");
		break;
	case 18:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.ALT,"");
		break;
	case 27:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.ESC,"");
		break;
	case 32:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.CHAR," ");
		break;
	case 37:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.LEFT,"");
		break;
	case 38:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.UP,"");
		break;
	case 39:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.RIGHT,"");
		break;
	case 40:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.DOWN,"");
		break;
	case 46:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.DEL,"");
		break;
	default:
		if(!event.altKey) {
			kha_SystemImpl.keyboard.sendUpEvent(kha_Key.CHAR,kha_SystemImpl.keycodeToChar(event.key,event.keyCode,event.shiftKey));
		}
	}
};
kha_SystemImpl.canSwitchFullscreen = function() {
	return 'fullscreenElement ' in document ||
		'mozFullScreenElement' in document ||
		'webkitFullscreenElement' in document ||
		'msFullscreenElement' in document
		;
};
kha_SystemImpl.isFullscreen = function() {
	return document.fullscreenElement === this.khanvas ||
			document.mozFullScreenElement === this.khanvas ||
			document.webkitFullscreenElement === this.khanvas ||
			document.msFullscreenElement === this.khanvas ;
};
kha_SystemImpl.requestFullscreen = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestFullscreen))) {
		kha_SystemImpl.khanvas.requestFullscreen();
	} else if(kha_SystemImpl.khanvas.msRequestFullscreen) {
		kha_SystemImpl.khanvas.msRequestFullscreen();
	} else if(kha_SystemImpl.khanvas.mozRequestFullScreen) {
		kha_SystemImpl.khanvas.mozRequestFullScreen();
	} else if(kha_SystemImpl.khanvas.webkitRequestFullscreen) {
		kha_SystemImpl.khanvas.webkitRequestFullscreen();
	}
};
kha_SystemImpl.exitFullscreen = function() {
	if(document.exitFullscreen) {
		document.exitFullscreen();
	} else if(document.msExitFullscreen) {
		document.msExitFullscreen();
	} else if(document.mozCancelFullScreen) {
		document.mozCancelFullScreen();
	} else if(document.webkitExitFullscreen) {
		document.webkitExitFullscreen();
	}
};
kha_SystemImpl.changeResolution = function(width,height) {
};
kha_SystemImpl.setKeepScreenOn = function(on) {
};
kha_SystemImpl.prototype = {
	notifyOfFullscreenChange: function(func,error) {
		window.document.addEventListener("fullscreenchange",func,false);
		window.document.addEventListener("mozfullscreenchange",func,false);
		window.document.addEventListener("webkitfullscreenchange",func,false);
		window.document.addEventListener("MSFullscreenChange",func,false);
		window.document.addEventListener("fullscreenerror",error,false);
		window.document.addEventListener("mozfullscreenerror",error,false);
		window.document.addEventListener("webkitfullscreenerror",error,false);
		window.document.addEventListener("MSFullscreenError",error,false);
	}
	,removeFromFullscreenChange: function(func,error) {
		window.document.removeEventListener("fullscreenchange",func,false);
		window.document.removeEventListener("mozfullscreenchange",func,false);
		window.document.removeEventListener("webkitfullscreenchange",func,false);
		window.document.removeEventListener("MSFullscreenChange",func,false);
		window.document.removeEventListener("fullscreenerror",error,false);
		window.document.removeEventListener("mozfullscreenerror",error,false);
		window.document.removeEventListener("webkitfullscreenerror",error,false);
		window.document.removeEventListener("MSFullscreenError",error,false);
	}
	,__class__: kha_SystemImpl
};
var kha_Video = function() {
};
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = ["kha","Video"];
kha_Video.__interfaces__ = [kha_Resource];
kha_Video.prototype = {
	width: function() {
		return 100;
	}
	,height: function() {
		return 100;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
	}
	,pause: function() {
	}
	,stop: function() {
	}
	,getLength: function() {
		return 0;
	}
	,getCurrentPos: function() {
		return 0;
	}
	,getVolume: function() {
		return 1;
	}
	,setVolume: function(volume) {
	}
	,isFinished: function() {
		return this.getCurrentPos() >= this.getLength();
	}
	,unload: function() {
	}
	,__class__: kha_Video
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat) {
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = ["kha","WebGLImage"];
kha_WebGLImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_WebGLImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_WebGLImage.context.globalCompositeOperation = "copy";
	}
};
kha_WebGLImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format[1]) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,frameBuffer: null
	,renderBuffer: null
	,texture: null
	,depthTexture: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,depthStencilFormat: null
	,get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return kha__$Color_Color_$Impl_$.Black;
			} else {
				this.createImageData();
			}
		}
		return kha__$Color_Color_$Impl_$._new(this.data.data[y * (this.image.width | 0) * 4 + x * 4]);
	}
	,createImageData: function() {
		kha_WebGLImage.context.strokeStyle = "rgba(0,0,0,0)";
		kha_WebGLImage.context.fillStyle = "rgba(0,0,0,0)";
		kha_WebGLImage.context.fillRect(0,0,this.image.width,this.image.height);
		kha_WebGLImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
		this.data = kha_WebGLImage.context.getImageData(0,0,this.image.width,this.image.height);
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			var _g = this.format;
			switch(_g[1]) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_realWidth(),this.get_realHeight(),0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_realWidth(),this.get_realHeight(),0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(navigator.appVersion.indexOf("Win") == -1) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			var _g1 = this.format;
			switch(_g1[1]) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.myWidth,this.myHeight,0,6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
	}
	,setDepthStencilFrom: function(image) {
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,(js_Boot.__cast(image , kha_WebGLImage)).depthTexture,0);
	}
	,bytesToArray: function(bytes) {
		switch(this.format[1]) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			switch(this.format[1]) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g1 = 0;
					var _g = this.get_height();
					while(_g1 < _g) {
						var y = _g1++;
						var _g3 = 0;
						var _g2 = this.get_width();
						while(_g3 < _g2) {
							var x = _g3++;
							var value = this.bytes.b[y * this.get_width() + x];
							rgbaBytes.b[y * this.get_width() * 4 + x * 4] = value & 255;
							rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 1] = value & 255;
							rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 2] = value & 255;
							rgbaBytes.b[y * this.get_width() * 4 + x * 4 + 3] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_width(),this.get_height(),0,6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_width(),this.get_height(),0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,setMipmaps: function(mipmaps) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.format != kha_graphics4_TextureFormat.RGBA32) {
			var _g1 = 0;
			var _g = mipmaps.length;
			while(_g1 < _g) {
				var i = _g1++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,this.format == kha_graphics4_TextureFormat.RGBA128?5126:kha_SystemImpl.halfFloat.HALF_FLOAT_OES,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else {
			var _g11 = 0;
			var _g2 = mipmaps.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				kha_SystemImpl.gl.texImage2D(3553,i1 + 1,6408,6408,5121,(js_Boot.__cast(mipmaps[i1] , kha_WebGLImage)).image);
			}
		}
	}
	,__class__: kha_WebGLImage
});
var kha_Mode = $hxClasses["kha.Mode"] = { __ename__ : ["kha","Mode"], __constructs__ : ["Window","BorderlessWindow","Fullscreen"] };
kha_Mode.Window = ["Window",0];
kha_Mode.Window.toString = $estr;
kha_Mode.Window.__enum__ = kha_Mode;
kha_Mode.BorderlessWindow = ["BorderlessWindow",1];
kha_Mode.BorderlessWindow.toString = $estr;
kha_Mode.BorderlessWindow.__enum__ = kha_Mode;
kha_Mode.Fullscreen = ["Fullscreen",2];
kha_Mode.Fullscreen.toString = $estr;
kha_Mode.Fullscreen.__enum__ = kha_Mode;
var kha_Position = $hxClasses["kha.Position"] = { __ename__ : ["kha","Position"], __constructs__ : ["Center","Fixed"] };
kha_Position.Center = ["Center",0];
kha_Position.Center.toString = $estr;
kha_Position.Center.__enum__ = kha_Position;
kha_Position.Fixed = function(v) { var $x = ["Fixed",1,v]; $x.__enum__ = kha_Position; $x.toString = $estr; return $x; };
var kha_TargetDisplay = $hxClasses["kha.TargetDisplay"] = { __ename__ : ["kha","TargetDisplay"], __constructs__ : ["Primary","ById"] };
kha_TargetDisplay.Primary = ["Primary",0];
kha_TargetDisplay.Primary.toString = $estr;
kha_TargetDisplay.Primary.__enum__ = kha_TargetDisplay;
kha_TargetDisplay.ById = function(id) { var $x = ["ById",1,id]; $x.__enum__ = kha_TargetDisplay; $x.toString = $estr; return $x; };
var kha_RendererOptions = function(textureFormat,depthStencilFormat,samplesPerPixel) {
	this.textureFormat = textureFormat;
	this.depthStencilFormat = depthStencilFormat;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.RendererOptions"] = kha_RendererOptions;
kha_RendererOptions.__name__ = ["kha","RendererOptions"];
kha_RendererOptions.prototype = {
	textureFormat: null
	,depthStencilFormat: null
	,samplesPerPixel: null
	,__class__: kha_RendererOptions
};
var kha_WindowedModeOptions = function(minimizable,maximizable,resizable) {
	this.minimizable = minimizable;
	this.maximizable = maximizable;
	this.resizable = resizable;
};
$hxClasses["kha.WindowedModeOptions"] = kha_WindowedModeOptions;
kha_WindowedModeOptions.__name__ = ["kha","WindowedModeOptions"];
kha_WindowedModeOptions.prototype = {
	minimizable: null
	,maximizable: null
	,resizable: null
	,__class__: kha_WindowedModeOptions
};
var kha_WindowOptions = function(width,height,mode,title,x,y,targetDisplay,rendererOptions,windowedModeOptions) {
	this.width = width;
	this.height = height;
	this.mode = mode;
	this.title = title;
	this.x = x;
	this.y = y;
	this.targetDisplay = targetDisplay;
	this.rendererOptions = rendererOptions;
	this.windowedModeOptions = windowedModeOptions;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = ["kha","WindowOptions"];
kha_WindowOptions.prototype = {
	width: null
	,height: null
	,mode: null
	,title: null
	,x: null
	,y: null
	,targetDisplay: null
	,rendererOptions: null
	,windowedModeOptions: null
	,__class__: kha_WindowOptions
};
var kha_arrays__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["kha.arrays._Float32Array.Float32Array_Impl_"] = kha_arrays__$Float32Array_Float32Array_$Impl_$;
kha_arrays__$Float32Array_Float32Array_$Impl_$.__name__ = ["kha","arrays","_Float32Array","Float32Array_Impl_"];
kha_arrays__$Float32Array_Float32Array_$Impl_$.__properties__ = {get_length:"get_length"}
kha_arrays__$Float32Array_Float32Array_$Impl_$._new = function(elements) {
	return new Float32Array(elements);
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.data = function(this1) {
	return this1;
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = ["kha","audio1","AudioChannel"];
kha_audio1_AudioChannel.prototype = {
	play: null
	,pause: null
	,stop: null
	,length: null
	,get_length: null
	,position: null
	,get_position: null
	,get_volume: null
	,set_volume: null
	,finished: null
	,get_finished: null
	,__class__: kha_audio1_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = ["kha","audio2","Audio"];
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e1 ) {
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(8192,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(2048,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.audioCallback(e.outputBuffer.length * 2,kha_audio2_Audio.buffer);
			var _g1 = 0;
			var _g = e.outputBuffer.length;
			while(_g1 < _g) {
				var i = _g1++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g11 = 0;
			var _g2 = e.outputBuffer.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var element = window.document.createElement("audio");
	element.src = URL.createObjectURL(new Blob([sound.compressedData.b.bufferValue],{ type : "audio/mp4"}));
	element.loop = loop;
	var channel = new kha_js_AEAudioChannel(element);
	channel.play();
	return channel;
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = ["kha","audio2","Audio1"];
kha_audio2_Audio1._init = function() {
	kha_audio2_Audio1.soundChannels = new Array(16);
	kha_audio2_Audio1.streamChannels = new Array(16);
	kha_audio2_Audio1.internalSoundChannels = new Array(16);
	kha_audio2_Audio1.internalStreamChannels = new Array(16);
	kha_audio2_Audio1.sampleCache1 = new Array(512);
	kha_audio2_Audio1.sampleCache2 = new Array(512);
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1._mix;
};
kha_audio2_Audio1.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1._mix = function(samples,buffer) {
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		kha_audio2_Audio1.sampleCache1 = new Array(samples);
		kha_audio2_Audio1.sampleCache2 = new Array(samples);
	}
	var _g1 = 0;
	var _g = samples;
	while(_g1 < _g) kha_audio2_Audio1.sampleCache2[_g1++] = 0;
	var _g2 = 0;
	while(_g2 < 16) {
		var i = _g2++;
		kha_audio2_Audio1.internalSoundChannels[i] = kha_audio2_Audio1.soundChannels[i];
	}
	var _g3 = 0;
	while(_g3 < 16) {
		var i1 = _g3++;
		kha_audio2_Audio1.internalStreamChannels[i1] = kha_audio2_Audio1.streamChannels[i1];
	}
	var _g4 = 0;
	var _g11 = kha_audio2_Audio1.internalSoundChannels;
	while(_g4 < _g11.length) {
		var channel = _g11[_g4];
		++_g4;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g31 = 0;
		var _g21 = samples;
		while(_g31 < _g21) {
			var i2 = _g31++;
			var _g41 = i2;
			var tmp = channel.get_volume();
			kha_audio2_Audio1.sampleCache2[_g41] = kha_audio2_Audio1.sampleCache2[_g41] + kha_audio2_Audio1.sampleCache1[i2] * tmp;
		}
	}
	var _g5 = 0;
	var _g12 = kha_audio2_Audio1.internalStreamChannels;
	while(_g5 < _g12.length) {
		var channel1 = _g12[_g5];
		++_g5;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g32 = 0;
		var _g22 = samples;
		while(_g32 < _g22) {
			var i3 = _g32++;
			var _g42 = i3;
			var tmp1 = channel1.get_volume();
			kha_audio2_Audio1.sampleCache2[_g42] = kha_audio2_Audio1.sampleCache2[_g42] + kha_audio2_Audio1.sampleCache1[i3] * tmp1;
		}
	}
	var _g13 = 0;
	var _g6 = samples;
	while(_g13 < _g6) {
		var index = buffer.writeLocation;
		var a = kha_audio2_Audio1.sampleCache2[_g13++];
		var a1 = a < 1.0?a:1.0;
		buffer.data[index] = a1 > -1.0?a1:-1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			channel = new kha_audio2_AudioChannel(loop);
			channel.data = sound.uncompressedData;
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
	return channel;
};
kha_audio2_Audio1.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var hardwareChannel = kha_audio2_Audio.stream(sound,loop);
	if(hardwareChannel != null) {
		return hardwareChannel;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
			channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
			kha_audio2_Audio1.streamChannels[i] = channel;
			break;
		}
	}
	return channel;
};
var kha_audio2_AudioChannel = function(looping) {
	this.paused = false;
	this.looping = looping;
	this.myVolume = 1;
	this.myPosition = 0;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = ["kha","audio2","AudioChannel"];
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	data: null
	,myVolume: null
	,myPosition: null
	,paused: null
	,looping: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			while(_g1 < length) samples[_g1++] = 0;
			return;
		}
		var _g11 = 0;
		while(_g11 < length) {
			var i = _g11++;
			if(this.myPosition >= this.data.length && this.looping) {
				this.myPosition = 0;
			}
			samples[i] = this.myPosition < this.data.length?this.data[this.myPosition]:0;
			++this.myPosition;
		}
	}
	,play: function() {
		this.paused = false;
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.myPosition = this.data.length;
	}
	,length: null
	,get_length: function() {
		return this.data.length / 44100 / 2;
	}
	,position: null
	,get_position: function() {
		return this.myPosition / 44100 / 2;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,finished: null
	,get_finished: function() {
		return this.myPosition >= this.data.length;
	}
	,__class__: kha_audio2_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	this.data = new Array(size);
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = ["kha","audio2","Buffer"];
kha_audio2_Buffer.prototype = {
	channels: null
	,samplesPerSecond: null
	,data: null
	,size: null
	,readLocation: null
	,writeLocation: null
	,__class__: kha_audio2_Buffer
};
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = ["kha","audio2","StreamChannel"];
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	reader: null
	,atend: null
	,loop: null
	,myVolume: null
	,paused: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			while(_g1 < length) samples[_g1++] = 0;
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g11 = count;
			while(_g11 < length) samples[_g11++] = 0;
		}
	}
	,play: function() {
		this.paused = false;
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.atend = true;
	}
	,length: null
	,get_length: function() {
		return this.reader.get_totalMillisecond() / 1000.0;
	}
	,position: null
	,get_position: function() {
		return this.reader.get_currentMillisecond() / 1000.0;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,finished: null
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = ["kha","audio2","ogg","tools","Crc32"];
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	kha_audio2_ogg_tools_Crc32.table = new Array(256);
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		var _g1 = 0;
		while(_g1 < 8) {
			var j = _g1++;
			s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31)?79764919:0);
		}
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
kha_audio2_ogg_tools_Crc32.update = function(crc,$byte) {
	return crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[$byte ^ crc >>> 24];
};
var kha_audio2_ogg_tools_MathTools = function() { };
$hxClasses["kha.audio2.ogg.tools.MathTools"] = kha_audio2_ogg_tools_MathTools;
kha_audio2_ogg_tools_MathTools.__name__ = ["kha","audio2","ogg","tools","MathTools"];
kha_audio2_ogg_tools_MathTools.ilog = function(n) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	if(n < 16384) {
		if(n < 16) {
			return log2_4[n];
		} else if(n < 512) {
			return 5 + log2_4[n >> 5];
		} else {
			return 10 + log2_4[n >> 10];
		}
	} else if(n < 16777216) {
		if(n < 524288) {
			return 15 + log2_4[n >> 15];
		} else {
			return 20 + log2_4[n >> 20];
		}
	} else if(n < 536870912) {
		return 25 + log2_4[n >> 25];
	} else if(n < -2147483648) {
		return 30 + log2_4[n >> 30];
	} else {
		return 0;
	}
};
var kha_audio2_ogg_tools_Mdct = function() { };
$hxClasses["kha.audio2.ogg.tools.Mdct"] = kha_audio2_ogg_tools_Mdct;
kha_audio2_ogg_tools_Mdct.__name__ = ["kha","audio2","ogg","tools","Mdct"];
kha_audio2_ogg_tools_Mdct.inverseTransform = function(buffer,n,a,b,c,bitReverse) {
	var n2 = n >> 1;
	var n4 = n >> 2;
	var n8 = n >> 3;
	var buf2 = new Array(n2);
	var dOffset = n2 - 2;
	var aaOffset = 0;
	var eOffset = 0;
	var eStopOffset = n2;
	while(eOffset != eStopOffset) {
		buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
		buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset += 4;
	}
	eOffset = n2 - 3;
	while(dOffset >= 0) {
		buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
		buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset -= 4;
	}
	var u = buffer;
	var v = buf2;
	var aaOffset1 = n2 - 8;
	var eOffset0 = n4;
	var eOffset1 = 0;
	var dOffset0 = n4;
	var dOffset1 = 0;
	while(aaOffset1 >= 0) {
		var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
		var v40_20 = v[eOffset0] - v[eOffset1];
		u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
		u[dOffset0] = v[eOffset0] + v[eOffset1];
		u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
		u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
		v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
		v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
		u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
		u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
		u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
		u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
		aaOffset1 -= 8;
		dOffset0 += 4;
		dOffset1 += 4;
		eOffset0 += 4;
		eOffset1 += 4;
	}
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384?n < 16?log2_4[n]:n < 512?5 + log2_4[n >> 5]:10 + log2_4[n >> 10]:n < 16777216?n < 524288?15 + log2_4[n >> 15]:20 + log2_4[n >> 20]:n < 536870912?25 + log2_4[n >> 25]:n < -2147483648?30 + log2_4[n >> 30]:0) - 1;
	var i_off = n2 - 1 - n4 * 0;
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + -(n >> 3);
	var aOffset = 0;
	var i = (n >> 4 >> 2) + 1;
	while(--i > 0) {
		var k00_20 = u[eeOffset0] - u[eeOffset2];
		var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
		var _g = eeOffset0;
		u[_g] = u[_g] + u[eeOffset2];
		var _g1 = eeOffset0 + -1;
		u[_g1] = u[_g1] + u[eeOffset2 + -1];
		u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
		k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
		var _g2 = eeOffset0 + -2;
		u[_g2] = u[_g2] + u[eeOffset2 + -2];
		var _g3 = eeOffset0 + -3;
		u[_g3] = u[_g3] + u[eeOffset2 + -3];
		u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
		k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
		var _g4 = eeOffset0 + -4;
		u[_g4] = u[_g4] + u[eeOffset2 + -4];
		var _g5 = eeOffset0 + -5;
		u[_g5] = u[_g5] + u[eeOffset2 + -5];
		u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
		k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
		var _g6 = eeOffset0 + -6;
		u[_g6] = u[_g6] + u[eeOffset2 + -6];
		var _g7 = eeOffset0 + -7;
		u[_g7] = u[_g7] + u[eeOffset2 + -7];
		u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
	var i_off1 = n2 - 1 - n4;
	var eeOffset01 = i_off1;
	var eeOffset21 = i_off1 + -(n >> 3);
	var aOffset1 = 0;
	var i1 = (n >> 4 >> 2) + 1;
	while(--i1 > 0) {
		var k00_201 = u[eeOffset01] - u[eeOffset21];
		var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
		var _g8 = eeOffset01;
		u[_g8] = u[_g8] + u[eeOffset21];
		var _g9 = eeOffset01 + -1;
		u[_g9] = u[_g9] + u[eeOffset21 + -1];
		u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
		k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
		var _g10 = eeOffset01 + -2;
		u[_g10] = u[_g10] + u[eeOffset21 + -2];
		var _g11 = eeOffset01 + -3;
		u[_g11] = u[_g11] + u[eeOffset21 + -3];
		u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
		k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
		var _g12 = eeOffset01 + -4;
		u[_g12] = u[_g12] + u[eeOffset21 + -4];
		var _g13 = eeOffset01 + -5;
		u[_g13] = u[_g13] + u[eeOffset21 + -5];
		u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
		k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
		var _g14 = eeOffset01 + -6;
		u[_g14] = u[_g14] + u[eeOffset21 + -6];
		var _g15 = eeOffset01 + -7;
		u[_g15] = u[_g15] + u[eeOffset21 + -7];
		u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		eeOffset01 -= 8;
		eeOffset21 -= 8;
	}
	var d0 = n2 - 1 - n8 * 0;
	var aOffset2 = 0;
	var eOffset01 = d0;
	var eOffset2 = d0 + -(n >> 4);
	var i2 = (n >> 5 >> 2) + 1;
	while(--i2 > 0) {
		var k00_202 = u[eOffset01] - u[eOffset2];
		var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
		var _g16 = eOffset01;
		u[_g16] = u[_g16] + u[eOffset2];
		var _g17 = eOffset01 + -1;
		u[_g17] = u[_g17] + u[eOffset2 + -1];
		u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
		k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
		var _g18 = eOffset01 + -2;
		u[_g18] = u[_g18] + u[eOffset2 + -2];
		var _g19 = eOffset01 + -3;
		u[_g19] = u[_g19] + u[eOffset2 + -3];
		u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
		k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
		var _g20 = eOffset01 + -4;
		u[_g20] = u[_g20] + u[eOffset2 + -4];
		var _g21 = eOffset01 + -5;
		u[_g21] = u[_g21] + u[eOffset2 + -5];
		u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
		k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
		var _g22 = eOffset01 + -6;
		u[_g22] = u[_g22] + u[eOffset2 + -6];
		var _g23 = eOffset01 + -7;
		u[_g23] = u[_g23] + u[eOffset2 + -7];
		u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		eOffset01 -= 8;
		eOffset2 -= 8;
		aOffset2 += 16;
	}
	var d01 = n2 - 1 - n8;
	var aOffset3 = 0;
	var eOffset02 = d01;
	var eOffset21 = d01 + -(n >> 4);
	var i3 = (n >> 5 >> 2) + 1;
	while(--i3 > 0) {
		var k00_203 = u[eOffset02] - u[eOffset21];
		var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
		var _g24 = eOffset02;
		u[_g24] = u[_g24] + u[eOffset21];
		var _g25 = eOffset02 + -1;
		u[_g25] = u[_g25] + u[eOffset21 + -1];
		u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
		k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
		var _g26 = eOffset02 + -2;
		u[_g26] = u[_g26] + u[eOffset21 + -2];
		var _g27 = eOffset02 + -3;
		u[_g27] = u[_g27] + u[eOffset21 + -3];
		u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
		k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
		var _g28 = eOffset02 + -4;
		u[_g28] = u[_g28] + u[eOffset21 + -4];
		var _g29 = eOffset02 + -5;
		u[_g29] = u[_g29] + u[eOffset21 + -5];
		u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
		k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
		var _g30 = eOffset02 + -6;
		u[_g30] = u[_g30] + u[eOffset21 + -6];
		var _g31 = eOffset02 + -7;
		u[_g31] = u[_g31] + u[eOffset21 + -7];
		u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		eOffset02 -= 8;
		eOffset21 -= 8;
		aOffset3 += 16;
	}
	var d02 = n2 - 1 - n8 * 2;
	var aOffset4 = 0;
	var eOffset03 = d02;
	var eOffset22 = d02 + -(n >> 4);
	var i4 = (n >> 5 >> 2) + 1;
	while(--i4 > 0) {
		var k00_204 = u[eOffset03] - u[eOffset22];
		var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
		var _g32 = eOffset03;
		u[_g32] = u[_g32] + u[eOffset22];
		var _g33 = eOffset03 + -1;
		u[_g33] = u[_g33] + u[eOffset22 + -1];
		u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
		k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
		var _g34 = eOffset03 + -2;
		u[_g34] = u[_g34] + u[eOffset22 + -2];
		var _g35 = eOffset03 + -3;
		u[_g35] = u[_g35] + u[eOffset22 + -3];
		u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
		k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
		var _g36 = eOffset03 + -4;
		u[_g36] = u[_g36] + u[eOffset22 + -4];
		var _g37 = eOffset03 + -5;
		u[_g37] = u[_g37] + u[eOffset22 + -5];
		u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
		k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
		var _g38 = eOffset03 + -6;
		u[_g38] = u[_g38] + u[eOffset22 + -6];
		var _g39 = eOffset03 + -7;
		u[_g39] = u[_g39] + u[eOffset22 + -7];
		u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		eOffset03 -= 8;
		eOffset22 -= 8;
		aOffset4 += 16;
	}
	var d03 = n2 - 1 - n8 * 3;
	var aOffset5 = 0;
	var eOffset04 = d03;
	var eOffset23 = d03 + -(n >> 4);
	var i5 = (n >> 5 >> 2) + 1;
	while(--i5 > 0) {
		var k00_205 = u[eOffset04] - u[eOffset23];
		var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
		var _g40 = eOffset04;
		u[_g40] = u[_g40] + u[eOffset23];
		var _g41 = eOffset04 + -1;
		u[_g41] = u[_g41] + u[eOffset23 + -1];
		u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
		k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
		var _g42 = eOffset04 + -2;
		u[_g42] = u[_g42] + u[eOffset23 + -2];
		var _g43 = eOffset04 + -3;
		u[_g43] = u[_g43] + u[eOffset23 + -3];
		u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
		k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
		var _g44 = eOffset04 + -4;
		u[_g44] = u[_g44] + u[eOffset23 + -4];
		var _g45 = eOffset04 + -5;
		u[_g45] = u[_g45] + u[eOffset23 + -5];
		u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
		k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
		var _g46 = eOffset04 + -6;
		u[_g46] = u[_g46] + u[eOffset23 + -6];
		var _g47 = eOffset04 + -7;
		u[_g47] = u[_g47] + u[eOffset23 + -7];
		u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		eOffset04 -= 8;
		eOffset23 -= 8;
		aOffset5 += 16;
	}
	var _g110 = 2;
	var _g48 = ld - 3 >> 1;
	while(_g110 < _g48) {
		var l = _g110++;
		var k0 = n >> l + 2;
		var k0_2 = k0 >> 1;
		var _g310 = 0;
		var _g210 = 1 << l + 1;
		while(_g310 < _g210) {
			var d04 = n2 - 1 - k0 * _g310++;
			var k1 = 1 << l + 3;
			var aOffset6 = 0;
			var eOffset05 = d04;
			var eOffset24 = d04 + -k0_2;
			var i6 = (n >> l + 4 >> 2) + 1;
			while(--i6 > 0) {
				var k00_206 = u[eOffset05] - u[eOffset24];
				var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
				var _g49 = eOffset05;
				u[_g49] = u[_g49] + u[eOffset24];
				var _g50 = eOffset05 + -1;
				u[_g50] = u[_g50] + u[eOffset24 + -1];
				u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
				k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
				var _g51 = eOffset05 + -2;
				u[_g51] = u[_g51] + u[eOffset24 + -2];
				var _g52 = eOffset05 + -3;
				u[_g52] = u[_g52] + u[eOffset24 + -3];
				u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
				k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
				var _g53 = eOffset05 + -4;
				u[_g53] = u[_g53] + u[eOffset24 + -4];
				var _g54 = eOffset05 + -5;
				u[_g54] = u[_g54] + u[eOffset24 + -5];
				u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
				k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
				var _g55 = eOffset05 + -6;
				u[_g55] = u[_g55] + u[eOffset24 + -6];
				var _g56 = eOffset05 + -7;
				u[_g56] = u[_g56] + u[eOffset24 + -7];
				u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				eOffset05 -= 8;
				eOffset24 -= 8;
				aOffset6 += k1;
			}
		}
	}
	var _g111 = ld - 3 >> 1;
	var _g57 = ld - 6;
	while(_g111 < _g57) {
		var l1 = _g111++;
		var k01 = n >> l1 + 2;
		var k11 = 1 << l1 + 3;
		var k0_21 = k01 >> 1;
		var rlim = n >> l1 + 6;
		var lim = 1 << l1 + 1;
		var aOffset7 = 0;
		var i_off2 = n2 - 1;
		var r = rlim + 1;
		while(--r > 0) {
			var A0 = a[aOffset7];
			var A1 = a[aOffset7 + 1];
			var A2 = a[aOffset7 + k11];
			var A3 = a[aOffset7 + k11 + 1];
			var A4 = a[aOffset7 + k11 * 2];
			var A5 = a[aOffset7 + k11 * 2 + 1];
			var A6 = a[aOffset7 + k11 * 3];
			var A7 = a[aOffset7 + k11 * 3 + 1];
			var eeOffset02 = i_off2;
			var eeOffset22 = i_off2 + -k0_21;
			var i7 = lim + 1;
			while(--i7 > 0) {
				var k00 = u[eeOffset02] - u[eeOffset22];
				var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
				u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
				u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
				u[eeOffset22] = k00 * A0 - k111 * A1;
				u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
				k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
				k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
				u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
				u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
				u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
				u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
				k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
				k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
				u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
				u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
				u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
				u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
				k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
				k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
				u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
				u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
				u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
				u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
				eeOffset02 -= k01;
				eeOffset22 -= k01;
			}
			aOffset7 += k11 * 4;
			i_off2 -= 8;
		}
	}
	var i_off3 = n2 - 1;
	var A21 = a[n >> 3];
	var zOffset = i_off3;
	var baseOffset = i_off3 - 16 * (n >> 5);
	while(zOffset > baseOffset) {
		var t0 = u[zOffset];
		var t1 = u[zOffset + -8];
		u[zOffset + -8] = t0 - t1;
		u[zOffset] = t0 + t1;
		t0 = u[zOffset + -1];
		t1 = u[zOffset + -9];
		u[zOffset + -9] = t0 - t1;
		u[zOffset + -1] = t0 + t1;
		t0 = u[zOffset + -2];
		t1 = u[zOffset + -10];
		var k001 = t0 - t1;
		u[zOffset + -2] = t0 + t1;
		t0 = u[zOffset + -3];
		t1 = u[zOffset + -11];
		var k112 = t0 - t1;
		u[zOffset + -3] = t0 + t1;
		u[zOffset + -10] = (k001 + k112) * A21;
		u[zOffset + -11] = (k112 - k001) * A21;
		t0 = u[zOffset + -4];
		t1 = u[zOffset + -12];
		k001 = t1 - t0;
		u[zOffset + -4] = t0 + t1;
		t0 = u[zOffset + -5];
		t1 = u[zOffset + -13];
		k112 = t0 - t1;
		u[zOffset + -5] = t0 + t1;
		u[zOffset + -12] = k112;
		u[zOffset + -13] = k001;
		t0 = u[zOffset + -6];
		t1 = u[zOffset + -14];
		k001 = t1 - t0;
		u[zOffset + -6] = t0 + t1;
		t0 = u[zOffset + -7];
		t1 = u[zOffset + -15];
		k112 = t0 - t1;
		u[zOffset + -7] = t0 + t1;
		u[zOffset + -14] = (k001 + k112) * A21;
		u[zOffset + -15] = (k001 - k112) * A21;
		var t01 = u[zOffset];
		var t11 = u[zOffset + -4];
		var k002 = t01 - t11;
		var y0 = t01 + t11;
		t01 = u[zOffset + -2];
		t11 = u[zOffset + -6];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		u[zOffset] = y0 + y2;
		u[zOffset + -2] = y0 - y2;
		var k33 = u[zOffset + -3] - u[zOffset + -7];
		u[zOffset + -4] = k002 + k33;
		u[zOffset + -6] = k002 - k33;
		t01 = u[zOffset + -1];
		t11 = u[zOffset + -5];
		var k113 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = u[zOffset + -3] + u[zOffset + -7];
		u[zOffset + -1] = y1 + y3;
		u[zOffset + -3] = y1 - y3;
		u[zOffset + -5] = k113 - k22;
		u[zOffset + -7] = k113 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = u[zOffset1];
		var t12 = u[zOffset1 + -4];
		var k003 = t02 - t12;
		var y01 = t02 + t12;
		t02 = u[zOffset1 + -2];
		t12 = u[zOffset1 + -6];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		u[zOffset1] = y01 + y21;
		u[zOffset1 + -2] = y01 - y21;
		var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
		u[zOffset1 + -4] = k003 + k331;
		u[zOffset1 + -6] = k003 - k331;
		t02 = u[zOffset1 + -1];
		t12 = u[zOffset1 + -5];
		var k114 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
		u[zOffset1 + -1] = y11 + y31;
		u[zOffset1 + -3] = y11 - y31;
		u[zOffset1 + -5] = k114 - k221;
		u[zOffset1 + -7] = k114 + k221;
		zOffset -= 16;
	}
	var brOffset = 0;
	var dOffset01 = n4 - 4;
	var dOffset11 = n2 - 4;
	while(dOffset01 >= 0) {
		var k4 = bitReverse[brOffset];
		v[dOffset11 + 3] = u[k4];
		v[dOffset11 + 2] = u[k4 + 1];
		v[dOffset01 + 3] = u[k4 + 2];
		v[dOffset01 + 2] = u[k4 + 3];
		k4 = bitReverse[brOffset + 1];
		v[dOffset11 + 1] = u[k4];
		v[dOffset11] = u[k4 + 1];
		v[dOffset01 + 1] = u[k4 + 2];
		v[dOffset01] = u[k4 + 3];
		dOffset01 -= 4;
		dOffset11 -= 4;
		brOffset += 2;
	}
	var cOffset = 0;
	var dOffset2 = 0;
	var eOffset3 = n2 - 4;
	while(dOffset2 < eOffset3) {
		var a02 = v[dOffset2] - v[eOffset3 + 2];
		var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
		var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
		var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
		var b2 = v[dOffset2] + v[eOffset3 + 2];
		var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
		v[dOffset2] = b2 + b0;
		v[dOffset2 + 1] = b3 + b1;
		v[eOffset3 + 2] = b2 - b0;
		v[eOffset3 + 3] = b1 - b3;
		a02 = v[dOffset2 + 2] - v[eOffset3];
		a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
		b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
		b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
		b2 = v[dOffset2 + 2] + v[eOffset3];
		b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
		v[dOffset2 + 2] = b2 + b0;
		v[dOffset2 + 3] = b3 + b1;
		v[eOffset3] = b2 - b0;
		v[eOffset3 + 1] = b1 - b3;
		cOffset += 4;
		dOffset2 += 4;
		eOffset3 -= 4;
	}
	var bOffset = n2 - 8;
	var eOffset4 = n2 - 8;
	var dOffset02 = 0;
	var dOffset12 = n2 - 4;
	var dOffset21 = n2;
	var dOffset3 = n - 4;
	while(eOffset4 >= 0) {
		var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
		var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
		buffer[dOffset02] = p3;
		buffer[dOffset12 + 3] = -p3;
		buffer[dOffset21] = p2;
		buffer[dOffset3 + 3] = p2;
		var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
		var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
		buffer[dOffset02 + 1] = p1;
		buffer[dOffset12 + 2] = -p1;
		buffer[dOffset21 + 1] = p0;
		buffer[dOffset3 + 2] = p0;
		p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
		p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
		buffer[dOffset02 + 2] = p3;
		buffer[dOffset12 + 1] = -p3;
		buffer[dOffset21 + 2] = p2;
		buffer[dOffset3 + 1] = p2;
		p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
		p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
		buffer[dOffset02 + 3] = p1;
		buffer[dOffset12] = -p1;
		buffer[dOffset21 + 3] = p0;
		buffer[dOffset3] = p0;
		bOffset -= 8;
		eOffset4 -= 8;
		dOffset02 += 4;
		dOffset21 += 4;
		dOffset12 -= 4;
		dOffset3 -= 4;
	}
};
kha_audio2_ogg_tools_Mdct.step3Iter0Loop = function(n,e,i_off,k_off,a) {
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var aOffset = 0;
	var i = (n >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eeOffset0] - e[eeOffset2];
		var k01_21 = e[eeOffset0 + -1] - e[eeOffset2 + -1];
		var _g = eeOffset0;
		e[_g] = e[_g] + e[eeOffset2];
		var _g1 = eeOffset0 + -1;
		e[_g1] = e[_g1] + e[eeOffset2 + -1];
		e[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -2] - e[eeOffset2 + -2];
		k01_21 = e[eeOffset0 + -3] - e[eeOffset2 + -3];
		var _g2 = eeOffset0 + -2;
		e[_g2] = e[_g2] + e[eeOffset2 + -2];
		var _g3 = eeOffset0 + -3;
		e[_g3] = e[_g3] + e[eeOffset2 + -3];
		e[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -4] - e[eeOffset2 + -4];
		k01_21 = e[eeOffset0 + -5] - e[eeOffset2 + -5];
		var _g4 = eeOffset0 + -4;
		e[_g4] = e[_g4] + e[eeOffset2 + -4];
		var _g5 = eeOffset0 + -5;
		e[_g5] = e[_g5] + e[eeOffset2 + -5];
		e[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -6] - e[eeOffset2 + -6];
		k01_21 = e[eeOffset0 + -7] - e[eeOffset2 + -7];
		var _g6 = eeOffset0 + -6;
		e[_g6] = e[_g6] + e[eeOffset2 + -6];
		var _g7 = eeOffset0 + -7;
		e[_g7] = e[_g7] + e[eeOffset2 + -7];
		e[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerRLoop = function(lim,e,d0,k_off,a,k1) {
	var aOffset = 0;
	var eOffset0 = d0;
	var eOffset2 = d0 + k_off;
	var i = (lim >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eOffset0] - e[eOffset2];
		var k01_21 = e[eOffset0 + -1] - e[eOffset2 + -1];
		var _g = eOffset0;
		e[_g] = e[_g] + e[eOffset2];
		var _g1 = eOffset0 + -1;
		e[_g1] = e[_g1] + e[eOffset2 + -1];
		e[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -2] - e[eOffset2 + -2];
		k01_21 = e[eOffset0 + -3] - e[eOffset2 + -3];
		var _g2 = eOffset0 + -2;
		e[_g2] = e[_g2] + e[eOffset2 + -2];
		var _g3 = eOffset0 + -3;
		e[_g3] = e[_g3] + e[eOffset2 + -3];
		e[eOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -4] - e[eOffset2 + -4];
		k01_21 = e[eOffset0 + -5] - e[eOffset2 + -5];
		var _g4 = eOffset0 + -4;
		e[_g4] = e[_g4] + e[eOffset2 + -4];
		var _g5 = eOffset0 + -5;
		e[_g5] = e[_g5] + e[eOffset2 + -5];
		e[eOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -6] - e[eOffset2 + -6];
		k01_21 = e[eOffset0 + -7] - e[eOffset2 + -7];
		var _g6 = eOffset0 + -6;
		e[_g6] = e[_g6] + e[eOffset2 + -6];
		var _g7 = eOffset0 + -7;
		e[_g7] = e[_g7] + e[eOffset2 + -7];
		e[eOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		eOffset0 -= 8;
		eOffset2 -= 8;
		aOffset += k1;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoop = function(n,e,i_off,k_off,a,aOffset0,aOffset1,k0) {
	var A0 = a[aOffset0];
	var A1 = a[aOffset0 + 1];
	var A2 = a[aOffset0 + aOffset1];
	var A3 = a[aOffset0 + aOffset1 + 1];
	var A4 = a[aOffset0 + aOffset1 * 2];
	var A5 = a[aOffset0 + aOffset1 * 2 + 1];
	var A6 = a[aOffset0 + aOffset1 * 3];
	var A7 = a[aOffset0 + aOffset1 * 3 + 1];
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var i = n + 1;
	while(--i > 0) {
		var k00 = e[eeOffset0] - e[eeOffset2];
		var k11 = e[eeOffset0 + -1] - e[eeOffset2 + -1];
		e[eeOffset0] = e[eeOffset0] + e[eeOffset2];
		e[eeOffset0 + -1] = e[eeOffset0 + -1] + e[eeOffset2 + -1];
		e[eeOffset2] = k00 * A0 - k11 * A1;
		e[eeOffset2 + -1] = k11 * A0 + k00 * A1;
		k00 = e[eeOffset0 + -2] - e[eeOffset2 + -2];
		k11 = e[eeOffset0 + -3] - e[eeOffset2 + -3];
		e[eeOffset0 + -2] = e[eeOffset0 + -2] + e[eeOffset2 + -2];
		e[eeOffset0 + -3] = e[eeOffset0 + -3] + e[eeOffset2 + -3];
		e[eeOffset2 + -2] = k00 * A2 - k11 * A3;
		e[eeOffset2 + -3] = k11 * A2 + k00 * A3;
		k00 = e[eeOffset0 + -4] - e[eeOffset2 + -4];
		k11 = e[eeOffset0 + -5] - e[eeOffset2 + -5];
		e[eeOffset0 + -4] = e[eeOffset0 + -4] + e[eeOffset2 + -4];
		e[eeOffset0 + -5] = e[eeOffset0 + -5] + e[eeOffset2 + -5];
		e[eeOffset2 + -4] = k00 * A4 - k11 * A5;
		e[eeOffset2 + -5] = k11 * A4 + k00 * A5;
		k00 = e[eeOffset0 + -6] - e[eeOffset2 + -6];
		k11 = e[eeOffset0 + -7] - e[eeOffset2 + -7];
		e[eeOffset0 + -6] = e[eeOffset0 + -6] + e[eeOffset2 + -6];
		e[eeOffset0 + -7] = e[eeOffset0 + -7] + e[eeOffset2 + -7];
		e[eeOffset2 + -6] = k00 * A6 - k11 * A7;
		e[eeOffset2 + -7] = k11 * A6 + k00 * A7;
		eeOffset0 -= k0;
		eeOffset2 -= k0;
	}
};
kha_audio2_ogg_tools_Mdct.iter54 = function(e,zOffset) {
	var t0 = e[zOffset];
	var t1 = e[zOffset + -4];
	var k00 = t0 - t1;
	var y0 = t0 + t1;
	t0 = e[zOffset + -2];
	t1 = e[zOffset + -6];
	var y2 = t0 + t1;
	var k22 = t0 - t1;
	e[zOffset] = y0 + y2;
	e[zOffset + -2] = y0 - y2;
	var k33 = e[zOffset + -3] - e[zOffset + -7];
	e[zOffset + -4] = k00 + k33;
	e[zOffset + -6] = k00 - k33;
	t0 = e[zOffset + -1];
	t1 = e[zOffset + -5];
	var k11 = t0 - t1;
	var y1 = t0 + t1;
	var y3 = e[zOffset + -3] + e[zOffset + -7];
	e[zOffset + -1] = y1 + y3;
	e[zOffset + -3] = y1 - y3;
	e[zOffset + -5] = k11 - k22;
	e[zOffset + -7] = k11 + k22;
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoopLd654 = function(n,e,i_off,a,baseN) {
	var A2 = a[baseN >> 3];
	var zOffset = i_off;
	var baseOffset = i_off - 16 * n;
	while(zOffset > baseOffset) {
		var t0 = e[zOffset];
		var t1 = e[zOffset + -8];
		e[zOffset + -8] = t0 - t1;
		e[zOffset] = t0 + t1;
		t0 = e[zOffset + -1];
		t1 = e[zOffset + -9];
		e[zOffset + -9] = t0 - t1;
		e[zOffset + -1] = t0 + t1;
		t0 = e[zOffset + -2];
		t1 = e[zOffset + -10];
		var k00 = t0 - t1;
		e[zOffset + -2] = t0 + t1;
		t0 = e[zOffset + -3];
		t1 = e[zOffset + -11];
		var k11 = t0 - t1;
		e[zOffset + -3] = t0 + t1;
		e[zOffset + -10] = (k00 + k11) * A2;
		e[zOffset + -11] = (k11 - k00) * A2;
		t0 = e[zOffset + -4];
		t1 = e[zOffset + -12];
		k00 = t1 - t0;
		e[zOffset + -4] = t0 + t1;
		t0 = e[zOffset + -5];
		t1 = e[zOffset + -13];
		k11 = t0 - t1;
		e[zOffset + -5] = t0 + t1;
		e[zOffset + -12] = k11;
		e[zOffset + -13] = k00;
		t0 = e[zOffset + -6];
		t1 = e[zOffset + -14];
		k00 = t1 - t0;
		e[zOffset + -6] = t0 + t1;
		t0 = e[zOffset + -7];
		t1 = e[zOffset + -15];
		k11 = t0 - t1;
		e[zOffset + -7] = t0 + t1;
		e[zOffset + -14] = (k00 + k11) * A2;
		e[zOffset + -15] = (k00 - k11) * A2;
		var t01 = e[zOffset];
		var t11 = e[zOffset + -4];
		var k001 = t01 - t11;
		var y0 = t01 + t11;
		t01 = e[zOffset + -2];
		t11 = e[zOffset + -6];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		e[zOffset] = y0 + y2;
		e[zOffset + -2] = y0 - y2;
		var k33 = e[zOffset + -3] - e[zOffset + -7];
		e[zOffset + -4] = k001 + k33;
		e[zOffset + -6] = k001 - k33;
		t01 = e[zOffset + -1];
		t11 = e[zOffset + -5];
		var k111 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = e[zOffset + -3] + e[zOffset + -7];
		e[zOffset + -1] = y1 + y3;
		e[zOffset + -3] = y1 - y3;
		e[zOffset + -5] = k111 - k22;
		e[zOffset + -7] = k111 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = e[zOffset1];
		var t12 = e[zOffset1 + -4];
		var k002 = t02 - t12;
		var y01 = t02 + t12;
		t02 = e[zOffset1 + -2];
		t12 = e[zOffset1 + -6];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		e[zOffset1] = y01 + y21;
		e[zOffset1 + -2] = y01 - y21;
		var k331 = e[zOffset1 + -3] - e[zOffset1 + -7];
		e[zOffset1 + -4] = k002 + k331;
		e[zOffset1 + -6] = k002 - k331;
		t02 = e[zOffset1 + -1];
		t12 = e[zOffset1 + -5];
		var k112 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = e[zOffset1 + -3] + e[zOffset1 + -7];
		e[zOffset1 + -1] = y11 + y31;
		e[zOffset1 + -3] = y11 - y31;
		e[zOffset1 + -5] = k112 - k221;
		e[zOffset1 + -7] = k112 + k221;
		zOffset -= 16;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = ["kha","audio2","ogg","vorbis","Reader"];
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var a1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(a2) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(a1,a2);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var a1 = input;
	decoder.setupSampleNumber(function(a2) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(a1,a2);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var length = bufferSize * header.channel;
	var buffer = new Array(length);
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g1 = 0;
		var _g = n * header.channel;
		while(_g1 < _g) output.writeInt32(haxe_io_FPHelper.floatToI32(buffer[_g1++]));
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	decoder: null
	,get_header: function() {
		return this.decoder.header;
	}
	,get_totalSample: function() {
		return this.decoder.totalSample;
	}
	,get_totalMillisecond: function() {
		return _$UInt_UInt_$Impl_$.toFloat(this.decoder.totalSample) / _$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * 1000;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		return _$UInt_UInt_$Impl_$.toFloat(this.get_currentSample()) / _$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * 1000;
	}
	,set_currentMillisecond: function(value) {
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	,loopStart: null
	,loopLength: null
	,seekFunc: null
	,inputLength: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,clone: function() {
		var reader = Type.createEmptyInstance(kha_audio2_ogg_vorbis_Reader);
		reader.seekFunc = this.seekFunc;
		reader.inputLength = this.inputLength;
		reader.decoder = this.decoder.clone(this.seekFunc);
		reader.loopStart = this.loopStart;
		reader.loopLength = this.loopLength;
		return reader;
	}
	,sampleToMillisecond: function(samples) {
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * 1000;
	}
	,millisecondToSample: function(millseconds) {
		return Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (millseconds / 1000));
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
	,__properties__: {set_currentMillisecond:"set_currentMillisecond",get_currentMillisecond:"get_currentMillisecond",set_currentSample:"set_currentSample",get_currentSample:"get_currentSample",get_totalMillisecond:"get_totalMillisecond",get_totalSample:"get_totalSample",get_header:"get_header"}
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = ["kha","audio2","ogg","vorbis","VorbisDecodeState"];
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	page: null
	,eof: null
	,pFirst: null
	,pLast: null
	,validBits: null
	,inputPosition: null
	,input: null
	,discardSamplesDeferred: null
	,segments: null
	,bytesInSeg: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,currentSample: null
	,previousWindow: null
	,previousLength: null
	,finalY: null
	,firstDecode: null
	,nextSeg: null
	,acc: null
	,lastSeg: null
	,lastSegWhich: null
	,endSegWithKnownLoc: null
	,knownLocForPacket: null
	,error: null
	,currentLoc: null
	,currentLocValid: null
	,firstAudioPageOffset: null
	,setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var vec = new Array(segmentCount);
		var _g1 = 0;
		var _g = segmentCount;
		while(_g1 < _g) vec[_g1++] = this.input.readByte();
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i = segmentCount - 1;
			while(i >= 0) {
				if(this.segments[i] < 255) {
					break;
				}
				if(i >= 0) {
					this.endSegWithKnownLoc = i;
					this.knownLocForPacket = loc0;
				}
				--i;
			}
		}
		if(this.firstDecode) {
			var i1 = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g11 = 0;
			var _g2 = segmentCount;
			while(_g11 < _g2) len += this.segments[_g11++];
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Type.createEmptyInstance(kha_audio2_ogg_vorbis_VorbisDecodeState);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,kha_audio2_ogg_vorbis_data_ReaderError) ) {
					this.lastSeg = true;
					this.error = e;
					return 0;
				} else throw(e);
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
					eof = true;
					x = 0;
				} else throw(e);
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						var a = this.acc;
						this.inputPosition += 1;
						this.acc = a + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,readPacketRaw: function() {
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			return -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			return this.input.readByte();
		}
	}
	,readPacket: function() {
		var x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		return x;
	}
	,flushPacket: function() {
		while(this.bytesInSeg != 0 || !this.lastSeg && this.next() != 0) {
			this.bytesInSeg--;
			this.inputPosition += 1;
			this.input.readByte();
		}
	}
	,vorbisValidate: function() {
		var header = new haxe_io_Bytes(new ArrayBuffer(6));
		var _g = 0;
		while(_g < 6) {
			var i = _g++;
			var x;
			if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
				x = -1;
			} else {
				this.bytesInSeg--;
				this.inputPosition += 1;
				x = this.input.readByte();
			}
			this.validBits = 0;
			header.b[i] = x & 255;
		}
		if(header.toString() != "vorbis") {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "VorbisDecodeState.hx", lineNumber : 307, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "VorbisDecodeState.hx", lineNumber : 310, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,capturePattern: function() {
		var tmp;
		var tmp1;
		var tmp2;
		this.inputPosition += 1;
		if(this.input.readByte() == 79) {
			this.inputPosition += 1;
			tmp2 = this.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			this.inputPosition += 1;
			tmp1 = this.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			this.inputPosition += 1;
			tmp = this.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 323, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
	}
	,skip: function(len) {
		this.inputPosition += len;
		var vec = new Array(len);
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) vec[_g1++] = this.input.readByte();
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					var a = this.acc;
					this.inputPosition += 1;
					this.acc = a + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,decode: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		var val;
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = this.decodeScalarRaw(c);
		}
		if(c.sparse) {
			val = c.sortedValues[val];
		}
		return val;
	}
	,decodeRaw: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				return -1;
			} else {
				return i;
			}
		} else {
			return this.decodeScalarRaw(c);
		}
	}
	,isLastByte: function() {
		if(this.bytesInSeg == 0) {
			return this.lastSeg;
		} else {
			return false;
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc?0:currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,readInt32: function() {
		this.inputPosition += 4;
		return this.input.readInt32();
	}
	,readByte: function() {
		this.inputPosition += 1;
		return this.input.readByte();
	}
	,read: function(n) {
		this.inputPosition += n;
		var vec = new Array(n);
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) vec[_g1++] = this.input.readByte();
		return vec;
	}
	,readBytes: function(n) {
		this.inputPosition += n;
		return this.input.read(n);
	}
	,readString: function(n) {
		this.inputPosition += n;
		return this.input.readString(n);
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset)?inputLength - 65536:this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g[1]) {
		case 0:
			end = _g[2];
			last = _g[3];
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 518, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
			break;
		}
		var lastPageLoc = this.inputPosition;
		try {
			while(!last) {
				seekFunc(this.inputPosition = end);
				var _g1 = this.findPage(seekFunc,inputLength);
				switch(_g1[1]) {
				case 0:
					end = _g1[2];
					last = _g1[3];
					break;
				case 1:
					throw "__break__";
					break;
				}
				previousSafe = lastPageLoc + 1;
				lastPageLoc = this.inputPosition;
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var vec = new Array(6);
		var _g11 = 0;
		var _g2 = 6;
		while(_g11 < _g2) vec[_g11++] = this.input.readByte();
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 552, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,forcePageResync: function() {
		this.nextSeg = -1;
	}
	,setInputOffset: function(seekFunc,n) {
		seekFunc(this.inputPosition = n);
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				if(this.input.readByte() == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var header = new Array(27);
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					var _g = 4;
					while(_g < 27) {
						var i = _g++;
						this.inputPosition += 1;
						header[i] = this.input.readByte();
					}
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					var _g1 = 22;
					while(_g1 < 26) header[_g1++] = 0;
					var crc = 0;
					var _g2 = 0;
					while(_g2 < 27) crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[_g2++] ^ crc >>> 24];
					var len = 0;
					try {
						var _g11 = 0;
						var _g3 = header[26];
						while(_g11 < _g3) {
							var i1 = _g11++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g12 = 0;
						var _g4 = len;
						while(_g12 < _g4) {
							var i2 = _g12++;
							this.inputPosition += 1;
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[this.input.readByte() ^ crc >>> 24];
						}
					} catch( e ) {
						if (e instanceof js__$Boot_HaxeError) e = e.val;
						if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else throw(e);
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			if( js_Boot.__instanceof(e1,haxe_io_Eof) ) {
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else throw(e1);
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var packetType = new Array(255);
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var vec = new Array(27);
		var _g1 = 0;
		var _g = 27;
		while(_g1 < _g) vec[_g1++] = this.input.readByte();
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var vec1 = new Array(n);
		var _g11 = 0;
		var _g2 = n;
		while(_g11 < _g2) vec1[_g11++] = this.input.readByte();
		var lacing = vec1;
		var len = 0;
		var _g12 = 0;
		var _g3 = pageHeader[26];
		while(_g12 < _g3) len += lacing[_g12++];
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g13 = 0;
		var _g4 = pageHeader[26];
		while(_g13 < _g4) {
			var i = _g13++;
			if(packetStart) {
				if(lacing[i] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				n1 &= (1 << (n2 < 16384?n2 < 16?log2_4[n2]:n2 < 512?5 + log2_4[n2 >> 5]:10 + log2_4[n2 >> 10]:n2 < 16777216?n2 < 524288?15 + log2_4[n2 >> 15]:20 + log2_4[n2 >> 20]:n2 < 536870912?25 + log2_4[n2 >> 25]:n2 < -2147483648?30 + log2_4[n2 >> 30]:0)) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = lacing[i] - 1;
				this.inputPosition += len1;
				var vec2 = new Array(len1);
				var _g14 = 0;
				var _g5 = len1;
				while(_g14 < _g5) vec2[_g14++] = this.input.readByte();
			} else {
				var len2 = lacing[i];
				this.inputPosition += len2;
				var vec3 = new Array(len2);
				var _g15 = 0;
				var _g6 = len2;
				while(_g15 < _g6) vec3[_g15++] = this.input.readByte();
			}
			packetStart = lacing[i] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1]?h.blocksize1:h.blocksize0;
		}
		var i1 = numPacket - 2;
		while(i1 >= 1) {
			--i1;
			if(packetType[i1]) {
				if(packetType[i1 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i1;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8?sortedCodewords != null:codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g1 = 0;
		var _g = c.entries;
		while(_g1 < _g) {
			var i = _g1++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 846, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxClasses["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : ["kha","audio2","ogg","vorbis","_VorbisDecodeState","FindPageResult"], __constructs__ : ["Found","NotFound"] };
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found = function(end,last) { var $x = ["Found",0,end,last]; $x.__enum__ = kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult; $x.toString = $estr; return $x; };
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound = ["NotFound",1];
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound.toString = $estr;
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound.__enum__ = kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult;
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var length = header.channel;
	this.channelBuffers = new Array(length);
	var length1 = header.channel;
	this.previousWindow = new Array(length1);
	var length2 = header.channel;
	this.finalY = new Array(length2);
	var _g1 = 0;
	var _g = header.channel;
	while(_g1 < _g) {
		var i = _g1++;
		var len = header.blocksize1;
		this.channelBuffers[i] = new Array(len);
		var len1 = header.blocksize1 / 2 | 0;
		this.previousWindow[i] = new Array(len1);
		this.finalY[i] = [];
	}
	this.a = new Array(2);
	this.b = new Array(2);
	this.c = new Array(2);
	this.window = new Array(2);
	this.bitReverseData = new Array(2);
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = ["kha","audio2","ogg","vorbis","VorbisDecoder"];
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(kha_audio2_ogg_vorbis_data_Header.read(decodeState),decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	previousWindow: null
	,previousLength: null
	,finalY: null
	,a: null
	,b: null
	,c: null
	,window: null
	,bitReverseData: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,header: null
	,currentSample: null
	,totalSample: null
	,decodeState: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate) | 0) != 0) {
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(_$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g1 = this.channelBufferStart;
			var _g = this.channelBufferStart + k;
			while(_g1 < _g) {
				var j = _g1++;
				var _g3 = 0;
				while(_g3 < sampleRepeat) {
					++_g3;
					var _g5 = 0;
					var _g4 = this.header.channel;
					while(_g5 < _g4) {
						var i = _g5++;
						var _g7 = 0;
						while(_g7 < channelRepeat) {
							++_g7;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g11 = n;
		var _g2 = len;
		while(_g11 < _g2) {
			++_g11;
			var _g31 = 0;
			while(_g31 < sampleRepeat) {
				++_g31;
				var _g51 = 0;
				var _g41 = this.header.channel;
				while(_g51 < _g41) {
					++_g51;
					var _g71 = 0;
					while(_g71 < channelRepeat) {
						++_g71;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					if(attempts >= 8) {
						probe = probe2;
					} else if(_$UInt_UInt_$Impl_$.gt(probe2,probe)) {
						probe = probe + (probe2 - probe >>> 1);
					} else {
						probe = probe2 + (probe - probe2 >>> 1);
					}
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				switch(this.decodeState.findPage(seekFunc,inputLength)[1]) {
				case 0:
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
					break;
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0?leftEnd:leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,clone: function(seekFunc) {
		var decoder = Type.createEmptyInstance(kha_audio2_ogg_vorbis_VorbisDecoder);
		decoder.currentSample = this.currentSample;
		decoder.totalSample = this.totalSample;
		decoder.previousLength = this.previousLength;
		decoder.channelBufferStart = this.channelBufferStart;
		decoder.channelBufferEnd = this.channelBufferEnd;
		decoder.a = this.a;
		decoder.b = this.b;
		decoder.c = this.c;
		decoder.window = this.window;
		decoder.bitReverseData = this.bitReverseData;
		decoder.header = this.header;
		decoder.decodeState = this.decodeState.clone(seekFunc);
		var length = this.header.channel;
		decoder.channelBuffers = new Array(length);
		var length1 = this.header.channel;
		decoder.previousWindow = new Array(length1);
		var length2 = this.header.channel;
		decoder.finalY = new Array(length2);
		var _g1 = 0;
		var _g = this.header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			decoder.channelBuffers[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.channelBuffers[i]);
			decoder.previousWindow[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.previousWindow[i]);
			decoder.finalY[i] = Lambda.array(this.finalY[i]);
		}
		return decoder;
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g1 = 0;
			var _g = this.header.channel;
			while(_g1 < _g) {
				var i = _g1++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g3 = 0;
				while(_g3 < n) {
					var j = _g3++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g11 = 0;
		var _g2 = this.header.channel;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g31 = 0;
			var _g21 = len - right;
			while(_g31 < _g21) {
				var j1 = _g31++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		this.a[bs] = new Array(n2);
		this.b[bs] = new Array(n2);
		this.c[bs] = new Array(n4);
		this.window[bs] = new Array(n2);
		this.bitReverseData[bs] = new Array(n8);
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype?1:0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var buf2 = new Array(n2);
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384?n < 16?log2_4[n]:n < 512?5 + log2_4[n >> 5]:10 + log2_4[n >> 10]:n < 16777216?n < 524288?15 + log2_4[n >> 15]:20 + log2_4[n >> 20]:n < 536870912?25 + log2_4[n >> 25]:n < -2147483648?30 + log2_4[n >> 30]:0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
			var _g = eeOffset0;
			u[_g] = u[_g] + u[eeOffset2];
			var _g1 = eeOffset0 + -1;
			u[_g1] = u[_g1] + u[eeOffset2 + -1];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
			k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
			var _g2 = eeOffset0 + -2;
			u[_g2] = u[_g2] + u[eeOffset2 + -2];
			var _g3 = eeOffset0 + -3;
			u[_g3] = u[_g3] + u[eeOffset2 + -3];
			u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
			k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
			var _g4 = eeOffset0 + -4;
			u[_g4] = u[_g4] + u[eeOffset2 + -4];
			var _g5 = eeOffset0 + -5;
			u[_g5] = u[_g5] + u[eeOffset2 + -5];
			u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
			k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
			var _g6 = eeOffset0 + -6;
			u[_g6] = u[_g6] + u[eeOffset2 + -6];
			var _g7 = eeOffset0 + -7;
			u[_g7] = u[_g7] + u[eeOffset2 + -7];
			u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = u[eeOffset01] - u[eeOffset21];
			var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
			var _g8 = eeOffset01;
			u[_g8] = u[_g8] + u[eeOffset21];
			var _g9 = eeOffset01 + -1;
			u[_g9] = u[_g9] + u[eeOffset21 + -1];
			u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
			k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
			var _g10 = eeOffset01 + -2;
			u[_g10] = u[_g10] + u[eeOffset21 + -2];
			var _g11 = eeOffset01 + -3;
			u[_g11] = u[_g11] + u[eeOffset21 + -3];
			u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
			k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
			var _g12 = eeOffset01 + -4;
			u[_g12] = u[_g12] + u[eeOffset21 + -4];
			var _g13 = eeOffset01 + -5;
			u[_g13] = u[_g13] + u[eeOffset21 + -5];
			u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
			k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
			var _g14 = eeOffset01 + -6;
			u[_g14] = u[_g14] + u[eeOffset21 + -6];
			var _g15 = eeOffset01 + -7;
			u[_g15] = u[_g15] + u[eeOffset21 + -7];
			u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = u[eOffset01] - u[eOffset2];
			var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
			var _g16 = eOffset01;
			u[_g16] = u[_g16] + u[eOffset2];
			var _g17 = eOffset01 + -1;
			u[_g17] = u[_g17] + u[eOffset2 + -1];
			u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
			k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
			var _g18 = eOffset01 + -2;
			u[_g18] = u[_g18] + u[eOffset2 + -2];
			var _g19 = eOffset01 + -3;
			u[_g19] = u[_g19] + u[eOffset2 + -3];
			u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
			k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
			var _g20 = eOffset01 + -4;
			u[_g20] = u[_g20] + u[eOffset2 + -4];
			var _g21 = eOffset01 + -5;
			u[_g21] = u[_g21] + u[eOffset2 + -5];
			u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
			k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
			var _g22 = eOffset01 + -6;
			u[_g22] = u[_g22] + u[eOffset2 + -6];
			var _g23 = eOffset01 + -7;
			u[_g23] = u[_g23] + u[eOffset2 + -7];
			u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = u[eOffset02] - u[eOffset21];
			var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
			var _g24 = eOffset02;
			u[_g24] = u[_g24] + u[eOffset21];
			var _g25 = eOffset02 + -1;
			u[_g25] = u[_g25] + u[eOffset21 + -1];
			u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
			k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
			var _g26 = eOffset02 + -2;
			u[_g26] = u[_g26] + u[eOffset21 + -2];
			var _g27 = eOffset02 + -3;
			u[_g27] = u[_g27] + u[eOffset21 + -3];
			u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
			k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
			var _g28 = eOffset02 + -4;
			u[_g28] = u[_g28] + u[eOffset21 + -4];
			var _g29 = eOffset02 + -5;
			u[_g29] = u[_g29] + u[eOffset21 + -5];
			u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
			k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
			var _g30 = eOffset02 + -6;
			u[_g30] = u[_g30] + u[eOffset21 + -6];
			var _g31 = eOffset02 + -7;
			u[_g31] = u[_g31] + u[eOffset21 + -7];
			u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = u[eOffset03] - u[eOffset22];
			var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
			var _g32 = eOffset03;
			u[_g32] = u[_g32] + u[eOffset22];
			var _g33 = eOffset03 + -1;
			u[_g33] = u[_g33] + u[eOffset22 + -1];
			u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
			k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
			var _g34 = eOffset03 + -2;
			u[_g34] = u[_g34] + u[eOffset22 + -2];
			var _g35 = eOffset03 + -3;
			u[_g35] = u[_g35] + u[eOffset22 + -3];
			u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
			k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
			var _g36 = eOffset03 + -4;
			u[_g36] = u[_g36] + u[eOffset22 + -4];
			var _g37 = eOffset03 + -5;
			u[_g37] = u[_g37] + u[eOffset22 + -5];
			u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
			k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
			var _g38 = eOffset03 + -6;
			u[_g38] = u[_g38] + u[eOffset22 + -6];
			var _g39 = eOffset03 + -7;
			u[_g39] = u[_g39] + u[eOffset22 + -7];
			u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = u[eOffset04] - u[eOffset23];
			var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
			var _g40 = eOffset04;
			u[_g40] = u[_g40] + u[eOffset23];
			var _g41 = eOffset04 + -1;
			u[_g41] = u[_g41] + u[eOffset23 + -1];
			u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
			k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
			var _g42 = eOffset04 + -2;
			u[_g42] = u[_g42] + u[eOffset23 + -2];
			var _g43 = eOffset04 + -3;
			u[_g43] = u[_g43] + u[eOffset23 + -3];
			u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
			k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
			var _g44 = eOffset04 + -4;
			u[_g44] = u[_g44] + u[eOffset23 + -4];
			var _g45 = eOffset04 + -5;
			u[_g45] = u[_g45] + u[eOffset23 + -5];
			u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
			k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
			var _g46 = eOffset04 + -6;
			u[_g46] = u[_g46] + u[eOffset23 + -6];
			var _g47 = eOffset04 + -7;
			u[_g47] = u[_g47] + u[eOffset23 + -7];
			u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g110 = 2;
		var _g48 = ld - 3 >> 1;
		while(_g110 < _g48) {
			var l = _g110++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var _g310 = 0;
			var _g210 = 1 << l + 1;
			while(_g310 < _g210) {
				var d04 = n2 - 1 - k0 * _g310++;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i6 = (n >> l + 4 >> 2) + 1;
				while(--i6 > 0) {
					var k00_206 = u[eOffset05] - u[eOffset24];
					var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
					var _g49 = eOffset05;
					u[_g49] = u[_g49] + u[eOffset24];
					var _g50 = eOffset05 + -1;
					u[_g50] = u[_g50] + u[eOffset24 + -1];
					u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
					k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
					var _g51 = eOffset05 + -2;
					u[_g51] = u[_g51] + u[eOffset24 + -2];
					var _g52 = eOffset05 + -3;
					u[_g52] = u[_g52] + u[eOffset24 + -3];
					u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
					k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
					var _g53 = eOffset05 + -4;
					u[_g53] = u[_g53] + u[eOffset24 + -4];
					var _g54 = eOffset05 + -5;
					u[_g54] = u[_g54] + u[eOffset24 + -5];
					u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
					k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
					var _g55 = eOffset05 + -6;
					u[_g55] = u[_g55] + u[eOffset24 + -6];
					var _g56 = eOffset05 + -7;
					u[_g56] = u[_g56] + u[eOffset24 + -7];
					u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g111 = ld - 3 >> 1;
		var _g57 = ld - 6;
		while(_g111 < _g57) {
			var l1 = _g111++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var rlim = n >> l1 + 6;
			var lim = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i7 = lim + 1;
				while(--i7 > 0) {
					var k00 = u[eeOffset02] - u[eeOffset22];
					var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
					u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
					u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
					u[eeOffset22] = k00 * A0 - k111 * A1;
					u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
					k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
					k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
					u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
					u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
					u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
					u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
					k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
					k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
					u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
					u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
					u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
					u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
					k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
					k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
					u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
					u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
					u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
					u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + -8];
			u[zOffset + -8] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + -1];
			t1 = u[zOffset + -9];
			u[zOffset + -9] = t0 - t1;
			u[zOffset + -1] = t0 + t1;
			t0 = u[zOffset + -2];
			t1 = u[zOffset + -10];
			var k001 = t0 - t1;
			u[zOffset + -2] = t0 + t1;
			t0 = u[zOffset + -3];
			t1 = u[zOffset + -11];
			var k112 = t0 - t1;
			u[zOffset + -3] = t0 + t1;
			u[zOffset + -10] = (k001 + k112) * A21;
			u[zOffset + -11] = (k112 - k001) * A21;
			t0 = u[zOffset + -4];
			t1 = u[zOffset + -12];
			k001 = t1 - t0;
			u[zOffset + -4] = t0 + t1;
			t0 = u[zOffset + -5];
			t1 = u[zOffset + -13];
			k112 = t0 - t1;
			u[zOffset + -5] = t0 + t1;
			u[zOffset + -12] = k112;
			u[zOffset + -13] = k001;
			t0 = u[zOffset + -6];
			t1 = u[zOffset + -14];
			k001 = t1 - t0;
			u[zOffset + -6] = t0 + t1;
			t0 = u[zOffset + -7];
			t1 = u[zOffset + -15];
			k112 = t0 - t1;
			u[zOffset + -7] = t0 + t1;
			u[zOffset + -14] = (k001 + k112) * A21;
			u[zOffset + -15] = (k001 - k112) * A21;
			var t01 = u[zOffset];
			var t11 = u[zOffset + -4];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + -2];
			t11 = u[zOffset + -6];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + -2] = y0 - y2;
			var k33 = u[zOffset + -3] - u[zOffset + -7];
			u[zOffset + -4] = k002 + k33;
			u[zOffset + -6] = k002 - k33;
			t01 = u[zOffset + -1];
			t11 = u[zOffset + -5];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + -3] + u[zOffset + -7];
			u[zOffset + -1] = y1 + y3;
			u[zOffset + -3] = y1 - y3;
			u[zOffset + -5] = k113 - k22;
			u[zOffset + -7] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + -4];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + -2];
			t12 = u[zOffset1 + -6];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + -2] = y01 - y21;
			var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
			u[zOffset1 + -4] = k003 + k331;
			u[zOffset1 + -6] = k003 - k331;
			t02 = u[zOffset1 + -1];
			t12 = u[zOffset1 + -5];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
			u[zOffset1 + -1] = y11 + y31;
			u[zOffset1 + -3] = y11 - y31;
			u[zOffset1 + -5] = k114 - k221;
			u[zOffset1 + -7] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = v[dOffset2] - v[eOffset3 + 2];
			var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset2] + v[eOffset3 + 2];
			var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		return this.decodePacketRest(result);
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			var _this = this.decodeState;
			var tmp;
			if(_this.validBits < 0) {
				tmp = 0;
			} else if(_this.validBits < 1) {
				if(_this.validBits == 0) {
					_this.acc = 0;
				}
				while(true) {
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						_this.validBits = -1;
						break;
					} else {
						_this.bytesInSeg--;
						var a = _this.acc;
						_this.inputPosition += 1;
						_this.acc = a + (_this.input.readByte() << _this.validBits);
						_this.validBits += 8;
					}
					if(!(_this.validBits < 1)) {
						break;
					}
				}
				if(_this.validBits < 0) {
					tmp = 0;
				} else {
					var z = _this.acc & 1;
					_this.acc = _this.acc >>> 1;
					_this.validBits -= 1;
					tmp = z;
				}
			} else {
				var z1 = _this.acc & 1;
				_this.acc = _this.acc >>> 1;
				_this.validBits -= 1;
				tmp = z1;
			}
			if(tmp != 0) {
				while(true) {
					var _this1 = this.decodeState;
					var x;
					if(_this1.bytesInSeg == 0 && (_this1.lastSeg || _this1.next() == 0)) {
						x = -1;
					} else {
						_this1.bytesInSeg--;
						_this1.inputPosition += 1;
						x = _this1.input.readByte();
					}
					_this1.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var _this2 = this.decodeState;
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var n1 = n < 16384?n < 16?log2_4[n]:n < 512?5 + log2_4[n >> 5]:10 + log2_4[n >> 10]:n < 16777216?n < 524288?15 + log2_4[n >> 15]:20 + log2_4[n >> 20]:n < 536870912?25 + log2_4[n >> 25]:n < -2147483648?30 + log2_4[n >> 30]:0;
		var i;
		if(_this2.validBits < 0) {
			i = 0;
		} else if(_this2.validBits < n1) {
			if(n1 > 24) {
				i = _this2.readBits(24) + (_this2.readBits(n1 - 24) << 24);
			} else {
				if(_this2.validBits == 0) {
					_this2.acc = 0;
				}
				while(true) {
					if(_this2.bytesInSeg == 0 && (_this2.lastSeg || _this2.next() == 0)) {
						_this2.validBits = -1;
						break;
					} else {
						_this2.bytesInSeg--;
						var a1 = _this2.acc;
						_this2.inputPosition += 1;
						_this2.acc = a1 + (_this2.input.readByte() << _this2.validBits);
						_this2.validBits += 8;
					}
					if(!(_this2.validBits < n1)) {
						break;
					}
				}
				if(_this2.validBits < 0) {
					i = 0;
				} else {
					var z2 = _this2.acc & (1 << n1) - 1;
					_this2.acc = _this2.acc >>> n1;
					_this2.validBits -= n1;
					i = z2;
				}
			}
		} else {
			var z3 = _this2.acc & (1 << n1) - 1;
			_this2.acc = _this2.acc >>> n1;
			_this2.validBits -= n1;
			i = z3;
		}
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n2;
		var prev;
		var next;
		if(m.blockflag) {
			n2 = this.header.blocksize1;
			var _this3 = this.decodeState;
			if(_this3.validBits < 0) {
				prev = 0;
			} else if(_this3.validBits < 1) {
				if(_this3.validBits == 0) {
					_this3.acc = 0;
				}
				while(true) {
					if(_this3.bytesInSeg == 0 && (_this3.lastSeg || _this3.next() == 0)) {
						_this3.validBits = -1;
						break;
					} else {
						_this3.bytesInSeg--;
						var a2 = _this3.acc;
						_this3.inputPosition += 1;
						_this3.acc = a2 + (_this3.input.readByte() << _this3.validBits);
						_this3.validBits += 8;
					}
					if(!(_this3.validBits < 1)) {
						break;
					}
				}
				if(_this3.validBits < 0) {
					prev = 0;
				} else {
					var z4 = _this3.acc & 1;
					_this3.acc = _this3.acc >>> 1;
					_this3.validBits -= 1;
					prev = z4;
				}
			} else {
				var z5 = _this3.acc & 1;
				_this3.acc = _this3.acc >>> 1;
				_this3.validBits -= 1;
				prev = z5;
			}
			var _this4 = this.decodeState;
			if(_this4.validBits < 0) {
				next = 0;
			} else if(_this4.validBits < 1) {
				if(_this4.validBits == 0) {
					_this4.acc = 0;
				}
				while(true) {
					if(_this4.bytesInSeg == 0 && (_this4.lastSeg || _this4.next() == 0)) {
						_this4.validBits = -1;
						break;
					} else {
						_this4.bytesInSeg--;
						var a3 = _this4.acc;
						_this4.inputPosition += 1;
						_this4.acc = a3 + (_this4.input.readByte() << _this4.validBits);
						_this4.validBits += 8;
					}
					if(!(_this4.validBits < 1)) {
						break;
					}
				}
				if(_this4.validBits < 0) {
					next = 0;
				} else {
					var z6 = _this4.acc & 1;
					_this4.acc = _this4.acc >>> 1;
					_this4.validBits -= 1;
					next = z6;
				}
			} else {
				var z7 = _this4.acc & 1;
				_this4.acc = _this4.acc >>> 1;
				_this4.validBits -= 1;
				next = z7;
			}
		} else {
			next = 0;
			prev = 0;
			n2 = this.header.blocksize0;
		}
		var windowCenter = n2 >> 1;
		return { mode : i, left : m.blockflag && prev == 0?{ start : n2 - this.header.blocksize0 >> 2, end : n2 + this.header.blocksize0 >> 2}:{ start : 0, end : windowCenter}, right : m.blockflag && next == 0?{ start : n2 * 3 - this.header.blocksize0 >> 2, end : n2 * 3 + this.header.blocksize0 >> 2}:{ start : windowCenter, end : n2}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var zeroChannel = new Array(256);
		var reallyZeroChannel = new Array(256);
		var n = m.blockflag?this.header.blocksize1:this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g1 = 0;
		var _g = this.header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				var _this = this.decodeState;
				var tmp;
				if(_this.validBits < 0) {
					tmp = 0;
				} else if(_this.validBits < 1) {
					if(_this.validBits == 0) {
						_this.acc = 0;
					}
					while(true) {
						if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
							_this.validBits = -1;
							break;
						} else {
							_this.bytesInSeg--;
							var a = _this.acc;
							_this.inputPosition += 1;
							_this.acc = a + (_this.input.readByte() << _this.validBits);
							_this.validBits += 8;
						}
						if(!(_this.validBits < 1)) {
							break;
						}
					}
					if(_this.validBits < 0) {
						tmp = 0;
					} else {
						var z = _this.acc & 1;
						_this.acc = _this.acc >>> 1;
						_this.validBits -= 1;
						tmp = z;
					}
				} else {
					var z1 = _this.acc & 1;
					_this.acc = _this.acc >>> 1;
					_this.validBits -= 1;
					tmp = z1;
				}
				if(tmp != 0) {
					var fy = [];
					var step2Flag = new Array(256);
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var _this1 = this.decodeState;
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					var n1 = (range < 16384?range < 16?log2_4[range]:range < 512?5 + log2_4[range >> 5]:10 + log2_4[range >> 10]:range < 16777216?range < 524288?15 + log2_4[range >> 15]:20 + log2_4[range >> 20]:range < 536870912?25 + log2_4[range >> 25]:range < -2147483648?30 + log2_4[range >> 30]:0) - 1;
					var tmp1;
					if(_this1.validBits < 0) {
						tmp1 = 0;
					} else if(_this1.validBits < n1) {
						if(n1 > 24) {
							tmp1 = _this1.readBits(24) + (_this1.readBits(n1 - 24) << 24);
						} else {
							if(_this1.validBits == 0) {
								_this1.acc = 0;
							}
							while(true) {
								if(_this1.bytesInSeg == 0 && (_this1.lastSeg || _this1.next() == 0)) {
									_this1.validBits = -1;
									break;
								} else {
									_this1.bytesInSeg--;
									var a1 = _this1.acc;
									_this1.inputPosition += 1;
									_this1.acc = a1 + (_this1.input.readByte() << _this1.validBits);
									_this1.validBits += 8;
								}
								if(!(_this1.validBits < n1)) {
									break;
								}
							}
							if(_this1.validBits < 0) {
								tmp1 = 0;
							} else {
								var z2 = _this1.acc & (1 << n1) - 1;
								_this1.acc = _this1.acc >>> n1;
								_this1.validBits -= n1;
								tmp1 = z2;
							}
						}
					} else {
						var z3 = _this1.acc & (1 << n1) - 1;
						_this1.acc = _this1.acc >>> n1;
						_this1.validBits -= n1;
						tmp1 = z3;
					}
					fy[0] = tmp1;
					var _this2 = this.decodeState;
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					var n3 = (range < 16384?range < 16?log2_41[range]:range < 512?5 + log2_41[range >> 5]:10 + log2_41[range >> 10]:range < 16777216?range < 524288?15 + log2_41[range >> 15]:20 + log2_41[range >> 20]:range < 536870912?25 + log2_41[range >> 25]:range < -2147483648?30 + log2_41[range >> 30]:0) - 1;
					var tmp2;
					if(_this2.validBits < 0) {
						tmp2 = 0;
					} else if(_this2.validBits < n3) {
						if(n3 > 24) {
							tmp2 = _this2.readBits(24) + (_this2.readBits(n3 - 24) << 24);
						} else {
							if(_this2.validBits == 0) {
								_this2.acc = 0;
							}
							while(true) {
								if(_this2.bytesInSeg == 0 && (_this2.lastSeg || _this2.next() == 0)) {
									_this2.validBits = -1;
									break;
								} else {
									_this2.bytesInSeg--;
									var a2 = _this2.acc;
									_this2.inputPosition += 1;
									_this2.acc = a2 + (_this2.input.readByte() << _this2.validBits);
									_this2.validBits += 8;
								}
								if(!(_this2.validBits < n3)) {
									break;
								}
							}
							if(_this2.validBits < 0) {
								tmp2 = 0;
							} else {
								var z4 = _this2.acc & (1 << n3) - 1;
								_this2.acc = _this2.acc >>> n3;
								_this2.validBits -= n3;
								tmp2 = z4;
							}
						}
					} else {
						var z5 = _this2.acc & (1 << n3) - 1;
						_this2.acc = _this2.acc >>> n3;
						_this2.validBits -= n3;
						tmp2 = z5;
					}
					fy[1] = tmp2;
					var _g3 = 0;
					var _g2 = g.partitions;
					while(_g3 < _g2) {
						var pclass = g.partitionClassList[_g3++];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this3 = this.decodeState;
							if(_this3.validBits < 10) {
								_this3.prepHuffman();
							}
							var i1 = c.fastHuffman[_this3.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this3.acc = _this3.acc >>> l;
								_this3.validBits -= l;
								if(_this3.validBits < 0) {
									_this3.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this3.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g5 = 0;
						var _g4 = cdim;
						while(_g5 < _g4) {
							var k = _g5++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp3 = offset++;
							var tmp4;
							if(book >= 0) {
								var _this4 = this.decodeState;
								var c1 = codebooks[book];
								if(_this4.validBits < 10) {
									_this4.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this4.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this4.acc = _this4.acc >>> l1;
									_this4.validBits -= l1;
									if(_this4.validBits < 0) {
										_this4.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this4.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp4 = val1;
							} else {
								tmp4 = 0;
							}
							fy[tmp3] = tmp4;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g31 = 2;
					var _g21 = g.values;
					while(_g31 < _g21) {
						var j = _g31++;
						var low = naighbors[j][0];
						var high = naighbors[j][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var off = Math.abs(dy) * (xlist[j] - x0) / adx | 0;
						var lowroom = dy < 0?y0 - off:y0 + off;
						var val2 = fy[j];
						var highroom = range - lowroom;
						var room = highroom < lowroom?highroom * 2:lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j] = val2 - lowroom + lowroom;
								} else {
									fy[j] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j] = false;
							fy[j] = lowroom;
						}
					}
					var _g32 = 0;
					var _g22 = g.values;
					while(_g32 < _g22) {
						var j1 = _g32++;
						if(!step2Flag[j1]) {
							fy[j1] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g11 = 0;
		var _g6 = this.header.channel;
		while(_g11 < _g6) {
			var i3 = _g11++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g12 = 0;
		var _g7 = map.couplingSteps;
		while(_g12 < _g7) {
			var i4 = _g12++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				zeroChannel[map.chan[i4].magnitude] = zeroChannel[map.chan[i4].angle] = false;
			}
		}
		var _g13 = 0;
		var _g8 = map.submaps;
		while(_g13 < _g8) {
			var i5 = _g13++;
			var length = this.header.channel;
			var residueBuffers = new Array(length);
			var doNotDecode = new Array(256);
			var ch = 0;
			var _g33 = 0;
			var _g23 = this.header.channel;
			while(_g33 < _g23) {
				var j2 = _g33++;
				if(map.chan[j2].mux == i5) {
					if(zeroChannel[j2]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j2];
					}
					++ch;
				}
			}
			this.header.residueConfig[map.submapResidue[i5]].decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a3 = this.channelBuffers[map.chan[i6].angle];
			var _g14 = 0;
			var _g9 = n21;
			while(_g14 < _g9) {
				var j3 = _g14++;
				var a21;
				var m2;
				if(m1[j3] > 0) {
					if(a3[j3] > 0) {
						m2 = m1[j3];
						a21 = m1[j3] - a3[j3];
					} else {
						a21 = m1[j3];
						m2 = m1[j3] + a3[j3];
					}
				} else if(a3[j3] > 0) {
					m2 = m1[j3];
					a21 = m1[j3] + a3[j3];
				} else {
					a21 = m1[j3];
					m2 = m1[j3] - a3[j3];
				}
				m1[j3] = m2;
				a3[j3] = a21;
			}
		}
		var _g15 = 0;
		var _g10 = this.header.channel;
		while(_g15 < _g10) {
			var i7 = _g15++;
			if(reallyZeroChannel[i7]) {
				var _g34 = 0;
				var _g24 = n21;
				while(_g34 < _g24) this.channelBuffers[i7][_g34++] = 0;
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g16 = 0;
		var _g17 = this.header.channel;
		while(_g16 < _g17) this.inverseMdct(this.channelBuffers[_g16++],n,m.blockflag);
		var _this5 = this.decodeState;
		while(_this5.bytesInSeg != 0 || !_this5.lastSeg && _this5.next() != 0) {
			_this5.bytesInSeg--;
			_this5.inputPosition += 1;
			_this5.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = ["kha","audio2","ogg","vorbis","VorbisTools"];
kha_audio2_ogg_vorbis_VorbisTools.assert = function(b,p) {
};
kha_audio2_ogg_vorbis_VorbisTools.neighbors = function(x,n) {
	var low = -1;
	var high = 65536;
	var plow = 0;
	var phigh = 0;
	var _g1 = 0;
	while(_g1 < n) {
		var i = _g1++;
		if(x[i] > low && x[i] < x[n]) {
			plow = i;
			low = x[i];
		}
		if(x[i] < high && x[i] > x[n]) {
			phigh = i;
			high = x[i];
		}
	}
	return { low : plow, high : phigh};
};
kha_audio2_ogg_vorbis_VorbisTools.floatUnpack = function(x) {
	var mantissa = _$UInt_UInt_$Impl_$.toFloat(x & 2097151);
	var sign = x & -2147483648;
	var exp = (x & 2145386496) >>> 21;
	return (sign != 0?-mantissa:mantissa) * Math.pow(2,exp - 788);
};
kha_audio2_ogg_vorbis_VorbisTools.bitReverse = function(n) {
	n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
	n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
	n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
	n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
	return n >>> 16 | n << 16;
};
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	Math.pow(r + 1,dim);
	Math.pow(r,dim);
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,window) {
	var n2 = n >> 1;
	var _g1 = 0;
	while(_g1 < n2) {
		var i = _g1++;
		window[i] = Math.sin(1.5707963267948966 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384?n < 16?log2_4[n]:n < 512?5 + log2_4[n >> 5]:10 + log2_4[n >> 10]:n < 16777216?n < 524288?15 + log2_4[n >> 15]:20 + log2_4[n >> 20]:n < 536870912?25 + log2_4[n >> 25]:n < -2147483648?30 + log2_4[n >> 30]:0) - 1;
	var n8 = n >> 3;
	var _g1 = 0;
	while(_g1 < n8) {
		var i = _g1++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g1 = 0;
	while(_g1 < n4) {
		var k = _g1++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g11 = 0;
	while(_g11 < n8) {
		++_g11;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = new Array(32);
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i] = new Array(64);
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0?-dy:dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		if(dy < 0) {
			sy = base - 1;
		} else {
			sy = base + 1;
		}
	}
	ady -= (base < 0?-base:base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	var _g2 = x;
	output[_g2] = output[_g2] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g11 = x + 1;
	var _g3 = x1;
	while(_g11 < _g3) {
		var i1 = _g11++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		var _g21 = i1;
		output[_g21] = output[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
kha_audio2_ogg_vorbis_VorbisTools.predictPoint = function(x,x0,x1,y0,y1) {
	var dy = y1 - y0;
	var off = Math.abs(dy) * (x - x0) / (x1 - x0) | 0;
	if(dy < 0) {
		return y0 - off;
	} else {
		return y0 + off;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.emptyFloatVector = function(len) {
	return new Array(len);
};
kha_audio2_ogg_vorbis_VorbisTools.copyVector = function(source) {
	var length = source.length;
	var dest = new Array(length);
	var _g1 = 0;
	var _g = source.length;
	while(_g1 < _g) {
		var i = _g1++;
		dest[i] = source[i];
	}
	return dest;
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = ["kha","audio2","ogg","vorbis","data","Codebook"];
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	var tmp;
	var tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp2 = z;
		}
	} else {
		var z1 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp2 = z1;
	}
	if(tmp2 == 66) {
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a1 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a1 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z2 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp3 = z2;
			}
		} else {
			var z3 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z3;
		}
		tmp1 = tmp3 != 67;
	} else {
		tmp1 = true;
	}
	if(!tmp1) {
		var tmp4;
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a2 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a2 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp4 = 0;
			} else {
				var z4 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp4 = z4;
			}
		} else {
			var z5 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp4 = z5;
		}
		tmp = tmp4 != 86;
	} else {
		tmp = true;
	}
	if(tmp) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x;
	if(decodeState.validBits < 0) {
		x = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a3 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a3 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x = 0;
		} else {
			var z6 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			x = z6;
		}
	} else {
		var z7 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		x = z7;
	}
	var tmp5;
	if(decodeState.validBits < 0) {
		tmp5 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a4 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a4 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else {
			var z8 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp5 = z8;
		}
	} else {
		var z9 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp5 = z9;
	}
	c.dimensions = (tmp5 << 8) + x;
	var x1;
	if(decodeState.validBits < 0) {
		x1 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a5 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a5 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x1 = 0;
		} else {
			var z10 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			x1 = z10;
		}
	} else {
		var z11 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		x1 = z11;
	}
	var y;
	if(decodeState.validBits < 0) {
		y = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a6 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a6 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			y = 0;
		} else {
			var z12 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			y = z12;
		}
	} else {
		var z13 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		y = z13;
	}
	var tmp6;
	if(decodeState.validBits < 0) {
		tmp6 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a7 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a7 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else {
			var z14 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp6 = z14;
		}
	} else {
		var z15 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp6 = z15;
	}
	c.entries = (tmp6 << 16) + (y << 8) + x1;
	var ordered;
	if(decodeState.validBits < 0) {
		ordered = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a8 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a8 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			ordered = 0;
		} else {
			var z16 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			ordered = z16;
		}
	} else {
		var z17 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		ordered = z17;
	}
	var tmp7;
	if(ordered != 0) {
		tmp7 = false;
	} else {
		var tmp8;
		if(decodeState.validBits < 0) {
			tmp8 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a9 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a9 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp8 = 0;
			} else {
				var z18 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp8 = z18;
			}
		} else {
			var z19 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp8 = z19;
		}
		tmp7 = tmp8 != 0;
	}
	c.sparse = tmp7;
	var length = c.entries;
	var lengths = new Array(length);
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var tmp9;
		if(decodeState.validBits < 0) {
			tmp9 = 0;
		} else if(decodeState.validBits < 5) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a10 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a10 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 5)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp9 = 0;
			} else {
				var z20 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				tmp9 = z20;
			}
		} else {
			var z21 = decodeState.acc & 31;
			decodeState.acc = decodeState.acc >>> 5;
			decodeState.validBits -= 5;
			tmp9 = z21;
		}
		var currentLength = tmp9 + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = limit < 16384?limit < 16?log2_4[limit]:limit < 512?5 + log2_4[limit >> 5]:10 + log2_4[limit >> 10]:limit < 16777216?limit < 524288?15 + log2_4[limit >> 15]:20 + log2_4[limit >> 20]:limit < 536870912?25 + log2_4[limit >> 25]:limit < -2147483648?30 + log2_4[limit >> 30]:0;
			var n1;
			if(decodeState.validBits < 0) {
				n1 = 0;
			} else if(decodeState.validBits < n) {
				if(n > 24) {
					n1 = decodeState.readBits(24) + (decodeState.readBits(n - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a11 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a11 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						n1 = 0;
					} else {
						var z22 = decodeState.acc & (1 << n) - 1;
						decodeState.acc = decodeState.acc >>> n;
						decodeState.validBits -= n;
						n1 = z22;
					}
				}
			} else {
				var z23 = decodeState.acc & (1 << n) - 1;
				decodeState.acc = decodeState.acc >>> n;
				decodeState.validBits -= n;
				n1 = z23;
			}
			if(currentEntry + n1 > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g1 = 0;
			var _g = n1;
			while(_g1 < _g) lengths[currentEntry + _g1++] = currentLength;
			currentEntry += n1;
			++currentLength;
		}
	} else {
		var _g11 = 0;
		var _g2 = c.entries;
		while(_g11 < _g2) {
			var j = _g11++;
			var present;
			if(c.sparse) {
				if(decodeState.validBits < 0) {
					present = 0;
				} else if(decodeState.validBits < 1) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a12 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a12 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 1)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						present = 0;
					} else {
						var z24 = decodeState.acc & 1;
						decodeState.acc = decodeState.acc >>> 1;
						decodeState.validBits -= 1;
						present = z24;
					}
				} else {
					var z25 = decodeState.acc & 1;
					decodeState.acc = decodeState.acc >>> 1;
					decodeState.validBits -= 1;
					present = z25;
				}
			} else {
				present = 1;
			}
			if(present != 0) {
				var tmp10;
				if(decodeState.validBits < 0) {
					tmp10 = 0;
				} else if(decodeState.validBits < 5) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a13 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a13 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 5)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp10 = 0;
					} else {
						var z26 = decodeState.acc & 31;
						decodeState.acc = decodeState.acc >>> 5;
						decodeState.validBits -= 5;
						tmp10 = z26;
					}
				} else {
					var z27 = decodeState.acc & 31;
					decodeState.acc = decodeState.acc >>> 5;
					decodeState.validBits -= 5;
					tmp10 = z27;
				}
				lengths[j] = tmp10 + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp11;
	if(c.sparse) {
		tmp11 = total;
	} else {
		var sortedCount = 0;
		var _g12 = 0;
		var _g3 = c.entries;
		while(_g12 < _g3) {
			var l = lengths[_g12++];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp11 = sortedCount;
	}
	c.sortedEntries = tmp11;
	var values = null;
	if(!c.sparse) {
		var length1 = c.entries;
		c.codewords = new Array(length1);
	} else {
		if(c.sortedEntries != 0) {
			var length2 = c.sortedEntries;
			c.codewordLengths = new Array(length2);
			var length3 = c.entries;
			c.codewords = new Array(length3);
			var length4 = c.entries;
			values = new Array(length4);
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var length5 = c.sortedEntries;
		c.sortedValues = new Array(length5);
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	var tmp12;
	if(decodeState.validBits < 0) {
		tmp12 = 0;
	} else if(decodeState.validBits < 4) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a14 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a14 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 4)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp12 = 0;
		} else {
			var z28 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp12 = z28;
		}
	} else {
		var z29 = decodeState.acc & 15;
		decodeState.acc = decodeState.acc >>> 4;
		decodeState.validBits -= 4;
		tmp12 = z29;
	}
	c.lookupType = tmp12;
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2;
		if(decodeState.validBits < 0) {
			x2 = 0;
		} else if(decodeState.validBits < 32) {
			x2 = decodeState.readBits(24) + (decodeState.readBits(8) << 24);
		} else {
			var z30 = decodeState.acc & 0;
			decodeState.acc = decodeState.acc >>> 32;
			decodeState.validBits -= 32;
			x2 = z30;
		}
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		var sign = x2 & -2147483648;
		var exp = (x2 & 2145386496) >>> 21;
		c.minimumValue = (sign != 0?-mantissa:mantissa) * Math.pow(2,exp - 788);
		var x3;
		if(decodeState.validBits < 0) {
			x3 = 0;
		} else if(decodeState.validBits < 32) {
			x3 = decodeState.readBits(24) + (decodeState.readBits(8) << 24);
		} else {
			var z31 = decodeState.acc & 0;
			decodeState.acc = decodeState.acc >>> 32;
			decodeState.validBits -= 32;
			x3 = z31;
		}
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		var sign1 = x3 & -2147483648;
		var exp1 = (x3 & 2145386496) >>> 21;
		c.deltaValue = (sign1 != 0?-mantissa1:mantissa1) * Math.pow(2,exp1 - 788);
		var tmp13;
		if(decodeState.validBits < 0) {
			tmp13 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a15 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a15 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp13 = 0;
			} else {
				var z32 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp13 = z32;
			}
		} else {
			var z33 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp13 = z33;
		}
		c.valueBits = tmp13 + 1;
		var tmp14;
		if(decodeState.validBits < 0) {
			tmp14 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a16 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a16 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp14 = 0;
			} else {
				var z34 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp14 = z34;
			}
		} else {
			var z35 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp14 = z35;
		}
		c.sequenceP = tmp14 != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var length6 = c.lookupValues;
		var mults = new Array(length6);
		var _g13 = 0;
		var _g4 = c.lookupValues;
		while(_g13 < _g4) {
			var j1 = _g13++;
			var n2 = c.valueBits;
			var q;
			if(decodeState.validBits < 0) {
				q = 0;
			} else if(decodeState.validBits < n2) {
				if(n2 > 24) {
					q = decodeState.readBits(24) + (decodeState.readBits(n2 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a17 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a17 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n2)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						q = 0;
					} else {
						var z36 = decodeState.acc & (1 << n2) - 1;
						decodeState.acc = decodeState.acc >>> n2;
						decodeState.validBits -= n2;
						q = z36;
					}
				}
			} else {
				var z37 = decodeState.acc & (1 << n2) - 1;
				decodeState.acc = decodeState.acc >>> n2;
				decodeState.validBits -= n2;
				q = z37;
			}
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j1] = q;
		}
		var length7 = c.lookupValues;
		c.multiplicands = new Array(length7);
		var _g14 = 0;
		var _g5 = c.lookupValues;
		while(_g14 < _g5) {
			var j2 = _g14++;
			c.multiplicands[j2] = mults[j2] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g15 = 1;
			var _g6 = c.lookupValues;
			while(_g15 < _g6) {
				var j3 = _g15++;
				c.multiplicands[j3] = c.multiplicands[j3 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	dimensions: null
	,entries: null
	,codewordLengths: null
	,minimumValue: null
	,deltaValue: null
	,valueBits: null
	,lookupType: null
	,sequenceP: null
	,sparse: null
	,lookupValues: null
	,multiplicands: null
	,codewords: null
	,fastHuffman: null
	,sortedCodewords: null
	,sortedValues: null
	,sortedEntries: null
	,addEntry: function(huffCode,symbol,count,len,values) {
		if(!this.sparse) {
			this.codewords[symbol] = huffCode;
		} else {
			this.codewords[count] = huffCode;
			this.codewordLengths[count] = len;
			values[count] = symbol;
		}
	}
	,includeInSort: function(len) {
		if(this.sparse) {
			return true;
		} else if(len == 255) {
			return false;
		} else if(len > 10) {
			return true;
		} else {
			return false;
		}
	}
	,computeCodewords: function(len,n,values) {
		var available = new Array(32);
		var _g = 0;
		while(_g < 32) available[_g++] = 0;
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			var b = this.sortedEntries == 0;
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count1 = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count1] = huffCode;
				this.codewordLengths[count1] = len[i];
				values[count1] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g1 = 0;
			var _g = this.entries;
			while(_g1 < _g) {
				var i = _g1++;
				var len = lengths[i];
				if(this.sparse?true:len == 255?false:len > 10) {
					var tmp = k++;
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[tmp] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g11 = 0;
			var _g2 = this.sortedEntries;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var _g12 = 0;
		var _g3 = this.sparse?this.sortedEntries:this.entries;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var huffLen = this.sparse?lengths[values[i2]]:lengths[i2];
			if(this.sparse?true:huffLen == 255?false:huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		this.fastHuffman = new Array(1024);
		this.fastHuffman[0] = -1;
		var _g1 = 0;
		var _g = 1024;
		while(_g1 < _g) this.fastHuffman[_g1++] = -1;
		var _g11 = 0;
		var _g2 = this.sparse?this.sortedEntries:this.entries;
		while(_g11 < _g2) {
			var i = _g11++;
			if(this.codewordLengths[i] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i;
					z += 1 << this.codewordLengths[i];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var val1 = multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0] + last;
				var _g2 = offset + i1;
				output[_g2] = output[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g11 = 0;
			var _g3 = len;
			while(_g11 < _g3) {
				var i2 = _g11++;
				var val2 = multiplicands[z + i2] + last1;
				var _g21 = offset + i2;
				output[_g21] = output[_g21] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var _g12 = 0;
			var _g4 = len;
			while(_g12 < _g4) {
				var i3 = _g12++;
				var _g22 = offset + i3;
				output[_g22] = output[_g22] + multiplicands[z + i3];
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var val1 = multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0] + last;
				var _g2 = offset + i1 * step;
				output[_g2] = output[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g11 = 0;
		var _g3 = len;
		while(_g11 < _g3) {
			var i2 = _g11++;
			var val2 = multiplicands[z + i2] + last;
			var _g21 = offset + i2 * step;
			output[_g21] = output[_g21] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeStart: function(decodeState) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		return val;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g1 = 0;
					var _g = effective;
					while(_g1 < _g) {
						++_g1;
						var val1 = multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0] + last;
						var _g2 = pInter;
						residueBuffers[cInter][_g2] = residueBuffers[cInter][_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g11 = 0;
					var _g3 = effective;
					while(_g11 < _g3) {
						++_g11;
						var _g21 = pInter;
						residueBuffers[cInter][_g21] = residueBuffers[cInter][_g21] + multiplicands[_$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0];
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g12 = 0;
					var _g4 = effective;
					while(_g12 < _g4) {
						var val2 = multiplicands[z + _g12++] + last;
						var _g22 = pInter;
						residueBuffers[cInter][_g22] = residueBuffers[cInter][_g22] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val2;
					}
				} else {
					var _g13 = 0;
					var _g5 = effective;
					while(_g13 < _g5) {
						var _g23 = pInter;
						residueBuffers[cInter][_g23] = residueBuffers[cInter][_g23] + multiplicands[z + _g13++];
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g1 = 0;
			while(_g1 < step) {
				var k = _g1++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = ["kha","audio2","ogg","vorbis","data","Comment"];
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	data: null
	,get_title: function() {
		return this.getString("title");
	}
	,get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,get_version: function() {
		return this.getString("version");
	}
	,get_album: function() {
		return this.getString("album");
	}
	,get_organization: function() {
		return this.getString("organization");
	}
	,get_tracknumber: function() {
		return this.getString("tracknumber");
	}
	,get_performer: function() {
		return this.getString("performer");
	}
	,get_copyright: function() {
		return this.getString("copyright");
	}
	,get_license: function() {
		return this.getString("license");
	}
	,get_artist: function() {
		return this.getString("artist");
	}
	,get_description: function() {
		return this.getString("description");
	}
	,get_genre: function() {
		return this.getString("genre");
	}
	,get_date: function() {
		return this.getString("date");
	}
	,get_location: function() {
		return this.getString("location");
	}
	,get_contact: function() {
		return this.getString("contact");
	}
	,get_isrc: function() {
		return this.getString("isrc");
	}
	,get_artists: function() {
		return this.getArray("artist");
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null?_this1.getReserved(key):_this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null?_this1.getReserved(key):_this1.h[key])[0];
		} else {
			return null;
		}
	}
	,getArray: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null?_this.existsReserved(key):_this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return __map_reserved[key] != null?_this1.getReserved(key):_this1.h[key];
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
	,__properties__: {get_artists:"get_artists",get_isrc:"get_isrc",get_contact:"get_contact",get_location:"get_location",get_date:"get_date",get_genre:"get_genre",get_description:"get_description",get_artist:"get_artist",get_license:"get_license",get_copyright:"get_copyright",get_performer:"get_performer",get_tracknumber:"get_tracknumber",get_organization:"get_organization",get_album:"get_album",get_version:"get_version",get_loopLength:"get_loopLength",get_loopStart:"get_loopStart",get_title:"get_title"}
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = ["kha","audio2","ogg","vorbis","data","Floor"];
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp = z1;
	}
	floor.type = tmp;
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		var tmp1;
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a1 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a1 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp1 = 0;
			} else {
				var z2 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp1 = z2;
			}
		} else {
			var z3 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp1 = z3;
		}
		g.order = tmp1;
		var tmp2;
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a2 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a2 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp2 = 0;
			} else {
				var z4 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp2 = z4;
			}
		} else {
			var z5 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp2 = z5;
		}
		g.rate = tmp2;
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a3 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a3 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z6 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp3 = z6;
			}
		} else {
			var z7 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp3 = z7;
		}
		g.barkMapSize = tmp3;
		var tmp4;
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else if(decodeState.validBits < 6) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a4 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a4 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 6)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp4 = 0;
			} else {
				var z8 = decodeState.acc & 63;
				decodeState.acc = decodeState.acc >>> 6;
				decodeState.validBits -= 6;
				tmp4 = z8;
			}
		} else {
			var z9 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp4 = z9;
		}
		g.amplitudeBits = tmp4;
		var tmp5;
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a5 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a5 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else {
				var z10 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp5 = z10;
			}
		} else {
			var z11 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp5 = z11;
		}
		g.amplitudeOffset = tmp5;
		var tmp6;
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a6 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a6 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp6 = 0;
			} else {
				var z12 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp6 = z12;
			}
		} else {
			var z13 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp6 = z13;
		}
		g.numberOfBooks = tmp6 + 1;
		var _g1 = 0;
		var _g = g.numberOfBooks;
		while(_g1 < _g) {
			var j = _g1++;
			var val;
			if(decodeState.validBits < 0) {
				val = 0;
			} else if(decodeState.validBits < 8) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						var a7 = decodeState.acc;
						decodeState.inputPosition += 1;
						decodeState.acc = a7 + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 8)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val = 0;
				} else {
					var z14 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val = z14;
				}
			} else {
				var z15 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val = z15;
			}
			g.bookList[j] = val;
		}
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		var tmp7;
		if(decodeState.validBits < 0) {
			tmp7 = 0;
		} else if(decodeState.validBits < 5) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a8 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a8 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 5)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp7 = 0;
			} else {
				var z16 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				tmp7 = z16;
			}
		} else {
			var z17 = decodeState.acc & 31;
			decodeState.acc = decodeState.acc >>> 5;
			decodeState.validBits -= 5;
			tmp7 = z17;
		}
		g1.partitions = tmp7;
		var length = g1.partitions;
		g1.partitionClassList = new Array(length);
		var _g11 = 0;
		var _g2 = g1.partitions;
		while(_g11 < _g2) {
			var j1 = _g11++;
			var val1;
			if(decodeState.validBits < 0) {
				val1 = 0;
			} else if(decodeState.validBits < 4) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						var a9 = decodeState.acc;
						decodeState.inputPosition += 1;
						decodeState.acc = a9 + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 4)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val1 = 0;
				} else {
					var z18 = decodeState.acc & 15;
					decodeState.acc = decodeState.acc >>> 4;
					decodeState.validBits -= 4;
					val1 = z18;
				}
			} else {
				var z19 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				val1 = z19;
			}
			g1.partitionClassList[j1] = val1;
			if(g1.partitionClassList[j1] > maxClass) {
				maxClass = g1.partitionClassList[j1];
			}
		}
		g1.classDimensions = new Array(maxClass + 1);
		g1.classMasterbooks = new Array(maxClass + 1);
		g1.classSubclasses = new Array(maxClass + 1);
		g1.subclassBooks = new Array(maxClass + 1);
		var _g12 = 0;
		var _g3 = maxClass + 1;
		while(_g12 < _g3) {
			var j2 = _g12++;
			var tmp8;
			if(decodeState.validBits < 0) {
				tmp8 = 0;
			} else if(decodeState.validBits < 3) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						var a10 = decodeState.acc;
						decodeState.inputPosition += 1;
						decodeState.acc = a10 + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 3)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					tmp8 = 0;
				} else {
					var z20 = decodeState.acc & 7;
					decodeState.acc = decodeState.acc >>> 3;
					decodeState.validBits -= 3;
					tmp8 = z20;
				}
			} else {
				var z21 = decodeState.acc & 7;
				decodeState.acc = decodeState.acc >>> 3;
				decodeState.validBits -= 3;
				tmp8 = z21;
			}
			g1.classDimensions[j2] = tmp8 + 1;
			var val2;
			if(decodeState.validBits < 0) {
				val2 = 0;
			} else if(decodeState.validBits < 2) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						var a11 = decodeState.acc;
						decodeState.inputPosition += 1;
						decodeState.acc = a11 + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 2)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val2 = 0;
				} else {
					var z22 = decodeState.acc & 3;
					decodeState.acc = decodeState.acc >>> 2;
					decodeState.validBits -= 2;
					val2 = z22;
				}
			} else {
				var z23 = decodeState.acc & 3;
				decodeState.acc = decodeState.acc >>> 2;
				decodeState.validBits -= 2;
				val2 = z23;
			}
			g1.classSubclasses[j2] = val2;
			if(g1.classSubclasses[j2] != 0) {
				var val3;
				if(decodeState.validBits < 0) {
					val3 = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a12 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a12 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val3 = 0;
					} else {
						var z24 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val3 = z24;
					}
				} else {
					var z25 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val3 = z25;
				}
				g1.classMasterbooks[j2] = val3;
				if(g1.classMasterbooks[j2] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j2];
			g1.subclassBooks[j2] = new Array(kl);
			var _g31 = 0;
			var _g21 = kl;
			while(_g31 < _g21) {
				var k = _g31++;
				var tmp9;
				if(decodeState.validBits < 0) {
					tmp9 = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a13 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a13 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp9 = 0;
					} else {
						var z26 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						tmp9 = z26;
					}
				} else {
					var z27 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					tmp9 = z27;
				}
				g1.subclassBooks[j2][k] = tmp9 - 1;
				if(g1.subclassBooks[j2][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		var tmp10;
		if(decodeState.validBits < 0) {
			tmp10 = 0;
		} else if(decodeState.validBits < 2) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a14 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a14 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 2)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp10 = 0;
			} else {
				var z28 = decodeState.acc & 3;
				decodeState.acc = decodeState.acc >>> 2;
				decodeState.validBits -= 2;
				tmp10 = z28;
			}
		} else {
			var z29 = decodeState.acc & 3;
			decodeState.acc = decodeState.acc >>> 2;
			decodeState.validBits -= 2;
			tmp10 = z29;
		}
		g1.floor1Multiplier = tmp10 + 1;
		var tmp11;
		if(decodeState.validBits < 0) {
			tmp11 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a15 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a15 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp11 = 0;
			} else {
				var z30 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp11 = z30;
			}
		} else {
			var z31 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp11 = z31;
		}
		g1.rangebits = tmp11;
		g1.xlist = new Array(250);
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g13 = 0;
		var _g4 = g1.partitions;
		while(_g13 < _g4) {
			var _g32 = 0;
			var _g22 = g1.classDimensions[g1.partitionClassList[_g13++]];
			while(_g32 < _g22) {
				var k1 = _g32++;
				var index = g1.values;
				var n = g1.rangebits;
				var val4;
				if(decodeState.validBits < 0) {
					val4 = 0;
				} else if(decodeState.validBits < n) {
					if(n > 24) {
						val4 = decodeState.readBits(24) + (decodeState.readBits(n - 24) << 24);
					} else {
						if(decodeState.validBits == 0) {
							decodeState.acc = 0;
						}
						while(true) {
							if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
								decodeState.validBits = -1;
								break;
							} else {
								decodeState.bytesInSeg--;
								var a16 = decodeState.acc;
								decodeState.inputPosition += 1;
								decodeState.acc = a16 + (decodeState.input.readByte() << decodeState.validBits);
								decodeState.validBits += 8;
							}
							if(!(decodeState.validBits < n)) {
								break;
							}
						}
						if(decodeState.validBits < 0) {
							val4 = 0;
						} else {
							var z32 = decodeState.acc & (1 << n) - 1;
							decodeState.acc = decodeState.acc >>> n;
							decodeState.validBits -= n;
							val4 = z32;
						}
					}
				} else {
					var z33 = decodeState.acc & (1 << n) - 1;
					decodeState.acc = decodeState.acc >>> n;
					decodeState.validBits -= n;
					val4 = z33;
				}
				g1.xlist[index] = val4;
				g1.values++;
			}
		}
		var _g14 = 0;
		var _g5 = g1.values;
		while(_g14 < _g5) {
			var j3 = _g14++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j3].x = g1.xlist[j3];
			p[j3].y = j3;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var length1 = g1.values;
		g1.sortedOrder = new Array(length1);
		var _g15 = 0;
		var _g6 = g1.values;
		while(_g15 < _g6) {
			var j4 = _g15++;
			g1.sortedOrder[j4] = p[j4].y;
		}
		var length2 = g1.values;
		g1.neighbors = new Array(length2);
		var _g16 = 2;
		var _g7 = g1.values;
		while(_g16 < _g7) {
			var j5 = _g16++;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g17 = 0;
			var _g8 = j5;
			while(_g17 < _g8) {
				var i = _g17++;
				if(x[i] > low && x[i] < x[j5]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j5]) {
					phigh = i;
					high = x[i];
				}
			}
			var ne_low = plow;
			var ne_high = phigh;
			var length3 = g1.values;
			g1.neighbors[j5] = new Array(length3);
			g1.neighbors[j5][0] = ne_low;
			g1.neighbors[j5][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	floor0: null
	,floor1: null
	,type: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = ["kha","audio2","ogg","vorbis","data","Floor0"];
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	order: null
	,rate: null
	,barkMapSize: null
	,amplitudeBits: null
	,amplitudeOffset: null
	,numberOfBooks: null
	,bookList: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = ["kha","audio2","ogg","vorbis","data","Floor1"];
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	partitions: null
	,partitionClassList: null
	,classDimensions: null
	,classSubclasses: null
	,classMasterbooks: null
	,subclassBooks: null
	,xlist: null
	,sortedOrder: null
	,neighbors: null
	,floor1Multiplier: null
	,rangebits: null
	,values: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = ["kha","audio2","ogg","vorbis","data","Header"];
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		var x;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[i] = x & 255;
	}
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x1 = decodeState.input.readByte();
	var log0 = x1 & 15;
	var log1 = x1 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x2 = decodeState.input.readByte();
	if((x2 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header1.vendor = packetInput.readString(vendorLength);
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var _g1 = 0;
	var _g2 = packetInput.readInt32();
	while(_g1 < _g2) {
		var i1 = _g1++;
		var str = packetInput.readString(packetInput.readInt32());
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	if((packetInput.readByte() & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x3;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x3 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x3 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x3 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g3 = 0;
	while(_g3 < 6) {
		var i2 = _g3++;
		var x4;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x4 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x4 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[i2] = x4 & 255;
	}
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp = z1;
	}
	var codebookCount = tmp + 1;
	header1.codebooks = new Array(codebookCount);
	var _g11 = 0;
	var _g4 = codebookCount;
	while(_g11 < _g4) header1.codebooks[_g11++] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	var tmp1;
	if(decodeState.validBits < 0) {
		tmp1 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a1 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a1 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else {
			var z2 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp1 = z2;
		}
	} else {
		var z3 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		tmp1 = z3;
	}
	x2 = tmp1 + 1;
	var _g12 = 0;
	var _g5 = x2;
	while(_g12 < _g5) {
		var i3 = _g12++;
		var tmp2;
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a2 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a2 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp2 = 0;
			} else {
				var z4 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp2 = z4;
			}
		} else {
			var z5 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp2 = z5;
		}
		if(tmp2 != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var tmp3;
	if(decodeState.validBits < 0) {
		tmp3 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a3 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a3 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else {
			var z6 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp3 = z6;
		}
	} else {
		var z7 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		tmp3 = z7;
	}
	var floorCount = tmp3 + 1;
	header1.floorConfig = new Array(floorCount);
	var _g13 = 0;
	var _g6 = floorCount;
	while(_g13 < _g6) header1.floorConfig[_g13++] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	var tmp4;
	if(decodeState.validBits < 0) {
		tmp4 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a4 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a4 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else {
			var z8 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp4 = z8;
		}
	} else {
		var z9 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		tmp4 = z9;
	}
	var residueCount = tmp4 + 1;
	header1.residueConfig = new Array(residueCount);
	var _g14 = 0;
	var _g7 = residueCount;
	while(_g14 < _g7) header1.residueConfig[_g14++] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	var tmp5;
	if(decodeState.validBits < 0) {
		tmp5 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a5 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a5 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else {
			var z10 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp5 = z10;
		}
	} else {
		var z11 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		tmp5 = z11;
	}
	var mappingCount = tmp5 + 1;
	header1.mapping = new Array(mappingCount);
	var _g15 = 0;
	var _g8 = mappingCount;
	while(_g15 < _g8) {
		var i4 = _g15++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[i4] = map;
		var _g31 = 0;
		var _g21 = map.submaps;
		while(_g31 < _g21) {
			var j = _g31++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var tmp6;
	if(decodeState.validBits < 0) {
		tmp6 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a6 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a6 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else {
			var z12 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp6 = z12;
		}
	} else {
		var z13 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		tmp6 = z13;
	}
	var modeCount = tmp6 + 1;
	header1.modes = new Array(modeCount);
	var _g16 = 0;
	var _g9 = modeCount;
	while(_g16 < _g9) {
		var i5 = _g16++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[i5] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	maximumBitRate: null
	,nominalBitRate: null
	,minimumBitRate: null
	,sampleRate: null
	,channel: null
	,blocksize0: null
	,blocksize1: null
	,codebooks: null
	,floorConfig: null
	,residueConfig: null
	,mapping: null
	,modes: null
	,comment: null
	,vendor: null
	,__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = ["kha","audio2","ogg","vorbis","data","IntPoint"];
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	x: null
	,y: null
	,__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = ["kha","audio2","ogg","vorbis","data","Mapping"];
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType;
	if(decodeState.validBits < 0) {
		mappingType = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			mappingType = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			mappingType = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		mappingType = z1;
	}
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	m.chan = new Array(channels);
	var _g1 = 0;
	var _g = channels;
	while(_g1 < _g) m.chan[_g1++] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a1 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a1 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z2 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp = z2;
		}
	} else {
		var z3 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp = z3;
	}
	if(tmp != 0) {
		var tmp1;
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a2 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a2 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp1 = 0;
			} else {
				var z4 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp1 = z4;
			}
		} else {
			var z5 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp1 = z5;
		}
		m.submaps = tmp1 + 1;
	} else {
		m.submaps = 1;
	}
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a3 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a3 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z6 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp2 = z6;
		}
	} else {
		var z7 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp2 = z7;
	}
	if(tmp2 != 0) {
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a4 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a4 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z8 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp3 = z8;
			}
		} else {
			var z9 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z9;
		}
		m.couplingSteps = tmp3 + 1;
		var _g11 = 0;
		var _g2 = m.couplingSteps;
		while(_g11 < _g2) {
			var k = _g11++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n1 = n < 16384?n < 16?log2_4[n]:n < 512?5 + log2_4[n >> 5]:10 + log2_4[n >> 10]:n < 16777216?n < 524288?15 + log2_4[n >> 15]:20 + log2_4[n >> 20]:n < 536870912?25 + log2_4[n >> 25]:n < -2147483648?30 + log2_4[n >> 30]:0;
			var tmp4;
			if(decodeState.validBits < 0) {
				tmp4 = 0;
			} else if(decodeState.validBits < n1) {
				if(n1 > 24) {
					tmp4 = decodeState.readBits(24) + (decodeState.readBits(n1 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a5 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a5 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n1)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp4 = 0;
					} else {
						var z10 = decodeState.acc & (1 << n1) - 1;
						decodeState.acc = decodeState.acc >>> n1;
						decodeState.validBits -= n1;
						tmp4 = z10;
					}
				}
			} else {
				var z11 = decodeState.acc & (1 << n1) - 1;
				decodeState.acc = decodeState.acc >>> n1;
				decodeState.validBits -= n1;
				tmp4 = z11;
			}
			m.chan[k].magnitude = tmp4;
			var n2 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n3 = n2 < 16384?n2 < 16?log2_41[n2]:n2 < 512?5 + log2_41[n2 >> 5]:10 + log2_41[n2 >> 10]:n2 < 16777216?n2 < 524288?15 + log2_41[n2 >> 15]:20 + log2_41[n2 >> 20]:n2 < 536870912?25 + log2_41[n2 >> 25]:n2 < -2147483648?30 + log2_41[n2 >> 30]:0;
			var tmp5;
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else if(decodeState.validBits < n3) {
				if(n3 > 24) {
					tmp5 = decodeState.readBits(24) + (decodeState.readBits(n3 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a6 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a6 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n3)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp5 = 0;
					} else {
						var z12 = decodeState.acc & (1 << n3) - 1;
						decodeState.acc = decodeState.acc >>> n3;
						decodeState.validBits -= n3;
						tmp5 = z12;
					}
				}
			} else {
				var z13 = decodeState.acc & (1 << n3) - 1;
				decodeState.acc = decodeState.acc >>> n3;
				decodeState.validBits -= n3;
				tmp5 = z13;
			}
			m.chan[k].angle = tmp5;
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	var tmp6;
	if(decodeState.validBits < 0) {
		tmp6 = 0;
	} else if(decodeState.validBits < 2) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a7 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a7 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 2)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else {
			var z14 = decodeState.acc & 3;
			decodeState.acc = decodeState.acc >>> 2;
			decodeState.validBits -= 2;
			tmp6 = z14;
		}
	} else {
		var z15 = decodeState.acc & 3;
		decodeState.acc = decodeState.acc >>> 2;
		decodeState.validBits -= 2;
		tmp6 = z15;
	}
	if(tmp6 != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g12 = 0;
		var _g3 = channels;
		while(_g12 < _g3) {
			var j = _g12++;
			var tmp7;
			if(decodeState.validBits < 0) {
				tmp7 = 0;
			} else if(decodeState.validBits < 4) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						var a8 = decodeState.acc;
						decodeState.inputPosition += 1;
						decodeState.acc = a8 + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 4)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					tmp7 = 0;
				} else {
					var z16 = decodeState.acc & 15;
					decodeState.acc = decodeState.acc >>> 4;
					decodeState.validBits -= 4;
					tmp7 = z16;
				}
			} else {
				var z17 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp7 = z17;
			}
			m.chan[j].mux = tmp7;
			if(m.chan[j].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g13 = 0;
		var _g4 = channels;
		while(_g13 < _g4) m.chan[_g13++].mux = 0;
	}
	var length = m.submaps;
	m.submapFloor = new Array(length);
	var length1 = m.submaps;
	m.submapResidue = new Array(length1);
	var _g14 = 0;
	var _g5 = m.submaps;
	while(_g14 < _g5) {
		var j1 = _g14++;
		if(decodeState.validBits >= 0) {
			if(decodeState.validBits < 8) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						var a9 = decodeState.acc;
						decodeState.inputPosition += 1;
						decodeState.acc = a9 + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 8)) {
						break;
					}
				}
				if(decodeState.validBits >= 0) {
					var z18 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
				}
			} else {
				var z19 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
			}
		}
		var val;
		if(decodeState.validBits < 0) {
			val = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a10 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a10 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				val = 0;
			} else {
				var z20 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val = z20;
			}
		} else {
			var z21 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			val = z21;
		}
		m.submapFloor[j1] = val;
		var val1;
		if(decodeState.validBits < 0) {
			val1 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a11 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a11 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				val1 = 0;
			} else {
				var z22 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val1 = z22;
			}
		} else {
			var z23 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			val1 = z23;
		}
		m.submapResidue[j1] = val1;
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	couplingSteps: null
	,chan: null
	,submaps: null
	,submapFloor: null
	,submapResidue: null
	,doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var floor = floors[this.submapFloor[this.chan[i].mux]];
		if(floor.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g1 = 1;
			var _g = g.values;
			while(_g1 < _g) {
				var j = g.sortedOrder[_g1++];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g11 = lx;
				while(_g11 < n2) {
					var j1 = _g11++;
					target[j1] = target[j1] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = ["kha","audio2","ogg","vorbis","data","MappingChannel"];
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	magnitude: null
	,angle: null
	,mux: null
	,__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = ["kha","audio2","ogg","vorbis","data","Mode"];
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp = z1;
	}
	m.blockflag = tmp != 0;
	var tmp1;
	if(decodeState.validBits < 0) {
		tmp1 = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a1 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a1 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else {
			var z2 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp1 = z2;
		}
	} else {
		var z3 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp1 = z3;
	}
	m.windowtype = tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a2 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a2 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z4 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp2 = z4;
		}
	} else {
		var z5 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp2 = z5;
	}
	m.transformtype = tmp2;
	var tmp3;
	if(decodeState.validBits < 0) {
		tmp3 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a3 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a3 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else {
			var z6 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z6;
		}
	} else {
		var z7 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp3 = z7;
	}
	m.mapping = tmp3;
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	blockflag: null
	,mapping: null
	,windowtype: null
	,transformtype: null
	,__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = ["kha","audio2","ogg","vorbis","data","Page"];
kha_audio2_ogg_vorbis_data_Page.prototype = {
	flag: null
	,clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 323, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_PageFlag = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.PageFlag"] = kha_audio2_ogg_vorbis_data_PageFlag;
kha_audio2_ogg_vorbis_data_PageFlag.__name__ = ["kha","audio2","ogg","vorbis","data","PageFlag"];
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = ["kha","audio2","ogg","vorbis","data","ProbedPage"];
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	pageStart: null
	,pageEnd: null
	,afterPreviousPageStart: null
	,firstDecodedSample: null
	,lastDecodedSample: null
	,__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = ["kha","audio2","ogg","vorbis","data","ReaderError"];
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	type: null
	,message: null
	,posInfos: null
	,__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxClasses["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : ["kha","audio2","ogg","vorbis","data","ReaderErrorType"], __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"] };
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA = ["NEED_MORE_DATA",0];
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING = ["INVALID_API_MIXING",1];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM = ["OUTOFMEM",2];
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED = ["FEATURE_NOT_SUPPORTED",3];
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS = ["TOO_MANY_CHANNELS",4];
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE = ["FILE_OPEN_FAILURE",5];
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH = ["SEEK_WITHOUT_LENGTH",6];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF = ["UNEXPECTED_EOF",7];
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID = ["SEEK_INVALID",8];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP = ["INVALID_SETUP",9];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM = ["INVALID_STREAM",10];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN = ["MISSING_CAPTURE_PATTERN",11];
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION = ["INVALID_STREAM_STRUCTURE_VERSION",12];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID = ["CONTINUED_PACKET_FLAG_INVALID",13];
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER = ["INCORRECT_STREAM_SERIAL_NUMBER",14];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE = ["INVALID_FIRST_PAGE",15];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE = ["BAD_PACKET_TYPE",16];
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE = ["CANT_FIND_LAST_PAGE",17];
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED = ["SEEK_FAILED",18];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER = ["OTHER",19];
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = ["kha","audio2","ogg","vorbis","data","Residue"];
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp = z1;
	}
	r.type = tmp;
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var residueCascade = new Array(64);
	var tmp1;
	if(decodeState.validBits < 0) {
		tmp1 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a1 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a1 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else {
			var z2 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp1 = z2;
		}
	} else {
		var z3 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp1 = z3;
	}
	r.begin = tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a2 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a2 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z4 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp2 = z4;
		}
	} else {
		var z5 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp2 = z5;
	}
	r.end = tmp2;
	var tmp3;
	if(decodeState.validBits < 0) {
		tmp3 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a3 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a3 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else {
			var z6 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp3 = z6;
		}
	} else {
		var z7 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp3 = z7;
	}
	r.partSize = tmp3 + 1;
	var tmp4;
	if(decodeState.validBits < 0) {
		tmp4 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a4 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a4 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else {
			var z8 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp4 = z8;
		}
	} else {
		var z9 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		tmp4 = z9;
	}
	var classifications = r.classifications = tmp4 + 1;
	var tmp5;
	if(decodeState.validBits < 0) {
		tmp5 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				var a5 = decodeState.acc;
				decodeState.inputPosition += 1;
				decodeState.acc = a5 + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else {
			var z10 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp5 = z10;
		}
	} else {
		var z11 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp5 = z11;
	}
	r.classbook = tmp5;
	var _g1 = 0;
	var _g = r.classifications;
	while(_g1 < _g) {
		var j = _g1++;
		var highBits = 0;
		var lowBits;
		if(decodeState.validBits < 0) {
			lowBits = 0;
		} else if(decodeState.validBits < 3) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a6 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a6 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 3)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				lowBits = 0;
			} else {
				var z12 = decodeState.acc & 7;
				decodeState.acc = decodeState.acc >>> 3;
				decodeState.validBits -= 3;
				lowBits = z12;
			}
		} else {
			var z13 = decodeState.acc & 7;
			decodeState.acc = decodeState.acc >>> 3;
			decodeState.validBits -= 3;
			lowBits = z13;
		}
		var tmp6;
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					var a7 = decodeState.acc;
					decodeState.inputPosition += 1;
					decodeState.acc = a7 + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp6 = 0;
			} else {
				var z14 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp6 = z14;
			}
		} else {
			var z15 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp6 = z15;
		}
		if(tmp6 != 0) {
			if(decodeState.validBits < 0) {
				highBits = 0;
			} else if(decodeState.validBits < 5) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						var a8 = decodeState.acc;
						decodeState.inputPosition += 1;
						decodeState.acc = a8 + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 5)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					highBits = 0;
				} else {
					var z16 = decodeState.acc & 31;
					decodeState.acc = decodeState.acc >>> 5;
					decodeState.validBits -= 5;
					highBits = z16;
				}
			} else {
				var z17 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				highBits = z17;
			}
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var length = r.classifications;
	r.residueBooks = new Array(length);
	var _g11 = 0;
	var _g2 = r.classifications;
	while(_g11 < _g2) {
		var j1 = _g11++;
		r.residueBooks[j1] = new Array(8);
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				var val;
				if(decodeState.validBits < 0) {
					val = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							var a9 = decodeState.acc;
							decodeState.inputPosition += 1;
							decodeState.acc = a9 + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val = 0;
					} else {
						var z18 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val = z18;
					}
				} else {
					var z19 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val = z19;
				}
				r.residueBooks[j1][k] = val;
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	r.classdata = new Array(el);
	var _g12 = 0;
	var _g3 = el;
	while(_g12 < _g3) {
		var j2 = _g12++;
		var temp = j2;
		var k1 = classwords;
		var cd = r.classdata[j2] = new Array(classwords);
		while(--k1 >= 0) {
			cd[k1] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	begin: null
	,end: null
	,partSize: null
	,classifications: null
	,classbook: null
	,classdata: null
	,residueBooks: null
	,type: null
	,decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(nRead) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var length = header.channel * partRead + 1;
		var classifications = new Array(length);
		var _g1 = 0;
		var _g = ch;
		while(_g1 < _g) {
			var i = _g1++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g3 = 0;
				var _g2 = buffer.length;
				while(_g3 < _g2) buffer[_g3++] = 0;
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g11 = 0;
			var _g4 = ch;
			while(_g11 < _g4) {
				var j = _g11++;
				if(!doNotDecode[j]) {
					break;
				} else if(j == ch - 1) {
					return;
				}
			}
			var _g5 = 0;
			while(_g5 < 8) {
				var pass = _g5++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g21 = 0;
						var _g12 = classwords;
						while(_g21 < _g12) {
							var i3 = _g21++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var b = this.residueBooks[classifications[pcount]][pass];
							if(b >= 0) {
								var result = codebooks[b].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c1 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c1.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i4 >= 0) {
								var l1 = c1.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i4;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c1);
							}
							if(c1.sparse) {
								val1 = c1.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g22 = 0;
						var _g13 = classwords;
						while(_g22 < _g13) {
							var i6 = _g22++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var result1 = codebooks[b1].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c2.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i7 >= 0) {
								var l2 = c2.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i7;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val2 = c2.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[i8 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g23 = 0;
						var _g14 = classwords;
						while(_g23 < _g14) {
							var i9 = _g23++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var result2 = codebooks[b2].decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g6 = 0;
		while(_g6 < 8) {
			var pass1 = _g6++;
			var pcount1 = 0;
			var classSet1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g24 = 0;
					var _g15 = ch;
					while(_g24 < _g15) {
						var j1 = _g24++;
						if(!doNotDecode[j1]) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i10 = c3.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i10 >= 0) {
								var l3 = c3.codewordLengths[i10];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i10;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val3 = c3.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i11 = classwords;
							while(--i11 >= 0) {
								classifications[j1 * partRead + i11 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g25 = 0;
				var _g16 = classwords;
				while(_g25 < _g16) {
					var i12 = _g25++;
					if(pcount1 >= partRead) {
						break;
					}
					var _g41 = 0;
					var _g31 = ch;
					while(_g41 < _g31) {
						var j2 = _g41++;
						if(!doNotDecode[j2]) {
							var b3 = this.residueBooks[classifications[j2 * partRead + pcount1]][pass1];
							if(b3 >= 0) {
								var target = residueBuffers[j2];
								var offset = this.begin + pcount1 * partSize;
								if(!codebooks[b3].residueDecode(decodeState,target,offset,partSize,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_audio2_ogg_vorbis_data_Setting = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.Setting"] = kha_audio2_ogg_vorbis_data_Setting;
kha_audio2_ogg_vorbis_data_Setting.__name__ = ["kha","audio2","ogg","vorbis","data","Setting"];
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = ["kha","graphics1","Graphics"];
kha_graphics1_Graphics.prototype = {
	begin: null
	,end: null
	,setPixel: null
	,__class__: kha_graphics1_Graphics
};
var kha_graphics2_Graphics = function() {
	this.transformations = [];
	this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
	this.opacities = [];
	this.opacities.push(1);
	this.myFontSize = 12;
	this.myFontGlyphs = [];
	var _g = 32;
	while(_g < 256) this.myFontGlyphs.push(_g++);
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = ["kha","graphics2","Graphics"];
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,flush: function() {
	}
	,clear: function(color) {
	}
	,drawImage: function(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	,drawSubImage: function(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
	}
	,get_imageScaleQuality: function() {
		return kha_graphics2_ImageScaleQuality.Low;
	}
	,set_imageScaleQuality: function(value) {
		return kha_graphics2_ImageScaleQuality.High;
	}
	,get_mipmapScaleQuality: function() {
		return kha_graphics2_ImageScaleQuality.Low;
	}
	,set_mipmapScaleQuality: function(value) {
		return kha_graphics2_ImageScaleQuality.High;
	}
	,get_color: function() {
		return kha__$Color_Color_$Impl_$.Black;
	}
	,set_color: function(color) {
		return kha__$Color_Color_$Impl_$.Black;
	}
	,get_font: function() {
		return null;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,get_fontGlyphs: function() {
		return this.myFontGlyphs;
	}
	,set_fontGlyphs: function(value) {
		return this.myFontGlyphs = value;
	}
	,pushTransformation: function(transformation) {
		this.setTransformation(transformation);
		this.transformations.push(transformation);
	}
	,popTransformation: function() {
		var ret = this.transformations.pop();
		this.setTransformation(this.transformations[this.transformations.length - 1]);
		return ret;
	}
	,get_transformation: function() {
		return this.transformations[this.transformations.length - 1];
	}
	,set_transformation: function(transformation) {
		this.setTransformation(transformation);
		return this.transformations[this.transformations.length - 1] = transformation;
	}
	,translation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		return new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + tx * m._02,_this__00 * m._10 + _this__10 * m._11 + tx * m._12,_this__00 * m._20 + _this__10 * m._21 + tx * m._22,_this__01 * m._00 + _this__11 * m._01 + ty * m._02,_this__01 * m._10 + _this__11 * m._11 + ty * m._12,_this__01 * m._20 + _this__11 * m._21 + ty * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
	}
	,translate: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		var transformation = new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + tx * m._02,_this__00 * m._10 + _this__10 * m._11 + tx * m._12,_this__00 * m._20 + _this__10 * m._21 + tx * m._22,_this__01 * m._00 + _this__11 * m._01 + ty * m._02,_this__01 * m._10 + _this__11 * m._11 + ty * m._12,_this__01 * m._20 + _this__11 * m._21 + ty * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
		this.setTransformation(transformation);
		this.transformations[this.transformations.length - 1] = transformation;
	}
	,pushTranslation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		this.pushTransformation(new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + tx * m._02,_this__00 * m._10 + _this__10 * m._11 + tx * m._12,_this__00 * m._20 + _this__10 * m._21 + tx * m._22,_this__01 * m._00 + _this__11 * m._01 + ty * m._02,_this__01 * m._10 + _this__11 * m._11 + ty * m._12,_this__01 * m._20 + _this__11 * m._21 + ty * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22));
	}
	,rotation: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var _00 = Math.cos(angle);
		var _10 = -Math.sin(angle);
		var _01 = Math.sin(angle);
		var _11 = Math.cos(angle);
		var m__20 = 0;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _001 = _this__00 * _00 + _this__10 * _01 + centerx * m__02;
		var _101 = _this__00 * _10 + _this__10 * _11 + centerx * m__12;
		var _20 = _this__00 * m__20 + _this__10 * m__21 + centerx * m__22;
		var _011 = _this__01 * _00 + _this__11 * _01 + centery * m__02;
		var _111 = _this__01 * _10 + _this__11 * _11 + centery * m__12;
		var _21 = _this__01 * m__20 + _this__11 * m__21 + centery * m__22;
		var _02 = _this__02 * _00 + _this__12 * _01 + _this__22 * m__02;
		var _12 = _this__02 * _10 + _this__12 * _11 + _this__22 * m__12;
		var _22 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__00 = 1;
		var m__10 = 0;
		var m__201 = -centerx;
		var m__01 = 0;
		var m__11 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _002 = _001 * m__00 + _101 * m__01 + _20 * m__021;
		var _102 = _001 * m__10 + _101 * m__11 + _20 * m__121;
		var _201 = _001 * m__201 + _101 * m__211 + _20 * m__221;
		var _012 = _011 * m__00 + _111 * m__01 + _21 * m__021;
		var _112 = _011 * m__10 + _111 * m__11 + _21 * m__121;
		var _211 = _011 * m__201 + _111 * m__211 + _21 * m__221;
		var _021 = _02 * m__00 + _12 * m__01 + _22 * m__021;
		var _121 = _02 * m__10 + _12 * m__11 + _22 * m__121;
		var _221 = _02 * m__201 + _12 * m__211 + _22 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		return new kha_math_FastMatrix3(_002 * m._00 + _102 * m._01 + _201 * m._02,_002 * m._10 + _102 * m._11 + _201 * m._12,_002 * m._20 + _102 * m._21 + _201 * m._22,_012 * m._00 + _112 * m._01 + _211 * m._02,_012 * m._10 + _112 * m._11 + _211 * m._12,_012 * m._20 + _112 * m._21 + _211 * m._22,_021 * m._00 + _121 * m._01 + _221 * m._02,_021 * m._10 + _121 * m._11 + _221 * m._12,_021 * m._20 + _121 * m._21 + _221 * m._22);
	}
	,rotate: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var _00 = Math.cos(angle);
		var _10 = -Math.sin(angle);
		var _01 = Math.sin(angle);
		var _11 = Math.cos(angle);
		var m__20 = 0;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _001 = _this__00 * _00 + _this__10 * _01 + centerx * m__02;
		var _101 = _this__00 * _10 + _this__10 * _11 + centerx * m__12;
		var _20 = _this__00 * m__20 + _this__10 * m__21 + centerx * m__22;
		var _011 = _this__01 * _00 + _this__11 * _01 + centery * m__02;
		var _111 = _this__01 * _10 + _this__11 * _11 + centery * m__12;
		var _21 = _this__01 * m__20 + _this__11 * m__21 + centery * m__22;
		var _02 = _this__02 * _00 + _this__12 * _01 + _this__22 * m__02;
		var _12 = _this__02 * _10 + _this__12 * _11 + _this__22 * m__12;
		var _22 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__00 = 1;
		var m__10 = 0;
		var m__201 = -centerx;
		var m__01 = 0;
		var m__11 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _002 = _001 * m__00 + _101 * m__01 + _20 * m__021;
		var _102 = _001 * m__10 + _101 * m__11 + _20 * m__121;
		var _201 = _001 * m__201 + _101 * m__211 + _20 * m__221;
		var _012 = _011 * m__00 + _111 * m__01 + _21 * m__021;
		var _112 = _011 * m__10 + _111 * m__11 + _21 * m__121;
		var _211 = _011 * m__201 + _111 * m__211 + _21 * m__221;
		var _021 = _02 * m__00 + _12 * m__01 + _22 * m__021;
		var _121 = _02 * m__10 + _12 * m__11 + _22 * m__121;
		var _221 = _02 * m__201 + _12 * m__211 + _22 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		var transformation = new kha_math_FastMatrix3(_002 * m._00 + _102 * m._01 + _201 * m._02,_002 * m._10 + _102 * m._11 + _201 * m._12,_002 * m._20 + _102 * m._21 + _201 * m._22,_012 * m._00 + _112 * m._01 + _211 * m._02,_012 * m._10 + _112 * m._11 + _211 * m._12,_012 * m._20 + _112 * m._21 + _211 * m._22,_021 * m._00 + _121 * m._01 + _221 * m._02,_021 * m._10 + _121 * m._11 + _221 * m._12,_021 * m._20 + _121 * m._21 + _221 * m._22);
		this.setTransformation(transformation);
		this.transformations[this.transformations.length - 1] = transformation;
	}
	,pushRotation: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var _00 = Math.cos(angle);
		var _10 = -Math.sin(angle);
		var _01 = Math.sin(angle);
		var _11 = Math.cos(angle);
		var m__20 = 0;
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _001 = _this__00 * _00 + _this__10 * _01 + centerx * m__02;
		var _101 = _this__00 * _10 + _this__10 * _11 + centerx * m__12;
		var _20 = _this__00 * m__20 + _this__10 * m__21 + centerx * m__22;
		var _011 = _this__01 * _00 + _this__11 * _01 + centery * m__02;
		var _111 = _this__01 * _10 + _this__11 * _11 + centery * m__12;
		var _21 = _this__01 * m__20 + _this__11 * m__21 + centery * m__22;
		var _02 = _this__02 * _00 + _this__12 * _01 + _this__22 * m__02;
		var _12 = _this__02 * _10 + _this__12 * _11 + _this__22 * m__12;
		var _22 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__00 = 1;
		var m__10 = 0;
		var m__201 = -centerx;
		var m__01 = 0;
		var m__11 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _002 = _001 * m__00 + _101 * m__01 + _20 * m__021;
		var _102 = _001 * m__10 + _101 * m__11 + _20 * m__121;
		var _201 = _001 * m__201 + _101 * m__211 + _20 * m__221;
		var _012 = _011 * m__00 + _111 * m__01 + _21 * m__021;
		var _112 = _011 * m__10 + _111 * m__11 + _21 * m__121;
		var _211 = _011 * m__201 + _111 * m__211 + _21 * m__221;
		var _021 = _02 * m__00 + _12 * m__01 + _22 * m__021;
		var _121 = _02 * m__10 + _12 * m__11 + _22 * m__121;
		var _221 = _02 * m__201 + _12 * m__211 + _22 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		this.pushTransformation(new kha_math_FastMatrix3(_002 * m._00 + _102 * m._01 + _201 * m._02,_002 * m._10 + _102 * m._11 + _201 * m._12,_002 * m._20 + _102 * m._21 + _201 * m._22,_012 * m._00 + _112 * m._01 + _211 * m._02,_012 * m._10 + _112 * m._11 + _211 * m._12,_012 * m._20 + _112 * m._21 + _211 * m._22,_021 * m._00 + _121 * m._01 + _221 * m._02,_021 * m._10 + _121 * m._11 + _221 * m._12,_021 * m._20 + _121 * m._21 + _221 * m._22));
	}
	,pushOpacity: function(opacity) {
		this.setOpacity(opacity);
		this.opacities.push(opacity);
	}
	,popOpacity: function() {
		var ret = this.opacities.pop();
		this.setOpacity(this.get_opacity());
		return ret;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_opacity: function(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	,scissor: function(x,y,width,height) {
	}
	,disableScissor: function() {
	}
	,pipe: null
	,get_pipeline: function() {
		return this.pipe;
	}
	,set_pipeline: function(pipeline) {
		this.setPipeline(pipeline);
		return this.pipe = pipeline;
	}
	,transformations: null
	,opacities: null
	,myFontSize: null
	,myFontGlyphs: null
	,setTransformation: function(transformation) {
	}
	,setOpacity: function(opacity) {
	}
	,setPipeline: function(pipeline) {
	}
	,__class__: kha_graphics2_Graphics
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline",set_opacity:"set_opacity",get_opacity:"get_opacity",set_transformation:"set_transformation",get_transformation:"get_transformation",set_fontGlyphs:"set_fontGlyphs",get_fontGlyphs:"get_fontGlyphs",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_font:"set_font",get_font:"get_font",set_color:"set_color",get_color:"get_color",set_mipmapScaleQuality:"set_mipmapScaleQuality",get_mipmapScaleQuality:"get_mipmapScaleQuality",set_imageScaleQuality:"set_imageScaleQuality",get_imageScaleQuality:"get_imageScaleQuality"}
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = ["kha","graphics2","Graphics1"];
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	canvas: null
	,texture: null
	,pixels: null
	,begin: function() {
		if(this.texture == null) {
			this.texture = kha_Image.create(this.canvas.get_width(),this.canvas.get_height(),kha_graphics4_TextureFormat.RGBA32,kha_graphics4_Usage.ReadableUsage);
		}
		this.pixels = this.texture.lock();
	}
	,end: function() {
		this.texture.unlock();
		this.canvas.get_g2().begin();
		this.canvas.get_g2().drawImage(this.texture,0,0);
		this.canvas.get_g2().end();
	}
	,setPixel: function(x,y,color) {
		this.pixels.setInt32(y * this.texture.get_realWidth() * 4 + x * 4,color);
	}
	,__class__: kha_graphics2_Graphics1
};
var kha_graphics2_GraphicsExtension = function() { };
$hxClasses["kha.graphics2.GraphicsExtension"] = kha_graphics2_GraphicsExtension;
kha_graphics2_GraphicsExtension.__name__ = ["kha","graphics2","GraphicsExtension"];
kha_graphics2_GraphicsExtension.drawCircle = function(g2,cx,cy,radius,strength,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(strength == null) {
		strength = 1;
	}
	if(kha_SystemImpl.gl == null) {
		var g = g2;
		radius -= strength / 2;
		g.drawCircle(cx,cy,radius,strength);
		return;
	}
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = 2 * Math.PI / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = radius;
	var y = 0.0;
	var _g1 = 0;
	var _g = segments;
	while(_g1 < _g) {
		++_g1;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		g2.drawLine(px,py,x + cx,y + cy,strength);
	}
};
kha_graphics2_GraphicsExtension.fillCircle = function(g2,cx,cy,radius,segments) {
	if(segments == null) {
		segments = 0;
	}
	if(kha_SystemImpl.gl == null) {
		g2.fillCircle(cx,cy,radius);
		return;
	}
	if(segments <= 0) {
		segments = Math.floor(10 * Math.sqrt(radius));
	}
	var theta = 2 * Math.PI / segments;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var x = radius;
	var y = 0.0;
	var _g1 = 0;
	var _g = segments;
	while(_g1 < _g) {
		++_g1;
		var px = x + cx;
		var py = y + cy;
		var t = x;
		x = c * x - s * y;
		y = c * y + s * t;
		g2.fillTriangle(px,py,x + cx,y + cy,cx,cy);
	}
};
kha_graphics2_GraphicsExtension.drawPolygon = function(g2,x,y,vertices,strength) {
	if(strength == null) {
		strength = 1;
	}
	var iterator = HxOverrides.iter(vertices);
	var v0 = iterator.next();
	var v1 = v0;
	while(iterator.hasNext()) {
		var v2 = iterator.next();
		g2.drawLine(v1.x + x,v1.y + y,v2.x + x,v2.y + y,strength);
		v1 = v2;
	}
	g2.drawLine(v1.x + x,v1.y + y,v0.x + x,v0.y + y,strength);
};
kha_graphics2_GraphicsExtension.fillPolygon = function(g2,x,y,vertices) {
	var iterator = HxOverrides.iter(vertices);
	var v0 = iterator.next();
	var v1 = v0;
	while(iterator.hasNext()) {
		var v2 = iterator.next();
		g2.fillTriangle(v1.x + x,v1.y + y,v2.x + x,v2.y + y,x,y);
		v1 = v2;
	}
	g2.fillTriangle(v1.x + x,v1.y + y,v0.x + x,v0.y + y,x,y);
};
kha_graphics2_GraphicsExtension.drawCubicBezier = function(g2,x,y,segments,strength) {
	if(strength == null) {
		strength = 1.0;
	}
	if(segments == null) {
		segments = 20;
	}
	var t;
	var q0 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(0,x,y);
	var q1;
	var _g1 = 1;
	var _g = segments + 1;
	while(_g1 < _g) {
		t = _g1++ / segments;
		q1 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(t,x,y);
		g2.drawLine(q0[0],q0[1],q1[0],q1[1],strength);
		q0 = q1;
	}
};
kha_graphics2_GraphicsExtension.drawCubicBezierPath = function(g2,x,y,segments,strength) {
	if(strength == null) {
		strength = 1.0;
	}
	if(segments == null) {
		segments = 20;
	}
	var i = 0;
	var t;
	var q0 = null;
	var q1 = null;
	while(i < x.length - 3) {
		if(i == 0) {
			q0 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(0,[x[i],x[i + 1],x[i + 2],x[i + 3]],[y[i],y[i + 1],y[i + 2],y[i + 3]]);
		}
		var _g1 = 1;
		var _g = segments + 1;
		while(_g1 < _g) {
			t = _g1++ / segments;
			q1 = kha_graphics2_GraphicsExtension.calculateCubicBezierPoint(t,[x[i],x[i + 1],x[i + 2],x[i + 3]],[y[i],y[i + 1],y[i + 2],y[i + 3]]);
			g2.drawLine(q0[0],q0[1],q1[0],q1[1],strength);
			q0 = q1;
		}
		i += 3;
	}
};
kha_graphics2_GraphicsExtension.calculateCubicBezierPoint = function(t,x,y) {
	var u = 1 - t;
	var tt = t * t;
	var uu = u * u;
	var uuu = uu * u;
	var ttt = tt * t;
	var p = [uuu * x[0],uuu * y[0]];
	p[0] += 3 * uu * t * x[1];
	p[1] += 3 * uu * t * y[1];
	p[0] += 3 * u * tt * x[2];
	p[1] += 3 * u * tt * y[2];
	p[0] += ttt * x[3];
	p[1] += ttt * y[3];
	return p;
};
var kha_graphics2_ImageScaleQuality = $hxClasses["kha.graphics2.ImageScaleQuality"] = { __ename__ : ["kha","graphics2","ImageScaleQuality"], __constructs__ : ["Low","High"] };
kha_graphics2_ImageScaleQuality.Low = ["Low",0];
kha_graphics2_ImageScaleQuality.Low.toString = $estr;
kha_graphics2_ImageScaleQuality.Low.__enum__ = kha_graphics2_ImageScaleQuality;
kha_graphics2_ImageScaleQuality.High = ["High",1];
kha_graphics2_ImageScaleQuality.High.toString = $estr;
kha_graphics2_ImageScaleQuality.High.__enum__ = kha_graphics2_ImageScaleQuality;
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = ["kha","graphics2","truetype","VectorOfIntPointer"];
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	value: null
	,__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = ["kha","graphics2","truetype","Stbtt_temp_rect"];
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = ["kha","graphics2","truetype","Stbtt_temp_glyph_h_metrics"];
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	advanceWidth: null
	,leftSideBearing: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = ["kha","graphics2","truetype","Stbtt_temp_font_v_metrics"];
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	ascent: null
	,descent: null
	,lineGap: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$region = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_region"] = kha_graphics2_truetype_Stbtt_$temp_$region;
kha_graphics2_truetype_Stbtt_$temp_$region.__name__ = ["kha","graphics2","truetype","Stbtt_temp_region"];
kha_graphics2_truetype_Stbtt_$temp_$region.prototype = {
	width: null
	,height: null
	,xoff: null
	,yoff: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$region
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = ["kha","graphics2","truetype","Stbtt_bakedchar"];
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$aligned_$quad = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_aligned_quad"] = kha_graphics2_truetype_Stbtt_$aligned_$quad;
kha_graphics2_truetype_Stbtt_$aligned_$quad.__name__ = ["kha","graphics2","truetype","Stbtt_aligned_quad"];
kha_graphics2_truetype_Stbtt_$aligned_$quad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,__class__: kha_graphics2_truetype_Stbtt_$aligned_$quad
};
var kha_graphics2_truetype_Stbtt_$packedchar = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_packedchar"] = kha_graphics2_truetype_Stbtt_$packedchar;
kha_graphics2_truetype_Stbtt_$packedchar.__name__ = ["kha","graphics2","truetype","Stbtt_packedchar"];
kha_graphics2_truetype_Stbtt_$packedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,xoff2: null
	,yoff2: null
	,__class__: kha_graphics2_truetype_Stbtt_$packedchar
};
var kha_graphics2_truetype_Stbtt_$pack_$range = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_range"] = kha_graphics2_truetype_Stbtt_$pack_$range;
kha_graphics2_truetype_Stbtt_$pack_$range.__name__ = ["kha","graphics2","truetype","Stbtt_pack_range"];
kha_graphics2_truetype_Stbtt_$pack_$range.prototype = {
	font_size: null
	,first_unicode_codepoint_in_range: null
	,array_of_unicode_codepoints: null
	,num_chars: null
	,chardata_for_range: null
	,h_oversample: null
	,v_oversample: null
	,__class__: kha_graphics2_truetype_Stbtt_$pack_$range
};
var kha_graphics2_truetype_Stbtt_$pack_$context = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_context"] = kha_graphics2_truetype_Stbtt_$pack_$context;
kha_graphics2_truetype_Stbtt_$pack_$context.__name__ = ["kha","graphics2","truetype","Stbtt_pack_context"];
kha_graphics2_truetype_Stbtt_$pack_$context.prototype = {
	width: null
	,height: null
	,stride_in_bytes: null
	,padding: null
	,h_oversample: null
	,v_oversample: null
	,pixels: null
	,__class__: kha_graphics2_truetype_Stbtt_$pack_$context
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = ["kha","graphics2","truetype","Stbtt_fontinfo"];
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	data: null
	,fontstart: null
	,numGlyphs: null
	,loca: null
	,head: null
	,glyf: null
	,hhea: null
	,hmtx: null
	,kern: null
	,index_map: null
	,indexToLocFormat: null
	,__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = ["kha","graphics2","truetype","Stbtt_vertex"];
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	x: null
	,y: null
	,cx: null
	,cy: null
	,type: null
	,padding: null
	,__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = ["kha","graphics2","truetype","Stbtt__bitmap"];
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	w: null
	,h: null
	,stride: null
	,pixels: null
	,pixels_offset: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = ["kha","graphics2","truetype","Stbtt__edge"];
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,invert: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = ["kha","graphics2","truetype","Stbtt__active_edge"];
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	next: null
	,fx: null
	,fdx: null
	,fdy: null
	,direction: null
	,sy: null
	,ey: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = ["kha","graphics2","truetype","Stbtt__point"];
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	x: null
	,y: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = ["kha","graphics2","truetype","StbTruetype"];
kha_graphics2_truetype_StbTruetype.STBTT_assert = function(value) {
	if(!value) {
		throw new js__$Boot_HaxeError("Error");
	}
};
kha_graphics2_truetype_StbTruetype.STBTT_POINT_SIZE = function(x) {
	return -x;
};
kha_graphics2_truetype_StbTruetype.ttBYTE = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	return p.readU8(pos);
};
kha_graphics2_truetype_StbTruetype.ttCHAR = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var n = p.readU8(pos);
	if(n >= 128) {
		return n - 256;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttUSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	return p.readU8(pos + 1) | ch1 << 8;
};
kha_graphics2_truetype_StbTruetype.ttSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	if((n & 32768) != 0) {
		return n - 65536;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttULONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	return p.readU8(pos + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.ttLONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	return p.readU8(pos + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.ttFixed = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	return p.readU8(pos + 3) | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.stbtt_tag4 = function(p,pos,c0,c1,c2,c3) {
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_tag = function(p,pos,str) {
	var c0 = HxOverrides.cca(str,0);
	var c1 = HxOverrides.cca(str,1);
	var c2 = HxOverrides.cca(str,2);
	var c3 = HxOverrides.cca(str,3);
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__isfont = function(font) {
	var c0 = HxOverrides.cca("1",0);
	if(font.readU8(0) == c0 && font.readU8(1) == 0 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	var c01 = HxOverrides.cca("typ1",0);
	var c1 = HxOverrides.cca("typ1",1);
	var c2 = HxOverrides.cca("typ1",2);
	var c3 = HxOverrides.cca("typ1",3);
	if(font.readU8(0) == c01 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
		return true;
	}
	var c02 = HxOverrides.cca("OTTO",0);
	var c11 = HxOverrides.cca("OTTO",1);
	var c21 = HxOverrides.cca("OTTO",2);
	var c31 = HxOverrides.cca("OTTO",3);
	if(font.readU8(0) == c02 && font.readU8(1) == c11 && font.readU8(2) == c21 && font.readU8(3) == c31) {
		return true;
	}
	if(font.readU8(0) == 0 && font.readU8(1) == 1 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	return false;
};
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	var ch1 = data.readU8(pos);
	var num_tables = data.readU8(pos + 1) | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g1 = 0;
	while(_g1 < num_tables) {
		var loc = tabledir + 16 * _g1++;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos1 = loc + 8;
			var ch11 = data.readU8(pos1);
			var ch2 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			return data.readU8(pos1 + 3) | ch3 << 8 | ch2 << 16 | ch11 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex = function(font_collection,index) {
	if(kha_graphics2_truetype_StbTruetype.stbtt__isfont(font_collection)) {
		if(index == 0) {
			return 0;
		} else {
			return -1;
		}
	}
	var c0 = HxOverrides.cca("ttcf",0);
	var c1 = HxOverrides.cca("ttcf",1);
	var c2 = HxOverrides.cca("ttcf",2);
	var c3 = HxOverrides.cca("ttcf",3);
	if(font_collection.readU8(0) == c0 && font_collection.readU8(1) == c1 && font_collection.readU8(2) == c2 && font_collection.readU8(3) == c3) {
		var tmp;
		var ch1 = font_collection.readU8(4);
		var ch2 = font_collection.readU8(5);
		var ch3 = font_collection.readU8(6);
		if((font_collection.readU8(7) | ch3 << 8 | ch2 << 16 | ch1 << 24) != 65536) {
			var ch11 = font_collection.readU8(4);
			var ch21 = font_collection.readU8(5);
			var ch31 = font_collection.readU8(6);
			tmp = (font_collection.readU8(7) | ch31 << 8 | ch21 << 16 | ch11 << 24) == 131072;
		} else {
			tmp = true;
		}
		if(tmp) {
			var ch12 = font_collection.readU8(8);
			var ch22 = font_collection.readU8(9);
			var ch32 = font_collection.readU8(10);
			if(index >= (font_collection.readU8(11) | ch32 << 8 | ch22 << 16 | ch12 << 24)) {
				return -1;
			}
			var pos = 12 + index * 4;
			var ch13 = font_collection.readU8(pos);
			var ch23 = font_collection.readU8(pos + 1);
			var ch33 = font_collection.readU8(pos + 2);
			return font_collection.readU8(pos + 3) | ch33 << 8 | ch23 << 16 | ch13 << 24;
		}
	}
	return -1;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	var cmap;
	var t;
	var numTables;
	info.data = data;
	info.fontstart = fontstart;
	cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		var ch1 = data.readU8(pos);
		info.numGlyphs = data.readU8(pos + 1) | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	var ch11 = data.readU8(pos1);
	numTables = data.readU8(pos1 + 1) | ch11 << 8;
	info.index_map = 0;
	var _g1 = 0;
	while(_g1 < numTables) {
		var encoding_record = cmap + 4 + 8 * _g1++;
		var ch12 = data.readU8(encoding_record);
		switch(data.readU8(encoding_record + 1) | ch12 << 8) {
		case 0:
			var pos2 = encoding_record + 4;
			var ch13 = data.readU8(pos2);
			var ch2 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			info.index_map = cmap + (data.readU8(pos2 + 3) | ch3 << 8 | ch2 << 16 | ch13 << 24);
			break;
		case 3:
			var pos3 = encoding_record + 2;
			var ch14 = data.readU8(pos3);
			switch(data.readU8(pos3 + 1) | ch14 << 8) {
			case 1:case 10:
				var pos4 = encoding_record + 4;
				var ch15 = data.readU8(pos4);
				var ch21 = data.readU8(pos4 + 1);
				var ch31 = data.readU8(pos4 + 2);
				info.index_map = cmap + (data.readU8(pos4 + 3) | ch31 << 8 | ch21 << 16 | ch15 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos5 = info.head + 50;
	var ch16 = data.readU8(pos5);
	info.indexToLocFormat = data.readU8(pos5 + 1) | ch16 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var ch1 = data.readU8(index_map);
	var format = data.readU8(index_map + 1) | ch1 << 8;
	if(format == 0) {
		var pos = index_map + 2;
		var ch11 = data.readU8(pos);
		if(unicode_codepoint < (data.readU8(pos + 1) | ch11 << 8) - 6) {
			return data.readU8(index_map + 6 + unicode_codepoint);
		}
		return 0;
	} else if(format == 6) {
		var pos1 = index_map + 6;
		var ch12 = data.readU8(pos1);
		var first = data.readU8(pos1 + 1) | ch12 << 8;
		var pos2 = index_map + 8;
		var ch13 = data.readU8(pos2);
		var count = data.readU8(pos2 + 1) | ch13 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos3 = index_map + 10 + (unicode_codepoint - first) * 2;
			var ch14 = data.readU8(pos3);
			return data.readU8(pos3 + 1) | ch14 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos4 = index_map + 6;
		var ch15 = data.readU8(pos4);
		var segcount = (data.readU8(pos4 + 1) | ch15 << 8) >> 1;
		var pos5 = index_map + 8;
		var ch16 = data.readU8(pos5);
		var searchRange = (data.readU8(pos5 + 1) | ch16 << 8) >> 1;
		var pos6 = index_map + 10;
		var ch17 = data.readU8(pos6);
		var entrySelector = data.readU8(pos6 + 1) | ch17 << 8;
		var pos7 = index_map + 12;
		var ch18 = data.readU8(pos7);
		var rangeShift = (data.readU8(pos7 + 1) | ch18 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos8 = endCount + rangeShift * 2;
		var ch19 = data.readU8(pos8);
		if(unicode_codepoint >= (data.readU8(pos8 + 1) | ch19 << 8)) {
			search = endCount + rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			var end;
			searchRange >>= 1;
			var pos9 = search + searchRange * 2;
			var ch110 = data.readU8(pos9);
			end = data.readU8(pos9 + 1) | ch110 << 8;
			if(unicode_codepoint > end) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var offset;
		var start;
		var item = search - endCount >> 1;
		var pos10 = endCount + 2 * item;
		var ch111 = data.readU8(pos10);
		if(unicode_codepoint > (data.readU8(pos10 + 1) | ch111 << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos11 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		var ch112 = data.readU8(pos11);
		start = data.readU8(pos11 + 1) | ch112 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos12 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch113 = data.readU8(pos12);
		offset = data.readU8(pos12 + 1) | ch113 << 8;
		if(offset == 0) {
			var pos13 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			var ch114 = data.readU8(pos13);
			var n = data.readU8(pos13 + 1) | ch114 << 8;
			return unicode_codepoint + ((n & 32768) != 0?n - 65536:n);
		}
		var pos14 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch115 = data.readU8(pos14);
		return data.readU8(pos14 + 1) | ch115 << 8;
	} else if(format == 12 || format == 13) {
		var pos15 = index_map + 12;
		var ch116 = data.readU8(pos15);
		var ch2 = data.readU8(pos15 + 1);
		var ch3 = data.readU8(pos15 + 2);
		var ngroups = data.readU8(pos15 + 3) | ch3 << 8 | ch2 << 16 | ch116 << 24;
		var low;
		var high;
		low = 0;
		high = ngroups;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos16 = index_map + 16 + mid * 12;
			var ch117 = data.readU8(pos16);
			var ch21 = data.readU8(pos16 + 1);
			var ch31 = data.readU8(pos16 + 2);
			var start_char = data.readU8(pos16 + 3) | ch31 << 8 | ch21 << 16 | ch117 << 24;
			var pos17 = index_map + 16 + mid * 12 + 4;
			var ch118 = data.readU8(pos17);
			var ch22 = data.readU8(pos17 + 1);
			var ch32 = data.readU8(pos17 + 2);
			var end_char = data.readU8(pos17 + 3) | ch32 << 8 | ch22 << 16 | ch118 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos18 = index_map + 16 + mid * 12 + 8;
				var ch119 = data.readU8(pos18);
				var ch23 = data.readU8(pos18 + 1);
				var ch33 = data.readU8(pos18 + 2);
				var start_glyph = data.readU8(pos18 + 3) | ch33 << 8 | ch23 << 16 | ch119 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointShape = function(info,unicode_codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,unicode_codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var tmp = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		var ch1 = p.readU8(pos);
		g1 = tmp + (p.readU8(pos + 1) | ch1 << 8) * 2;
		var tmp1 = info.glyf;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		var ch11 = p1.readU8(pos1);
		g2 = tmp1 + (p1.readU8(pos1 + 1) | ch11 << 8) * 2;
	} else {
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		var ch12 = p2.readU8(pos2);
		var ch2 = p2.readU8(pos2 + 1);
		var ch3 = p2.readU8(pos2 + 2);
		var tmp2 = p2.readU8(pos2 + 3) | ch3 << 8 | ch2 << 16 | ch12 << 24;
		g1 = info.glyf + tmp2;
		var p3 = info.data;
		var pos3 = info.loca + glyph_index * 4 + 4;
		var ch13 = p3.readU8(pos3);
		var ch21 = p3.readU8(pos3 + 1);
		var ch31 = p3.readU8(pos3 + 2);
		var tmp3 = p3.readU8(pos3 + 3) | ch31 << 8 | ch21 << 16 | ch13 << 24;
		g2 = info.glyf + tmp3;
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	rect.x0 = (n & 32768) != 0?n - 65536:n;
	var p1 = info.data;
	var pos1 = g + 4;
	var ch11 = p1.readU8(pos1);
	var n1 = p1.readU8(pos1 + 1) | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0?n1 - 65536:n1;
	var p2 = info.data;
	var pos2 = g + 6;
	var ch12 = p2.readU8(pos2);
	var n2 = p2.readU8(pos2 + 1) | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0?n2 - 65536:n2;
	var p3 = info.data;
	var pos3 = g + 8;
	var ch13 = p3.readU8(pos3);
	var n3 = p3.readU8(pos3 + 1) | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0?n3 - 65536:n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBox = function(info,codepoint,rect) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),rect);
};
kha_graphics2_truetype_StbTruetype.stbtt_IsGlyphEmpty = function(info,glyph_index) {
	var numberOfContours;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return true;
	}
	var p = info.data;
	var ch1 = p.readU8(g);
	var n = p.readU8(g + 1) | ch1 << 8;
	if((n & 32768) != 0) {
		numberOfContours = n - 65536;
	} else {
		numberOfContours = n;
	}
	return numberOfContours == 0;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g1 = 0;
	while(_g1 < count) {
		var i = _g1++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var numberOfContours;
	var endPtsOfContours;
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var ch1 = data.readU8(g);
	var n = data.readU8(g + 1) | ch1 << 8;
	if((n & 32768) != 0) {
		numberOfContours = n - 65536;
	} else {
		numberOfContours = n;
	}
	if(numberOfContours > 0) {
		var flags = 0;
		var flagcount;
		var ins;
		var j = 0;
		var m;
		var n1;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var x;
		var y;
		var cx;
		var cy;
		var sx;
		var sy;
		var scx;
		var scy;
		var points;
		var pointsIndex = 0;
		endPtsOfContours = data.sub(g + 10,data.get_length() - (g + 10));
		var pos = g + 10 + numberOfContours * 2;
		var ch11 = data.readU8(pos);
		ins = data.readU8(pos + 1) | ch11 << 8;
		points = data.sub(g + 10 + numberOfContours * 2 + 2 + ins,data.get_length() - (g + 10 + numberOfContours * 2 + 2 + ins));
		var pos1 = numberOfContours * 2 - 2;
		var ch12 = endPtsOfContours.readU8(pos1);
		n1 = 1 + (endPtsOfContours.readU8(pos1 + 1) | ch12 << 8);
		m = n1 + 2 * numberOfContours;
		vertices = new Array(m);
		if(vertices == null) {
			return null;
		} else {
			var _g1 = 0;
			var _g = vertices.length;
			while(_g1 < _g) vertices[_g1++] = new kha_graphics2_truetype_Stbtt_$vertex();
		}
		next_move = 0;
		flagcount = 0;
		off = m - n1;
		var _g11 = 0;
		var _g2 = n1;
		while(_g11 < _g2) {
			var i = _g11++;
			if(flagcount == 0) {
				flags = points.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = points.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i].type = flags;
		}
		x = 0;
		var _g12 = 0;
		var _g3 = n1;
		while(_g12 < _g3) {
			var i1 = _g12++;
			flags = vertices[off + i1].type;
			if((flags & 2) != 0) {
				var dx = points.readU8(pointsIndex++);
				x += (flags & 16) != 0?dx:-dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch13 = points.readU8(pointsIndex);
				var n2 = points.readU8(pointsIndex + 1) | ch13 << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i1].x = x;
		}
		y = 0;
		var _g13 = 0;
		var _g4 = n1;
		while(_g13 < _g4) {
			var i2 = _g13++;
			flags = vertices[off + i2].type;
			if((flags & 4) != 0) {
				var dy = points.readU8(pointsIndex++);
				y += (flags & 32) != 0?dy:-dy;
			} else if((flags & 32) == 0) {
				var value1;
				var ch14 = points.readU8(pointsIndex);
				var n3 = points.readU8(pointsIndex + 1) | ch14 << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i2].y = y;
		}
		num_vertices = 0;
		scy = 0;
		scx = scy;
		cy = scx;
		cx = cy;
		sy = cx;
		sx = sy;
		var i3 = 0;
		while(i3 < n1) {
			flags = vertices[off + i3].type;
			x = vertices[off + i3].x;
			y = vertices[off + i3].y;
			if(next_move == i3) {
				if(i3 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i3 + 1].type & 1) == 0) {
						sx = x + vertices[off + i3 + 1].x >> 1;
						sy = y + vertices[off + i3 + 1].y >> 1;
					} else {
						sx = vertices[off + i3 + 1].x;
						sy = vertices[off + i3 + 1].y;
						++i3;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos2 = j * 2;
				var ch15 = endPtsOfContours.readU8(pos2);
				next_move = 1 + (endPtsOfContours.readU8(pos2 + 1) | ch15 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i3;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var comp = data.sub(g + 10,data.get_length() - (g + 10));
		var compIndex = 0;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var flags1;
			var gidx;
			var comp_num_verts = 0;
			var i4;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var m1;
			var n4;
			var ch16 = comp.readU8(compIndex);
			var n5 = comp.readU8(compIndex + 1) | ch16 << 8;
			if((n5 & 32768) != 0) {
				flags1 = n5 - 65536;
			} else {
				flags1 = n5;
			}
			compIndex += 2;
			var ch17 = comp.readU8(compIndex);
			var n6 = comp.readU8(compIndex + 1) | ch17 << 8;
			if((n6 & 32768) != 0) {
				gidx = n6 - 65536;
			} else {
				gidx = n6;
			}
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var ch18 = comp.readU8(compIndex);
					var n7 = comp.readU8(compIndex + 1) | ch18 << 8;
					if((n7 & 32768) != 0) {
						mtx4 = n7 - 65536;
					} else {
						mtx4 = n7;
					}
					compIndex += 2;
					var ch19 = comp.readU8(compIndex);
					var n8 = comp.readU8(compIndex + 1) | ch19 << 8;
					if((n8 & 32768) != 0) {
						mtx5 = n8 - 65536;
					} else {
						mtx5 = n8;
					}
					compIndex += 2;
				} else {
					var n9 = comp.readU8(compIndex);
					if(n9 >= 128) {
						mtx4 = n9 - 256;
					} else {
						mtx4 = n9;
					}
					++compIndex;
					var n10 = comp.readU8(compIndex);
					if(n10 >= 128) {
						mtx5 = n10 - 256;
					} else {
						mtx5 = n10;
					}
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var ch110 = comp.readU8(compIndex);
				var n11 = comp.readU8(compIndex + 1) | ch110 << 8;
				mtx3 = ((n11 & 32768) != 0?n11 - 65536:n11) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var ch111 = comp.readU8(compIndex);
				var n12 = comp.readU8(compIndex + 1) | ch111 << 8;
				mtx0 = ((n12 & 32768) != 0?n12 - 65536:n12) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var ch112 = comp.readU8(compIndex);
				var n13 = comp.readU8(compIndex + 1) | ch112 << 8;
				mtx3 = ((n13 & 32768) != 0?n13 - 65536:n13) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var ch113 = comp.readU8(compIndex);
				var n14 = comp.readU8(compIndex + 1) | ch113 << 8;
				mtx0 = ((n14 & 32768) != 0?n14 - 65536:n14) / 16384.0;
				compIndex += 2;
				var ch114 = comp.readU8(compIndex);
				var n15 = comp.readU8(compIndex + 1) | ch114 << 8;
				mtx1 = ((n15 & 32768) != 0?n15 - 65536:n15) / 16384.0;
				compIndex += 2;
				var ch115 = comp.readU8(compIndex);
				var n16 = comp.readU8(compIndex + 1) | ch115 << 8;
				mtx2 = ((n16 & 32768) != 0?n16 - 65536:n16) / 16384.0;
				compIndex += 2;
				var ch116 = comp.readU8(compIndex);
				var n17 = comp.readU8(compIndex + 1) | ch116 << 8;
				mtx3 = ((n17 & 32768) != 0?n17 - 65536:n17) / 16384.0;
				compIndex += 2;
			}
			m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			n4 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
			if(comp_verts == null) {
				comp_num_verts = 0;
			} else {
				comp_num_verts = comp_verts.length;
			}
			if(comp_num_verts > 0) {
				var _g14 = 0;
				var _g5 = comp_num_verts;
				while(_g14 < _g5) {
					var v = comp_verts[_g14++];
					var x1;
					var y1;
					x1 = v.x;
					y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n4 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n4 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				tmp = new Array(num_vertices + comp_num_verts);
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var tmp1 = new Array(num_vertices);
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	var ch1 = p.readU8(pos);
	var numOfLongHorMetrics = p.readU8(pos + 1) | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		var ch11 = p1.readU8(pos1);
		var n = p1.readU8(pos1 + 1) | ch11 << 8;
		metrics.advanceWidth = (n & 32768) != 0?n - 65536:n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		var ch12 = p2.readU8(pos2);
		var n1 = p2.readU8(pos2 + 1) | ch12 << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0?n1 - 65536:n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		var ch13 = p3.readU8(pos3);
		var n2 = p3.readU8(pos3 + 1) | ch13 << 8;
		metrics.advanceWidth = (n2 & 32768) != 0?n2 - 65536:n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		var ch14 = p4.readU8(pos4);
		var n3 = p4.readU8(pos4 + 1) | ch14 << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0?n3 - 65536:n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance = function(info,glyph1,glyph2) {
	var data = info.data.sub(info.kern,info.data.get_length() - info.kern);
	var needle;
	var straw;
	var l;
	var r;
	var m;
	if(info.kern == 0) {
		return 0;
	}
	var ch1 = data.readU8(2);
	if((data.readU8(3) | ch1 << 8) < 1) {
		return 0;
	}
	var ch11 = data.readU8(8);
	if((data.readU8(9) | ch11 << 8) != 1) {
		return 0;
	}
	l = 0;
	var ch12 = data.readU8(10);
	r = (data.readU8(11) | ch12 << 8) - 1;
	needle = glyph1 << 16 | glyph2;
	while(l <= r) {
		m = l + r >> 1;
		var pos = 18 + m * 6;
		var ch13 = data.readU8(pos);
		var ch2 = data.readU8(pos + 1);
		var ch3 = data.readU8(pos + 2);
		straw = data.readU8(pos + 3) | ch3 << 8 | ch2 << 16 | ch13 << 24;
		if(needle < straw) {
			r = m - 1;
		} else if(needle > straw) {
			l = m + 1;
		} else {
			var pos1 = 22 + m * 6;
			var ch14 = data.readU8(pos1);
			var n = data.readU8(pos1 + 1) | ch14 << 8;
			if((n & 32768) != 0) {
				return n - 65536;
			} else {
				return n;
			}
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointKernAdvance = function(info,ch1,ch2) {
	if(info.kern == 0) {
		return 0;
	}
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch1),kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch2));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointHMetrics = function(info,codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	metrics.ascent = (n & 32768) != 0?n - 65536:n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var n1 = p1.readU8(pos1 + 1) | ch11 << 8;
	metrics.descent = (n1 & 32768) != 0?n1 - 65536:n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	var ch12 = p2.readU8(pos2);
	var n2 = p2.readU8(pos2 + 1) | ch12 << 8;
	metrics.lineGap = (n2 & 32768) != 0?n2 - 65536:n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontBoundingBox = function(info) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	var p = info.data;
	var pos = info.head + 36;
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	rect.x0 = (n & 32768) != 0?n - 65536:n;
	var p1 = info.data;
	var pos1 = info.head + 38;
	var ch11 = p1.readU8(pos1);
	var n1 = p1.readU8(pos1 + 1) | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0?n1 - 65536:n1;
	var p2 = info.data;
	var pos2 = info.head + 40;
	var ch12 = p2.readU8(pos2);
	var n2 = p2.readU8(pos2 + 1) | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0?n2 - 65536:n2;
	var p3 = info.data;
	var pos3 = info.head + 42;
	var ch13 = p3.readU8(pos3);
	var n3 = p3.readU8(pos3 + 1) | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0?n3 - 65536:n3;
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var n = p.readU8(pos + 1) | ch1 << 8;
	var tmp = (n & 32768) != 0?n - 65536:n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var n1 = p1.readU8(pos1 + 1) | ch11 << 8;
	return height / (tmp - ((n1 & 32768) != 0?n1 - 65536:n1));
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForMappingEmToPixels = function(info,pixels) {
	var p = info.data;
	var pos = info.head + 18;
	var ch1 = p.readU8(pos);
	return pixels / (p.readU8(pos + 1) | ch1 << 8);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var x0 = rect.x0;
		var x1 = rect.x1;
		var y0 = rect.y0;
		var y1 = rect.y1;
		rect.x0 = Math.floor(x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel = function(font,codepoint,scale_x,scale_y,shift_x,shift_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(font,codepoint),scale_x,scale_y,shift_x,shift_y);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBox = function(font,codepoint,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel(font,codepoint,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0?1.0 / dxdy:0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert?1.0:-1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		scanline[_g] = scanline[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g1 = scanlineIndex + x;
		scanline[_g1] = scanline[_g1] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var height;
					var x = x_top | 0;
					height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					scanline[x] = scanline[x] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g = scanline_fillIndex + x;
					scanline_fill[_g] = scanline_fill[_g] + e.direction * height;
				} else {
					var x1;
					var x2;
					var y_crossing;
					var step;
					var sign;
					var area;
					if(x_top > x_bottom) {
						var t;
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					x1 = x_top | 0;
					x2 = x_bottom | 0;
					y_crossing = (x1 + 1 - x01) * dy + y_top;
					sign = e.direction;
					area = sign * (y_crossing - sy0);
					scanline[x1] = scanline[x1] + area * (1 - (x_top - x1 + (x1 + 1 - x1)) / 2);
					step = sign * dy;
					var _g1 = x1 + 1;
					while(_g1 < x2) {
						var x3 = _g1++;
						scanline[x3] = scanline[x3] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x1 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					scanline[x2] = scanline[x2] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g2 = scanline_fillIndex + x2;
					scanline_fill[_g2] = scanline_fill[_g2] + sign * (sy1 - sy0);
				}
			} else {
				var _g11 = 0;
				while(_g11 < len) {
					var x4 = _g11++;
					var x11 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y1;
					var y2;
					y1 = (x4 - x01) / dx + y_top;
					y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x11 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y_bottom);
					} else if(x31 < x11 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x31,y_bottom);
					} else if(x01 < x11 && x31 > x11) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x31,y_bottom);
					} else if(x31 < x11 && x01 > x11) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x11,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x11,y1,x31,y_bottom);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y_bottom);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y_bottom);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y_top,x31,y_bottom);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var y;
	var j = 0;
	var i;
	var scanline;
	var scanline2;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		var length = result.w * 2 + 1;
		scanline = new Array(length);
	} else {
		scanline = new Array(129);
	}
	scanline2 = scanline;
	scanline2Index = result.w;
	y = off_y;
	e[eIndex + n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value;
		var step_parent;
		step_value = active;
		step_parent = null;
		var _g1 = 0;
		var _g = result.w;
		while(_g1 < _g) scanline[_g1++] = 0;
		var _g11 = 0;
		var _g2 = result.w + 1;
		while(_g11 < _g2) scanline2[scanline2Index + _g11++] = 0;
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g12 = 0;
		var _g3 = result.w;
		while(_g12 < _g3) {
			var i1 = _g12++;
			var k;
			var m;
			sum += scanline2[scanline2Index + i1];
			k = scanline[i1] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i1,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var j;
	var _g1 = 1;
	while(_g1 < n) {
		var i = _g1++;
		var t = p[i];
		j = i;
		while(j > 0) {
			if(!kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(t,p[j - 1])) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c01;
		var c12;
		var c;
		var m;
		var i;
		var j;
		m = n >> 1;
		c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
		c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(c01 != c12) {
			var z;
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			if(c == c12) {
				z = 0;
			} else {
				z = n - 1;
			}
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		i = 1;
		j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert?-scale_y:scale_y;
	var e;
	var n;
	var i;
	var j;
	var k;
	var m;
	var vsubsample = 1;
	var ptsIndex = 0;
	n = 0;
	var _g1 = 0;
	var _g = windings;
	while(_g1 < _g) n += wcount[_g1++];
	e = new Array(n + 1);
	if(e == null) {
		return;
	} else {
		var _g11 = 0;
		var _g2 = e.length;
		while(_g11 < _g2) e[_g11++] = new kha_graphics2_truetype_Stbtt_$_$edge();
	}
	n = 0;
	m = 0;
	var _g12 = 0;
	var _g3 = windings;
	while(_g12 < _g3) {
		var i1 = _g12++;
		var p = pts;
		var pIndex = ptsIndex + m;
		m += wcount[i1];
		j = wcount[i1] - 1;
		var _g31 = 0;
		var _g21 = wcount[i1];
		while(_g31 < _g21) {
			var k1 = _g31++;
			var a = k1;
			var b = j;
			if(p[pIndex + j].y == p[pIndex + k1].y) {
				j = k1;
				continue;
			}
			e[n].invert = false;
			if(invert?p[pIndex + j].y > p[pIndex + k1].y:p[pIndex + j].y < p[pIndex + k1].y) {
				e[n].invert = true;
				a = j;
				b = k1;
			}
			e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
			e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
			++n;
			j = k1;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value = num_points.value + 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var i;
	var n = 0;
	var start = 0;
	var pass;
	var _g1 = 0;
	var _g = num_verts;
	while(_g1 < _g) if(vertices[_g1++].type == 1) {
		++n;
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	contour_lengths.value = new Array(n);
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var pass1 = _g2++;
		var x = 0;
		var y = 0;
		if(pass1 == 1) {
			points = new Array(num_points);
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g11 = points.length;
				while(_g21 < _g11) points[_g21++] = new kha_graphics2_truetype_Stbtt_$_$point();
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		var _g12 = num_verts;
		while(_g22 < _g12) {
			var i1 = _g22++;
			switch(vertices[i1].type) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i1].x;
				y = vertices[i1].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i1].x;
				y = vertices[i1].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i1].cx,vertices[i1].cy,vertices[i1].x,vertices[i1].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i1].x;
				y = vertices[i1].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var scale = scale_x > scale_y?scale_y:scale_x;
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : 0};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,glyph,region) {
	var ix0;
	var iy0;
	var ix1;
	var iy1;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices.length;
	if(scale_x == 0) {
		scale_x = scale_y;
	}
	if(scale_y == 0) {
		if(scale_x == 0) {
			return null;
		}
		scale_y = scale_x;
	}
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	ix1 = rect.x1;
	iy1 = rect.y1;
	gbm.w = ix1 - ix0;
	gbm.h = iy1 - iy0;
	gbm.pixels = null;
	region.width = gbm.w;
	region.height = gbm.h;
	region.xoff = ix0;
	region.yoff = iy0;
	if(gbm.w != 0 && gbm.h != 0) {
		gbm.pixels = kha_internal_BytesBlob.alloc(gbm.w * gbm.h);
		if(gbm.pixels != null) {
			gbm.stride = gbm.w;
			kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
		}
	}
	return gbm.pixels;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmap = function(info,scale_x,scale_y,glyph,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,glyph,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null?0:vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmap = function(info,scale_x,scale_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,codepoint,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,codepoint);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var scale;
	var x;
	var y;
	var bottom_y;
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var _g1 = 0;
	var _g = pw * ph;
	while(_g1 < _g) pixels.writeU8(_g1++,0);
	y = 1;
	x = 1;
	bottom_y = 1;
	scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i = 0;
	var _g2 = 0;
	while(_g2 < chars.length) {
		var index = chars[_g2];
		++_g2;
		var advance;
		var x0;
		var y0;
		var x1;
		var y1;
		var gw;
		var gh;
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
		advance = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g).advanceWidth;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		x0 = rect.x0;
		y0 = rect.y0;
		x1 = rect.x1;
		y1 = rect.y1;
		gw = x1 - x0;
		gh = y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,x + y * pw,gw,gh,pw,scale,scale,g);
		chardata[i].x0 = x;
		chardata[i].y0 = y;
		chardata[i].x1 = x + gw;
		chardata[i].y1 = y + gh;
		chardata[i].xadvance = scale * advance;
		chardata[i].xoff = x0;
		chardata[i].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i;
	}
	return bottom_y;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetBakedQuad = function(chardata,pw,ph,char_index,xpos,ypos,q,opengl_fillrule) {
	var d3d_bias = opengl_fillrule?0:-0.5;
	var ipw = 1.0 / pw;
	var iph = 1.0 / ph;
	var b = chardata[char_index];
	var round_x = Math.floor(xpos.value + b.xoff + 0.5);
	var round_y = Math.floor(ypos.value + b.yoff + 0.5);
	q.x0 = round_x + d3d_bias;
	q.y0 = round_y + d3d_bias;
	q.x1 = round_x + b.x1 - b.x0 + d3d_bias;
	q.y1 = round_y + b.y1 - b.y0 + d3d_bias;
	q.s0 = b.x0 * ipw;
	q.t0 = b.y0 * iph;
	q.s1 = b.x1 * ipw;
	q.t1 = b.y1 * iph;
	xpos.value += b.xadvance;
};
var kha_graphics4_BlendingFactor = $hxClasses["kha.graphics4.BlendingFactor"] = { __ename__ : ["kha","graphics4","BlendingFactor"], __constructs__ : ["Undefined","BlendOne","BlendZero","SourceAlpha","DestinationAlpha","InverseSourceAlpha","InverseDestinationAlpha","SourceColor","DestinationColor","InverseSourceColor","InverseDestinationColor"] };
kha_graphics4_BlendingFactor.Undefined = ["Undefined",0];
kha_graphics4_BlendingFactor.Undefined.toString = $estr;
kha_graphics4_BlendingFactor.Undefined.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.BlendOne = ["BlendOne",1];
kha_graphics4_BlendingFactor.BlendOne.toString = $estr;
kha_graphics4_BlendingFactor.BlendOne.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.BlendZero = ["BlendZero",2];
kha_graphics4_BlendingFactor.BlendZero.toString = $estr;
kha_graphics4_BlendingFactor.BlendZero.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.SourceAlpha = ["SourceAlpha",3];
kha_graphics4_BlendingFactor.SourceAlpha.toString = $estr;
kha_graphics4_BlendingFactor.SourceAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.DestinationAlpha = ["DestinationAlpha",4];
kha_graphics4_BlendingFactor.DestinationAlpha.toString = $estr;
kha_graphics4_BlendingFactor.DestinationAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseSourceAlpha = ["InverseSourceAlpha",5];
kha_graphics4_BlendingFactor.InverseSourceAlpha.toString = $estr;
kha_graphics4_BlendingFactor.InverseSourceAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseDestinationAlpha = ["InverseDestinationAlpha",6];
kha_graphics4_BlendingFactor.InverseDestinationAlpha.toString = $estr;
kha_graphics4_BlendingFactor.InverseDestinationAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.SourceColor = ["SourceColor",7];
kha_graphics4_BlendingFactor.SourceColor.toString = $estr;
kha_graphics4_BlendingFactor.SourceColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.DestinationColor = ["DestinationColor",8];
kha_graphics4_BlendingFactor.DestinationColor.toString = $estr;
kha_graphics4_BlendingFactor.DestinationColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseSourceColor = ["InverseSourceColor",9];
kha_graphics4_BlendingFactor.InverseSourceColor.toString = $estr;
kha_graphics4_BlendingFactor.InverseSourceColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseDestinationColor = ["InverseDestinationColor",10];
kha_graphics4_BlendingFactor.InverseDestinationColor.toString = $estr;
kha_graphics4_BlendingFactor.InverseDestinationColor.__enum__ = kha_graphics4_BlendingFactor;
var kha_graphics4_BlendingOperation = $hxClasses["kha.graphics4.BlendingOperation"] = { __ename__ : ["kha","graphics4","BlendingOperation"], __constructs__ : ["Add","Subtract","ReverseSubtract","Min","Max"] };
kha_graphics4_BlendingOperation.Add = ["Add",0];
kha_graphics4_BlendingOperation.Add.toString = $estr;
kha_graphics4_BlendingOperation.Add.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Subtract = ["Subtract",1];
kha_graphics4_BlendingOperation.Subtract.toString = $estr;
kha_graphics4_BlendingOperation.Subtract.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.ReverseSubtract = ["ReverseSubtract",2];
kha_graphics4_BlendingOperation.ReverseSubtract.toString = $estr;
kha_graphics4_BlendingOperation.ReverseSubtract.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Min = ["Min",3];
kha_graphics4_BlendingOperation.Min.toString = $estr;
kha_graphics4_BlendingOperation.Min.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Max = ["Max",4];
kha_graphics4_BlendingOperation.Max.toString = $estr;
kha_graphics4_BlendingOperation.Max.__enum__ = kha_graphics4_BlendingOperation;
var kha_graphics4_CompareMode = $hxClasses["kha.graphics4.CompareMode"] = { __ename__ : ["kha","graphics4","CompareMode"], __constructs__ : ["Always","Never","Equal","NotEqual","Less","LessEqual","Greater","GreaterEqual"] };
kha_graphics4_CompareMode.Always = ["Always",0];
kha_graphics4_CompareMode.Always.toString = $estr;
kha_graphics4_CompareMode.Always.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Never = ["Never",1];
kha_graphics4_CompareMode.Never.toString = $estr;
kha_graphics4_CompareMode.Never.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Equal = ["Equal",2];
kha_graphics4_CompareMode.Equal.toString = $estr;
kha_graphics4_CompareMode.Equal.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.NotEqual = ["NotEqual",3];
kha_graphics4_CompareMode.NotEqual.toString = $estr;
kha_graphics4_CompareMode.NotEqual.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Less = ["Less",4];
kha_graphics4_CompareMode.Less.toString = $estr;
kha_graphics4_CompareMode.Less.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.LessEqual = ["LessEqual",5];
kha_graphics4_CompareMode.LessEqual.toString = $estr;
kha_graphics4_CompareMode.LessEqual.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Greater = ["Greater",6];
kha_graphics4_CompareMode.Greater.toString = $estr;
kha_graphics4_CompareMode.Greater.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.GreaterEqual = ["GreaterEqual",7];
kha_graphics4_CompareMode.GreaterEqual.toString = $estr;
kha_graphics4_CompareMode.GreaterEqual.__enum__ = kha_graphics4_CompareMode;
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = ["kha","graphics4","ConstantLocation"];
var kha_graphics4_CubeMap = function() { };
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = ["kha","graphics4","CubeMap"];
kha_graphics4_CubeMap.prototype = {
	get_size: null
	,size: null
	,lock: null
	,unlock: null
	,__class__: kha_graphics4_CubeMap
	,__properties__: {get_size:"get_size"}
};
var kha_graphics4_CullMode = $hxClasses["kha.graphics4.CullMode"] = { __ename__ : ["kha","graphics4","CullMode"], __constructs__ : ["Clockwise","CounterClockwise","None"] };
kha_graphics4_CullMode.Clockwise = ["Clockwise",0];
kha_graphics4_CullMode.Clockwise.toString = $estr;
kha_graphics4_CullMode.Clockwise.__enum__ = kha_graphics4_CullMode;
kha_graphics4_CullMode.CounterClockwise = ["CounterClockwise",1];
kha_graphics4_CullMode.CounterClockwise.toString = $estr;
kha_graphics4_CullMode.CounterClockwise.__enum__ = kha_graphics4_CullMode;
kha_graphics4_CullMode.None = ["None",2];
kha_graphics4_CullMode.None.toString = $estr;
kha_graphics4_CullMode.None.__enum__ = kha_graphics4_CullMode;
var kha_graphics4_FragmentShader = function(source,file) {
	this.source = source.toString();
	this.type = 35632;
	this.shader = null;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = ["kha","graphics4","FragmentShader"];
kha_graphics4_FragmentShader.prototype = {
	source: null
	,type: null
	,shader: null
	,'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.source = null;
	}
	,__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function(source) {
};
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = ["kha","graphics4","GeometryShader"];
kha_graphics4_GeometryShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_GeometryShader
};
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = ["kha","graphics4","Graphics"];
kha_graphics4_Graphics.prototype = {
	begin: null
	,end: null
	,vsynced: null
	,refreshRate: null
	,clear: null
	,viewport: null
	,scissor: null
	,disableScissor: null
	,setVertexBuffer: null
	,setVertexBuffers: null
	,setIndexBuffer: null
	,setTexture: null
	,setTextureDepth: null
	,setVideoTexture: null
	,setTextureParameters: null
	,createCubeMap: null
	,renderTargetsInvertedY: null
	,instancedRenderingAvailable: null
	,setPipeline: null
	,setBool: null
	,setInt: null
	,setFloat: null
	,setFloat2: null
	,setFloat3: null
	,setFloat4: null
	,setFloats: null
	,setVector2: null
	,setVector3: null
	,setVector4: null
	,setMatrix: null
	,drawIndexedVertices: null
	,drawIndexedVerticesInstanced: null
	,flush: null
	,__class__: kha_graphics4_Graphics
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	this.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = ["kha","graphics4","ImageShaderPainter"];
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_ImageShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_ImageShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	kha_graphics4_ImageShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	kha_graphics4_ImageShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_ImageShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_ImageShaderPainter.structure.add("texPosition",kha_graphics4_VertexData.Float2);
	kha_graphics4_ImageShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_ImageShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_ImageShaderPainter.structure];
	kha_graphics4_ImageShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	kha_graphics4_ImageShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.compile();
};
kha_graphics4_ImageShaderPainter.prototype = {
	projectionMatrix: null
	,projectionLocation: null
	,textureLocation: null
	,bufferIndex: null
	,rectVertexBuffer: null
	,rectVertices: null
	,indexBuffer: null
	,lastTexture: null
	,bilinear: null
	,bilinearMipmaps: null
	,g: null
	,myPipeline: null
	,sourceBlend: null
	,destinationBlend: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
			this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
			this.textureLocation = pipe.getTextureUnit("tex");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ImageShaderPainter.bufferSize * 4,kha_graphics4_ImageShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ImageShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_ImageShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex] = bottomleftx;
		this.rectVertices[baseIndex + 1] = bottomlefty;
		this.rectVertices[baseIndex + 2] = -5.0;
		this.rectVertices[baseIndex + 9] = topleftx;
		this.rectVertices[baseIndex + 10] = toplefty;
		this.rectVertices[baseIndex + 11] = -5.0;
		this.rectVertices[baseIndex + 18] = toprightx;
		this.rectVertices[baseIndex + 19] = toprighty;
		this.rectVertices[baseIndex + 20] = -5.0;
		this.rectVertices[baseIndex + 27] = bottomrightx;
		this.rectVertices[baseIndex + 28] = bottomrighty;
		this.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 3] = left;
		this.rectVertices[baseIndex + 4] = bottom;
		this.rectVertices[baseIndex + 12] = left;
		this.rectVertices[baseIndex + 13] = top;
		this.rectVertices[baseIndex + 21] = right;
		this.rectVertices[baseIndex + 22] = top;
		this.rectVertices[baseIndex + 30] = right;
		this.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColor: function(r,g,b,a) {
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 5] = r;
		this.rectVertices[baseIndex + 6] = g;
		this.rectVertices[baseIndex + 7] = b;
		this.rectVertices[baseIndex + 8] = a;
		this.rectVertices[baseIndex + 14] = r;
		this.rectVertices[baseIndex + 15] = g;
		this.rectVertices[baseIndex + 16] = b;
		this.rectVertices[baseIndex + 17] = a;
		this.rectVertices[baseIndex + 23] = r;
		this.rectVertices[baseIndex + 24] = g;
		this.rectVertices[baseIndex + 25] = b;
		this.rectVertices[baseIndex + 26] = a;
		this.rectVertices[baseIndex + 32] = r;
		this.rectVertices[baseIndex + 33] = g;
		this.rectVertices[baseIndex + 34] = b;
		this.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null?kha_graphics4_ImageShaderPainter.shaderPipeline:this.get_pipeline());
		this.g.setTexture(this.textureLocation,this.lastTexture);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear?kha_graphics4_TextureFilter.LinearFilter:kha_graphics4_TextureFilter.PointFilter,this.bilinear?kha_graphics4_TextureFilter.LinearFilter:kha_graphics4_TextureFilter.PointFilter,this.bilinearMipmaps?kha_graphics4_MipMapFilter.LinearMipFilter:kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setBilinearMipmapFilter: function(bilinear) {
		this.end();
		this.bilinearMipmaps = bilinear;
	}
	,drawImage: function(img,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		if(this.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || this.lastTexture != null && img != this.lastTexture) {
			this.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 5] = r;
		this.rectVertices[baseIndex + 6] = g;
		this.rectVertices[baseIndex + 7] = b;
		this.rectVertices[baseIndex + 8] = a;
		this.rectVertices[baseIndex + 14] = r;
		this.rectVertices[baseIndex + 15] = g;
		this.rectVertices[baseIndex + 16] = b;
		this.rectVertices[baseIndex + 17] = a;
		this.rectVertices[baseIndex + 23] = r;
		this.rectVertices[baseIndex + 24] = g;
		this.rectVertices[baseIndex + 25] = b;
		this.rectVertices[baseIndex + 26] = a;
		this.rectVertices[baseIndex + 32] = r;
		this.rectVertices[baseIndex + 33] = g;
		this.rectVertices[baseIndex + 34] = b;
		this.rectVertices[baseIndex + 35] = a;
		var right = img.get_width() / img.get_realWidth();
		var bottom = img.get_height() / img.get_realHeight();
		var baseIndex1 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex1 + 3] = 0;
		this.rectVertices[baseIndex1 + 4] = bottom;
		this.rectVertices[baseIndex1 + 12] = 0;
		this.rectVertices[baseIndex1 + 13] = 0;
		this.rectVertices[baseIndex1 + 21] = right;
		this.rectVertices[baseIndex1 + 22] = 0;
		this.rectVertices[baseIndex1 + 30] = right;
		this.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex2] = bottomleftx;
		this.rectVertices[baseIndex2 + 1] = bottomlefty;
		this.rectVertices[baseIndex2 + 2] = -5.0;
		this.rectVertices[baseIndex2 + 9] = topleftx;
		this.rectVertices[baseIndex2 + 10] = toplefty;
		this.rectVertices[baseIndex2 + 11] = -5.0;
		this.rectVertices[baseIndex2 + 18] = toprightx;
		this.rectVertices[baseIndex2 + 19] = toprighty;
		this.rectVertices[baseIndex2 + 20] = -5.0;
		this.rectVertices[baseIndex2 + 27] = bottomrightx;
		this.rectVertices[baseIndex2 + 28] = bottomrighty;
		this.rectVertices[baseIndex2 + 29] = -5.0;
		++this.bufferIndex;
		this.lastTexture = img;
	}
	,drawImage2: function(img,sx,sy,sw,sh,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		if(this.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || this.lastTexture != null && img != this.lastTexture) {
			this.drawBuffer();
		}
		var left = sx / img.get_realWidth();
		var top = sy / img.get_realHeight();
		var right = (sx + sw) / img.get_realWidth();
		var bottom = (sy + sh) / img.get_realHeight();
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 3] = left;
		this.rectVertices[baseIndex + 4] = bottom;
		this.rectVertices[baseIndex + 12] = left;
		this.rectVertices[baseIndex + 13] = top;
		this.rectVertices[baseIndex + 21] = right;
		this.rectVertices[baseIndex + 22] = top;
		this.rectVertices[baseIndex + 30] = right;
		this.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex1 + 5] = r;
		this.rectVertices[baseIndex1 + 6] = g;
		this.rectVertices[baseIndex1 + 7] = b;
		this.rectVertices[baseIndex1 + 8] = a;
		this.rectVertices[baseIndex1 + 14] = r;
		this.rectVertices[baseIndex1 + 15] = g;
		this.rectVertices[baseIndex1 + 16] = b;
		this.rectVertices[baseIndex1 + 17] = a;
		this.rectVertices[baseIndex1 + 23] = r;
		this.rectVertices[baseIndex1 + 24] = g;
		this.rectVertices[baseIndex1 + 25] = b;
		this.rectVertices[baseIndex1 + 26] = a;
		this.rectVertices[baseIndex1 + 32] = r;
		this.rectVertices[baseIndex1 + 33] = g;
		this.rectVertices[baseIndex1 + 34] = b;
		this.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex2] = bottomleftx;
		this.rectVertices[baseIndex2 + 1] = bottomlefty;
		this.rectVertices[baseIndex2 + 2] = -5.0;
		this.rectVertices[baseIndex2 + 9] = topleftx;
		this.rectVertices[baseIndex2 + 10] = toplefty;
		this.rectVertices[baseIndex2 + 11] = -5.0;
		this.rectVertices[baseIndex2 + 18] = toprightx;
		this.rectVertices[baseIndex2 + 19] = toprighty;
		this.rectVertices[baseIndex2 + 20] = -5.0;
		this.rectVertices[baseIndex2 + 27] = bottomrightx;
		this.rectVertices[baseIndex2 + 28] = bottomrighty;
		this.rectVertices[baseIndex2 + 29] = -5.0;
		++this.bufferIndex;
		this.lastTexture = img;
	}
	,drawImageScale: function(img,sx,sy,sw,sh,left,top,right,bottom,opacity,color) {
		if(this.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || this.lastTexture != null && img != this.lastTexture) {
			this.drawBuffer();
		}
		var left1 = sx / img.get_realWidth();
		var top1 = sy / img.get_realHeight();
		var right1 = (sx + sw) / img.get_realWidth();
		var bottom1 = (sy + sh) / img.get_realHeight();
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 3] = left1;
		this.rectVertices[baseIndex + 4] = bottom1;
		this.rectVertices[baseIndex + 12] = left1;
		this.rectVertices[baseIndex + 13] = top1;
		this.rectVertices[baseIndex + 21] = right1;
		this.rectVertices[baseIndex + 22] = top1;
		this.rectVertices[baseIndex + 30] = right1;
		this.rectVertices[baseIndex + 31] = bottom1;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var baseIndex1 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex1 + 5] = r;
		this.rectVertices[baseIndex1 + 6] = g;
		this.rectVertices[baseIndex1 + 7] = b;
		this.rectVertices[baseIndex1 + 8] = opacity;
		this.rectVertices[baseIndex1 + 14] = r;
		this.rectVertices[baseIndex1 + 15] = g;
		this.rectVertices[baseIndex1 + 16] = b;
		this.rectVertices[baseIndex1 + 17] = opacity;
		this.rectVertices[baseIndex1 + 23] = r;
		this.rectVertices[baseIndex1 + 24] = g;
		this.rectVertices[baseIndex1 + 25] = b;
		this.rectVertices[baseIndex1 + 26] = opacity;
		this.rectVertices[baseIndex1 + 32] = r;
		this.rectVertices[baseIndex1 + 33] = g;
		this.rectVertices[baseIndex1 + 34] = b;
		this.rectVertices[baseIndex1 + 35] = opacity;
		var baseIndex2 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex2] = left;
		this.rectVertices[baseIndex2 + 1] = bottom;
		this.rectVertices[baseIndex2 + 2] = -5.0;
		this.rectVertices[baseIndex2 + 9] = left;
		this.rectVertices[baseIndex2 + 10] = top;
		this.rectVertices[baseIndex2 + 11] = -5.0;
		this.rectVertices[baseIndex2 + 18] = right;
		this.rectVertices[baseIndex2 + 19] = top;
		this.rectVertices[baseIndex2 + 20] = -5.0;
		this.rectVertices[baseIndex2 + 27] = right;
		this.rectVertices[baseIndex2 + 28] = bottom;
		this.rectVertices[baseIndex2 + 29] = -5.0;
		++this.bufferIndex;
		this.lastTexture = img;
	}
	,end: function() {
		if(this.bufferIndex > 0) {
			this.drawBuffer();
		}
		this.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.myPipeline = null;
	this.g = g4;
	this.bufferIndex = 0;
	this.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = ["kha","graphics4","ColoredShaderPainter"];
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_ColoredShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_ColoredShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	kha_graphics4_ColoredShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_ColoredShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_ColoredShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_ColoredShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_ColoredShaderPainter.structure];
	kha_graphics4_ColoredShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.compile();
};
kha_graphics4_ColoredShaderPainter.prototype = {
	projectionMatrix: null
	,projectionLocation: null
	,bufferIndex: null
	,rectVertexBuffer: null
	,rectVertices: null
	,indexBuffer: null
	,triangleBufferIndex: null
	,triangleVertexBuffer: null
	,triangleVertices: null
	,triangleIndexBuffer: null
	,g: null
	,myPipeline: null
	,sourceBlend: null
	,destinationBlend: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ColoredShaderPainter.bufferSize * 4,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ColoredShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_ColoredShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
		this.triangleVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ColoredShaderPainter.triangleBufferSize * 3,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.triangleVertices = this.triangleVertexBuffer.lock();
		this.triangleIndexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ColoredShaderPainter.triangleBufferSize * 3,kha_graphics4_Usage.StaticUsage);
		var triIndices = this.triangleIndexBuffer.lock();
		var _g11 = 0;
		var _g2 = kha_graphics4_ColoredShaderPainter.bufferSize;
		while(_g11 < _g2) {
			var i1 = _g11++;
			triIndices[i1 * 3] = i1 * 3;
			triIndices[i1 * 3 + 1] = i1 * 3 + 1;
			triIndices[i1 * 3 + 2] = i1 * 3 + 2;
		}
		this.triangleIndexBuffer.unlock();
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = this.bufferIndex * 7 * 4;
		this.rectVertices[baseIndex] = bottomleftx;
		this.rectVertices[baseIndex + 1] = bottomlefty;
		this.rectVertices[baseIndex + 2] = -5.0;
		this.rectVertices[baseIndex + 7] = topleftx;
		this.rectVertices[baseIndex + 8] = toplefty;
		this.rectVertices[baseIndex + 9] = -5.0;
		this.rectVertices[baseIndex + 14] = toprightx;
		this.rectVertices[baseIndex + 15] = toprighty;
		this.rectVertices[baseIndex + 16] = -5.0;
		this.rectVertices[baseIndex + 21] = bottomrightx;
		this.rectVertices[baseIndex + 22] = bottomrighty;
		this.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = this.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		this.rectVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 6] = a;
		this.rectVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 13] = a;
		this.rectVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 20] = a;
		this.rectVertices[baseIndex + 24] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 25] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 26] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 27] = a;
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = this.triangleBufferIndex * 7 * 3;
		this.triangleVertices[baseIndex] = x1;
		this.triangleVertices[baseIndex + 1] = y1;
		this.triangleVertices[baseIndex + 2] = -5.0;
		this.triangleVertices[baseIndex + 7] = x2;
		this.triangleVertices[baseIndex + 8] = y2;
		this.triangleVertices[baseIndex + 9] = -5.0;
		this.triangleVertices[baseIndex + 14] = x3;
		this.triangleVertices[baseIndex + 15] = y3;
		this.triangleVertices[baseIndex + 16] = -5.0;
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = this.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		this.triangleVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 6] = a;
		this.triangleVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 13] = a;
		this.triangleVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 20] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(this.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null?kha_graphics4_ColoredShaderPainter.shaderPipeline:this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(this.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		this.triangleVertexBuffer.unlock();
		this.g.setVertexBuffer(this.triangleVertexBuffer);
		this.g.setIndexBuffer(this.triangleIndexBuffer);
		this.g.setPipeline(this.get_pipeline() == null?kha_graphics4_ColoredShaderPainter.shaderPipeline:this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.triangleBufferIndex * 3);
		this.triangleBufferIndex = 0;
		this.triangleVertices = this.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(this.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(this.bufferIndex + 1 >= kha_graphics4_ColoredShaderPainter.bufferSize) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++this.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(this.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(this.triangleBufferIndex + 1 >= kha_graphics4_ColoredShaderPainter.triangleBufferSize) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++this.triangleBufferIndex;
	}
	,endTris: function(rectsDone) {
		if(this.triangleBufferIndex > 0) {
			this.drawTriBuffer(rectsDone);
		}
	}
	,endRects: function(trisDone) {
		if(this.bufferIndex > 0) {
			this.drawBuffer(trisDone);
		}
	}
	,end: function() {
		if(this.triangleBufferIndex > 0) {
			this.drawTriBuffer(false);
		}
		if(this.bufferIndex > 0) {
			this.drawBuffer(false);
		}
	}
	,__class__: kha_graphics4_ColoredShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	this.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = ["kha","graphics4","TextShaderPainter"];
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_TextShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_TextShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	kha_graphics4_TextShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	kha_graphics4_TextShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_TextShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_TextShaderPainter.structure.add("texPosition",kha_graphics4_VertexData.Float2);
	kha_graphics4_TextShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_TextShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_TextShaderPainter.structure];
	kha_graphics4_TextShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.compile();
};
kha_graphics4_TextShaderPainter.findIndex = function(charcode,fontGlyphs) {
	var _g1 = 0;
	var _g = fontGlyphs.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(fontGlyphs[i] == charcode) {
			return i;
		}
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	projectionMatrix: null
	,projectionLocation: null
	,textureLocation: null
	,bufferIndex: null
	,rectVertexBuffer: null
	,rectVertices: null
	,indexBuffer: null
	,font: null
	,lastTexture: null
	,g: null
	,myPipeline: null
	,fontSize: null
	,bilinear: null
	,sourceBlend: null
	,destinationBlend: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
			this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
			this.textureLocation = pipe.getTextureUnit("tex");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_TextShaderPainter.bufferSize * 4,kha_graphics4_TextShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_TextShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_TextShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = this.bufferIndex * 9 * 4;
		this.rectVertices[baseIndex] = bottomleftx;
		this.rectVertices[baseIndex + 1] = bottomlefty;
		this.rectVertices[baseIndex + 2] = -5.0;
		this.rectVertices[baseIndex + 9] = topleftx;
		this.rectVertices[baseIndex + 10] = toplefty;
		this.rectVertices[baseIndex + 11] = -5.0;
		this.rectVertices[baseIndex + 18] = toprightx;
		this.rectVertices[baseIndex + 19] = toprighty;
		this.rectVertices[baseIndex + 20] = -5.0;
		this.rectVertices[baseIndex + 27] = bottomrightx;
		this.rectVertices[baseIndex + 28] = bottomrighty;
		this.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = this.bufferIndex * 9 * 4;
		this.rectVertices[baseIndex + 3] = left;
		this.rectVertices[baseIndex + 4] = bottom;
		this.rectVertices[baseIndex + 12] = left;
		this.rectVertices[baseIndex + 13] = top;
		this.rectVertices[baseIndex + 21] = right;
		this.rectVertices[baseIndex + 22] = top;
		this.rectVertices[baseIndex + 30] = right;
		this.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = this.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		this.rectVertices[baseIndex + 5] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 6] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 7] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 8] = a;
		this.rectVertices[baseIndex + 14] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 15] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 16] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 17] = a;
		this.rectVertices[baseIndex + 23] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 24] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 25] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 26] = a;
		this.rectVertices[baseIndex + 32] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 33] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 34] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null?kha_graphics4_TextShaderPainter.shaderPipeline:this.get_pipeline());
		this.g.setTexture(this.textureLocation,this.lastTexture);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear?kha_graphics4_TextureFilter.LinearFilter:kha_graphics4_TextureFilter.PointFilter,this.bilinear?kha_graphics4_TextureFilter.LinearFilter:kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,text: null
	,startString: function(text) {
		this.text = text;
	}
	,charCodeAt: function(position) {
		return HxOverrides.cca(this.text,position);
	}
	,stringLength: function() {
		return this.text.length;
	}
	,endString: function() {
		this.text = null;
	}
	,drawString: function(text,opacity,color,x,y,transformation,fontGlyphs) {
		var font = this.font._get(this.fontSize,fontGlyphs);
		var tex = font.getTexture();
		if(this.lastTexture != null && tex != this.lastTexture) {
			this.drawBuffer();
		}
		this.lastTexture = tex;
		var xpos = x;
		this.startString(text);
		var _g1 = 0;
		var _g = this.stringLength();
		while(_g1 < _g) {
			var q = font.getBakedQuad(kha_graphics4_TextShaderPainter.findIndex(this.charCodeAt(_g1++),fontGlyphs),xpos,y);
			if(q != null) {
				if(this.bufferIndex + 1 >= kha_graphics4_TextShaderPainter.bufferSize) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var x1 = q.x0;
				var y1 = q.y1;
				var w = transformation._02 * x1 + transformation._12 * y1 + transformation._22;
				var x2 = (transformation._00 * x1 + transformation._10 * y1 + transformation._20) / w;
				var y2 = (transformation._01 * x1 + transformation._11 * y1 + transformation._21) / w;
				var x3 = q.x0;
				var y3 = q.y0;
				var w1 = transformation._02 * x3 + transformation._12 * y3 + transformation._22;
				var x4 = (transformation._00 * x3 + transformation._10 * y3 + transformation._20) / w1;
				var y4 = (transformation._01 * x3 + transformation._11 * y3 + transformation._21) / w1;
				var x5 = q.x1;
				var y5 = q.y0;
				var w2 = transformation._02 * x5 + transformation._12 * y5 + transformation._22;
				var x6 = (transformation._00 * x5 + transformation._10 * y5 + transformation._20) / w2;
				var y6 = (transformation._01 * x5 + transformation._11 * y5 + transformation._21) / w2;
				var x7 = q.x1;
				var y7 = q.y1;
				var w3 = transformation._02 * x7 + transformation._12 * y7 + transformation._22;
				this.setRectVertices(x2,y2,x4,y4,x6,y6,(transformation._00 * x7 + transformation._10 * y7 + transformation._20) / w3,(transformation._01 * x7 + transformation._11 * y7 + transformation._21) / w3);
				xpos += q.xadvance;
				++this.bufferIndex;
			}
		}
		this.endString();
	}
	,end: function() {
		if(this.bufferIndex > 0) {
			this.drawBuffer();
		}
		this.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_Graphics2 = function(canvas) {
	this.myMipmapScaleQuality = kha_graphics2_ImageScaleQuality.High;
	this.myImageScaleQuality = kha_graphics2_ImageScaleQuality.High;
	kha_graphics2_Graphics.call(this);
	this.set_color(kha__$Color_Color_$Impl_$.White);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = new kha_graphics4_PipelineState();
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		var structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
		structure.add("texPosition",kha_graphics4_VertexData.Float2);
		structure.add("vertexColor",kha_graphics4_VertexData.Float4);
		kha_graphics4_Graphics2.videoPipeline.inputLayout = [structure];
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = ["kha","graphics4","Graphics2"];
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	myColor: null
	,myFont: null
	,projectionMatrix: null
	,imagePainter: null
	,coloredPainter: null
	,textPainter: null
	,canvas: null
	,g: null
	,setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(js_Boot.__instanceof(this.canvas,kha_Framebuffer)) {
			this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,height,0,0.1,1000);
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(this.g.renderTargetsInvertedY()) {
				this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,0,height,0.1,1000);
			} else {
				this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,height,0,0.1,1000);
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawImage: function(img,x,y) {
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var xw = x + img.get_width();
		var yh = y + img.get_height();
		var _this1 = this.transformations[this.transformations.length - 1];
		var w = _this1._02 * x + _this1._12 * yh + _this1._22;
		var x1 = (_this1._00 * x + _this1._10 * yh + _this1._20) / w;
		var y1 = (_this1._01 * x + _this1._11 * yh + _this1._21) / w;
		var _this2 = this.transformations[this.transformations.length - 1];
		var w1 = _this2._02 * x + _this2._12 * y + _this2._22;
		var x2 = (_this2._00 * x + _this2._10 * y + _this2._20) / w1;
		var y2 = (_this2._01 * x + _this2._11 * y + _this2._21) / w1;
		var _this3 = this.transformations[this.transformations.length - 1];
		var w2 = _this3._02 * xw + _this3._12 * y + _this3._22;
		var x3 = (_this3._00 * xw + _this3._10 * y + _this3._20) / w2;
		var y3 = (_this3._01 * xw + _this3._11 * y + _this3._21) / w2;
		var _this4 = this.transformations[this.transformations.length - 1];
		var w3 = _this4._02 * xw + _this4._12 * yh + _this4._22;
		var x4 = (_this4._00 * xw + _this4._10 * yh + _this4._20) / w3;
		var y4 = (_this4._01 * xw + _this4._11 * yh + _this4._21) / w3;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		if(_this5.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || _this5.lastTexture != null && img != _this5.lastTexture) {
			_this5.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex + 5] = r;
		_this5.rectVertices[baseIndex + 6] = g;
		_this5.rectVertices[baseIndex + 7] = b;
		_this5.rectVertices[baseIndex + 8] = a;
		_this5.rectVertices[baseIndex + 14] = r;
		_this5.rectVertices[baseIndex + 15] = g;
		_this5.rectVertices[baseIndex + 16] = b;
		_this5.rectVertices[baseIndex + 17] = a;
		_this5.rectVertices[baseIndex + 23] = r;
		_this5.rectVertices[baseIndex + 24] = g;
		_this5.rectVertices[baseIndex + 25] = b;
		_this5.rectVertices[baseIndex + 26] = a;
		_this5.rectVertices[baseIndex + 32] = r;
		_this5.rectVertices[baseIndex + 33] = g;
		_this5.rectVertices[baseIndex + 34] = b;
		_this5.rectVertices[baseIndex + 35] = a;
		var right = img.get_width() / img.get_realWidth();
		var bottom = img.get_height() / img.get_realHeight();
		var baseIndex1 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex1 + 3] = 0;
		_this5.rectVertices[baseIndex1 + 4] = bottom;
		_this5.rectVertices[baseIndex1 + 12] = 0;
		_this5.rectVertices[baseIndex1 + 13] = 0;
		_this5.rectVertices[baseIndex1 + 21] = right;
		_this5.rectVertices[baseIndex1 + 22] = 0;
		_this5.rectVertices[baseIndex1 + 30] = right;
		_this5.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex2] = x1;
		_this5.rectVertices[baseIndex2 + 1] = y1;
		_this5.rectVertices[baseIndex2 + 2] = -5.0;
		_this5.rectVertices[baseIndex2 + 9] = x2;
		_this5.rectVertices[baseIndex2 + 10] = y2;
		_this5.rectVertices[baseIndex2 + 11] = -5.0;
		_this5.rectVertices[baseIndex2 + 18] = x3;
		_this5.rectVertices[baseIndex2 + 19] = y3;
		_this5.rectVertices[baseIndex2 + 20] = -5.0;
		_this5.rectVertices[baseIndex2 + 27] = x4;
		_this5.rectVertices[baseIndex2 + 28] = y4;
		_this5.rectVertices[baseIndex2 + 29] = -5.0;
		++_this5.bufferIndex;
		_this5.lastTexture = img;
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_y = dy + dh;
		var w = _this1._02 * dx + _this1._12 * value_y + _this1._22;
		var x = (_this1._00 * dx + _this1._10 * value_y + _this1._20) / w;
		var y = (_this1._01 * dx + _this1._11 * value_y + _this1._21) / w;
		var _this2 = this.transformations[this.transformations.length - 1];
		var w1 = _this2._02 * dx + _this2._12 * dy + _this2._22;
		var x1 = (_this2._00 * dx + _this2._10 * dy + _this2._20) / w1;
		var y1 = (_this2._01 * dx + _this2._11 * dy + _this2._21) / w1;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x = dx + dw;
		var w2 = _this3._02 * value_x + _this3._12 * dy + _this3._22;
		var x2 = (_this3._00 * value_x + _this3._10 * dy + _this3._20) / w2;
		var y2 = (_this3._01 * value_x + _this3._11 * dy + _this3._21) / w2;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x1 = dx + dw;
		var value_y1 = dy + dh;
		var w3 = _this4._02 * value_x1 + _this4._12 * value_y1 + _this4._22;
		var x3 = (_this4._00 * value_x1 + _this4._10 * value_y1 + _this4._20) / w3;
		var y3 = (_this4._01 * value_x1 + _this4._11 * value_y1 + _this4._21) / w3;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		if(_this5.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || _this5.lastTexture != null && img != _this5.lastTexture) {
			_this5.drawBuffer();
		}
		var left = sx / img.get_realWidth();
		var top = sy / img.get_realHeight();
		var right = (sx + sw) / img.get_realWidth();
		var bottom = (sy + sh) / img.get_realHeight();
		var baseIndex = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex + 3] = left;
		_this5.rectVertices[baseIndex + 4] = bottom;
		_this5.rectVertices[baseIndex + 12] = left;
		_this5.rectVertices[baseIndex + 13] = top;
		_this5.rectVertices[baseIndex + 21] = right;
		_this5.rectVertices[baseIndex + 22] = top;
		_this5.rectVertices[baseIndex + 30] = right;
		_this5.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex1 + 5] = r;
		_this5.rectVertices[baseIndex1 + 6] = g;
		_this5.rectVertices[baseIndex1 + 7] = b;
		_this5.rectVertices[baseIndex1 + 8] = a;
		_this5.rectVertices[baseIndex1 + 14] = r;
		_this5.rectVertices[baseIndex1 + 15] = g;
		_this5.rectVertices[baseIndex1 + 16] = b;
		_this5.rectVertices[baseIndex1 + 17] = a;
		_this5.rectVertices[baseIndex1 + 23] = r;
		_this5.rectVertices[baseIndex1 + 24] = g;
		_this5.rectVertices[baseIndex1 + 25] = b;
		_this5.rectVertices[baseIndex1 + 26] = a;
		_this5.rectVertices[baseIndex1 + 32] = r;
		_this5.rectVertices[baseIndex1 + 33] = g;
		_this5.rectVertices[baseIndex1 + 34] = b;
		_this5.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex2] = x;
		_this5.rectVertices[baseIndex2 + 1] = y;
		_this5.rectVertices[baseIndex2 + 2] = -5.0;
		_this5.rectVertices[baseIndex2 + 9] = x1;
		_this5.rectVertices[baseIndex2 + 10] = y1;
		_this5.rectVertices[baseIndex2 + 11] = -5.0;
		_this5.rectVertices[baseIndex2 + 18] = x2;
		_this5.rectVertices[baseIndex2 + 19] = y2;
		_this5.rectVertices[baseIndex2 + 20] = -5.0;
		_this5.rectVertices[baseIndex2 + 27] = x3;
		_this5.rectVertices[baseIndex2 + 28] = y3;
		_this5.rectVertices[baseIndex2 + 29] = -5.0;
		++_this5.bufferIndex;
		_this5.lastTexture = img;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x - strength / 2;
		var value_y = y + strength / 2;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var p1 = new kha_math_FastVector2((_this._00 * value_x + _this._10 * value_y + _this._20) / w,(_this._01 * value_x + _this._11 * value_y + _this._21) / w);
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x - strength / 2;
		var value_y1 = y - strength / 2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var p2 = new kha_math_FastVector2((_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1,(_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1);
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x + width + strength / 2;
		var value_y2 = y - strength / 2;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var p3 = new kha_math_FastVector2((_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2,(_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2);
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x3 = x + width + strength / 2;
		var value_y3 = y + strength / 2;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var p4 = new kha_math_FastVector2((_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3,(_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x4 = x - strength / 2;
		var value_y4 = y + height + strength / 2;
		var w4 = _this4._02 * value_x4 + _this4._12 * value_y4 + _this4._22;
		p1 = new kha_math_FastVector2((_this4._00 * value_x4 + _this4._10 * value_y4 + _this4._20) / w4,(_this4._01 * value_x4 + _this4._11 * value_y4 + _this4._21) / w4);
		var _this5 = this.transformations[this.transformations.length - 1];
		var value_x5 = x + strength / 2;
		var value_y5 = y - strength / 2;
		var w5 = _this5._02 * value_x5 + _this5._12 * value_y5 + _this5._22;
		p3 = new kha_math_FastVector2((_this5._00 * value_x5 + _this5._10 * value_y5 + _this5._20) / w5,(_this5._01 * value_x5 + _this5._11 * value_y5 + _this5._21) / w5);
		var _this6 = this.transformations[this.transformations.length - 1];
		var value_x6 = x + strength / 2;
		var value_y6 = y + height + strength / 2;
		var w6 = _this6._02 * value_x6 + _this6._12 * value_y6 + _this6._22;
		p4 = new kha_math_FastVector2((_this6._00 * value_x6 + _this6._10 * value_y6 + _this6._20) / w6,(_this6._01 * value_x6 + _this6._11 * value_y6 + _this6._21) / w6);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this7 = this.transformations[this.transformations.length - 1];
		var value_x7 = x - strength / 2;
		var value_y7 = y + height - strength / 2;
		var w7 = _this7._02 * value_x7 + _this7._12 * value_y7 + _this7._22;
		p2 = new kha_math_FastVector2((_this7._00 * value_x7 + _this7._10 * value_y7 + _this7._20) / w7,(_this7._01 * value_x7 + _this7._11 * value_y7 + _this7._21) / w7);
		var _this8 = this.transformations[this.transformations.length - 1];
		var value_x8 = x + width + strength / 2;
		var value_y8 = y + height - strength / 2;
		var w8 = _this8._02 * value_x8 + _this8._12 * value_y8 + _this8._22;
		p3 = new kha_math_FastVector2((_this8._00 * value_x8 + _this8._10 * value_y8 + _this8._20) / w8,(_this8._01 * value_x8 + _this8._11 * value_y8 + _this8._21) / w8);
		var _this9 = this.transformations[this.transformations.length - 1];
		var value_x9 = x + width + strength / 2;
		var value_y9 = y + height + strength / 2;
		var w9 = _this9._02 * value_x9 + _this9._12 * value_y9 + _this9._22;
		p4 = new kha_math_FastVector2((_this9._00 * value_x9 + _this9._10 * value_y9 + _this9._20) / w9,(_this9._01 * value_x9 + _this9._11 * value_y9 + _this9._21) / w9);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this10 = this.transformations[this.transformations.length - 1];
		var value_x10 = x + width - strength / 2;
		var value_y10 = y + height + strength / 2;
		var w10 = _this10._02 * value_x10 + _this10._12 * value_y10 + _this10._22;
		p1 = new kha_math_FastVector2((_this10._00 * value_x10 + _this10._10 * value_y10 + _this10._20) / w10,(_this10._01 * value_x10 + _this10._11 * value_y10 + _this10._21) / w10);
		var _this11 = this.transformations[this.transformations.length - 1];
		var value_x11 = x + width - strength / 2;
		var value_y11 = y - strength / 2;
		var w11 = _this11._02 * value_x11 + _this11._12 * value_y11 + _this11._22;
		p2 = new kha_math_FastVector2((_this11._00 * value_x11 + _this11._10 * value_y11 + _this11._20) / w11,(_this11._01 * value_x11 + _this11._11 * value_y11 + _this11._21) / w11);
		var _this12 = this.transformations[this.transformations.length - 1];
		var value_x12 = x + width + strength / 2;
		var value_y12 = y - strength / 2;
		var w12 = _this12._02 * value_x12 + _this12._12 * value_y12 + _this12._22;
		p3 = new kha_math_FastVector2((_this12._00 * value_x12 + _this12._10 * value_y12 + _this12._20) / w12,(_this12._01 * value_x12 + _this12._11 * value_y12 + _this12._21) / w12);
		var _this13 = this.transformations[this.transformations.length - 1];
		var value_x13 = x + width + strength / 2;
		var value_y13 = y + height + strength / 2;
		var w13 = _this13._02 * value_x13 + _this13._12 * value_y13 + _this13._22;
		p4 = new kha_math_FastVector2((_this13._00 * value_x13 + _this13._10 * value_y13 + _this13._20) / w13,(_this13._01 * value_x13 + _this13._11 * value_y13 + _this13._21) / w13);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_y = y + height;
		var w = _this._02 * x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * x + _this._11 * value_y + _this._21) / w;
		var _this1 = this.transformations[this.transformations.length - 1];
		var w1 = _this1._02 * x + _this1._12 * y + _this1._22;
		var x2 = (_this1._00 * x + _this1._10 * y + _this1._20) / w1;
		var y2 = (_this1._01 * x + _this1._11 * y + _this1._21) / w1;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x = x + width;
		var w2 = _this2._02 * value_x + _this2._12 * y + _this2._22;
		var x3 = (_this2._00 * value_x + _this2._10 * y + _this2._20) / w2;
		var y3 = (_this2._01 * value_x + _this2._11 * y + _this2._21) / w2;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x1 = x + width;
		var value_y1 = y + height;
		var w3 = _this3._02 * value_x1 + _this3._12 * value_y1 + _this3._22;
		var x4 = (_this3._00 * value_x1 + _this3._10 * value_y1 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x1 + _this3._11 * value_y1 + _this3._21) / w3;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),x1,y1,x2,y2,x3,y3,x4,y4);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformations.length - 1],this.get_fontGlyphs());
	}
	,get_font: function() {
		return this.myFont;
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var vec = y2 == y1?new kha_math_FastVector2(0,-1):new kha_math_FastVector2(1,-(x2 - x1) / (y2 - y1));
		vec.set_length(strength);
		var p1 = new kha_math_FastVector2(x1 + 0.5 * vec.x,y1 + 0.5 * vec.y);
		var p2 = new kha_math_FastVector2(x2 + 0.5 * vec.x,y2 + 0.5 * vec.y);
		var p3 = new kha_math_FastVector2(p1.x - vec.x,p1.y - vec.y);
		var p4 = new kha_math_FastVector2(p2.x - vec.x,p2.y - vec.y);
		var _this = this.transformations[this.transformations.length - 1];
		var w = _this._02 * p1.x + _this._12 * p1.y + _this._22;
		p1 = new kha_math_FastVector2((_this._00 * p1.x + _this._10 * p1.y + _this._20) / w,(_this._01 * p1.x + _this._11 * p1.y + _this._21) / w);
		var _this1 = this.transformations[this.transformations.length - 1];
		var w1 = _this1._02 * p2.x + _this1._12 * p2.y + _this1._22;
		p2 = new kha_math_FastVector2((_this1._00 * p2.x + _this1._10 * p2.y + _this1._20) / w1,(_this1._01 * p2.x + _this1._11 * p2.y + _this1._21) / w1);
		var _this2 = this.transformations[this.transformations.length - 1];
		var w2 = _this2._02 * p3.x + _this2._12 * p3.y + _this2._22;
		p3 = new kha_math_FastVector2((_this2._00 * p3.x + _this2._10 * p3.y + _this2._20) / w2,(_this2._01 * p3.x + _this2._11 * p3.y + _this2._21) / w2);
		var _this3 = this.transformations[this.transformations.length - 1];
		var w3 = _this3._02 * p4.x + _this3._12 * p4.y + _this3._22;
		p4 = new kha_math_FastVector2((_this3._00 * p4.x + _this3._10 * p4.y + _this3._20) / w3,(_this3._01 * p4.x + _this3._11 * p4.y + _this3._21) / w3);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3.x,p3.y,p2.x,p2.y,p4.x,p4.y);
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var w = _this._02 * x1 + _this._12 * y1 + _this._22;
		var x = (_this._00 * x1 + _this._10 * y1 + _this._20) / w;
		var y = (_this._01 * x1 + _this._11 * y1 + _this._21) / w;
		var _this1 = this.transformations[this.transformations.length - 1];
		var w1 = _this1._02 * x2 + _this1._12 * y2 + _this1._22;
		var x4 = (_this1._00 * x2 + _this1._10 * y2 + _this1._20) / w1;
		var y4 = (_this1._01 * x2 + _this1._11 * y2 + _this1._21) / w1;
		var _this2 = this.transformations[this.transformations.length - 1];
		var w2 = _this2._02 * x3 + _this2._12 * y3 + _this2._22;
		var x5 = (_this2._00 * x3 + _this2._10 * y3 + _this2._20) / w2;
		var y5 = (_this2._01 * x3 + _this2._11 * y3 + _this2._21) / w2;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),x,y,x4,y4,x5,y5);
	}
	,myImageScaleQuality: null
	,get_imageScaleQuality: function() {
		return this.myImageScaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		this.imagePainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		this.textPainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		return this.myImageScaleQuality = value;
	}
	,myMipmapScaleQuality: null
	,get_mipmapScaleQuality: function() {
		return this.myMipmapScaleQuality;
	}
	,set_mipmapScaleQuality: function(value) {
		this.imagePainter.setBilinearMipmapFilter(value == kha_graphics2_ImageScaleQuality.High);
		return this.myMipmapScaleQuality = value;
	}
	,setPipeline: function(pipeline) {
		this.flush();
		this.imagePainter.set_pipeline(pipeline);
		this.coloredPainter.set_pipeline(pipeline);
		this.textPainter.set_pipeline(pipeline);
		if(pipeline != null) {
			this.g.setPipeline(pipeline);
		}
	}
	,scissor: function(x,y,width,height) {
		this.flush();
		this.g.scissor(x,y,width,height);
	}
	,disableScissor: function() {
		this.flush();
		this.g.disableScissor();
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null?kha__$Color_Color_$Impl_$.Black:color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
	}
	,drawVideoInternal: function(video,x,y,width,height) {
	}
	,drawVideo: function(video,x,y,width,height) {
		this.setPipeline(kha_graphics4_Graphics2.videoPipeline);
		this.drawVideoInternal(video,x,y,width,height);
		this.setPipeline(null);
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this.data = [];
	this.data[indexCount - 1] = 0;
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = ["kha","graphics4","IndexBuffer"];
kha_graphics4_IndexBuffer.prototype = {
	buffer: null
	,data: null
	,mySize: null
	,usage: null
	,'delete': function() {
		this.data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function() {
		return this.data;
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		kha_SystemImpl.gl.bufferData(34963,new Uint16Array(this.data),this.usage == kha_graphics4_Usage.DynamicUsage?35048:35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_MipMapFilter = $hxClasses["kha.graphics4.MipMapFilter"] = { __ename__ : ["kha","graphics4","MipMapFilter"], __constructs__ : ["NoMipFilter","PointMipFilter","LinearMipFilter"] };
kha_graphics4_MipMapFilter.NoMipFilter = ["NoMipFilter",0];
kha_graphics4_MipMapFilter.NoMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.NoMipFilter.__enum__ = kha_graphics4_MipMapFilter;
kha_graphics4_MipMapFilter.PointMipFilter = ["PointMipFilter",1];
kha_graphics4_MipMapFilter.PointMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.PointMipFilter.__enum__ = kha_graphics4_MipMapFilter;
kha_graphics4_MipMapFilter.LinearMipFilter = ["LinearMipFilter",2];
kha_graphics4_MipMapFilter.LinearMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.LinearMipFilter.__enum__ = kha_graphics4_MipMapFilter;
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tesselationControlShader = null;
	this.tesselationEvaluationShader = null;
	this.cullMode = kha_graphics4_CullMode.None;
	this.depthWrite = false;
	this.depthMode = kha_graphics4_CompareMode.Always;
	this.stencilMode = kha_graphics4_CompareMode.Always;
	this.stencilBothPass = kha_graphics4_StencilAction.Keep;
	this.stencilDepthFail = kha_graphics4_StencilAction.Keep;
	this.stencilFail = kha_graphics4_StencilAction.Keep;
	this.stencilReferenceValue = 0;
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.blendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.blendOperation = kha_graphics4_BlendingOperation.Add;
	this.alphaBlendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.alphaBlendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.alphaBlendOperation = kha_graphics4_BlendingOperation.Add;
	this.colorWriteMaskRed = this.colorWriteMaskBlue = this.colorWriteMaskGreen = this.colorWriteMaskAlpha = true;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = ["kha","graphics4","PipelineStateBase"];
kha_graphics4_PipelineStateBase.prototype = {
	inputLayout: null
	,vertexShader: null
	,fragmentShader: null
	,geometryShader: null
	,tesselationControlShader: null
	,tesselationEvaluationShader: null
	,cullMode: null
	,depthWrite: null
	,depthMode: null
	,stencilMode: null
	,stencilBothPass: null
	,stencilDepthFail: null
	,stencilFail: null
	,stencilReferenceValue: null
	,stencilReadMask: null
	,stencilWriteMask: null
	,blendSource: null
	,blendDestination: null
	,blendOperation: null
	,alphaBlendSource: null
	,alphaBlendDestination: null
	,alphaBlendOperation: null
	,colorWriteMaskRed: null
	,colorWriteMaskGreen: null
	,colorWriteMaskBlue: null
	,colorWriteMaskAlpha: null
	,set_colorWriteMask: function(value) {
		return this.colorWriteMaskRed = this.colorWriteMaskBlue = this.colorWriteMaskGreen = this.colorWriteMaskAlpha = value;
	}
	,__class__: kha_graphics4_PipelineStateBase
	,__properties__: {set_colorWriteMask:"set_colorWriteMask"}
};
var kha_graphics4_PipelineState = function() {
	kha_graphics4_PipelineStateBase.call(this);
	this.program = kha_SystemImpl.gl.createProgram();
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = ["kha","graphics4","PipelineState"];
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	program: null
	,textures: null
	,textureValues: null
	,'delete': function() {
		kha_SystemImpl.gl.deleteProgram(this.program);
	}
	,compile: function() {
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = structure.elements;
			while(_g2 < _g3.length) {
				var element = _g3[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == kha_graphics4_VertexData.Float4x4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g1 = 0;
		var _g = this.textureValues.length;
		while(_g1 < _g) {
			var index = _g1++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMaskRed,this.colorWriteMaskGreen,this.colorWriteMaskBlue,this.colorWriteMaskAlpha);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		kha_SystemImpl.gl.shaderSource(s,shader.source);
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		return new kha_js_graphics4_ConstantLocation(kha_SystemImpl.gl.getUniformLocation(this.program,name));
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g1 = 0;
		var _g = this.textures.length;
		while(_g1 < _g) {
			var index = _g1++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilAction = $hxClasses["kha.graphics4.StencilAction"] = { __ename__ : ["kha","graphics4","StencilAction"], __constructs__ : ["Keep","Zero","Replace","Increment","IncrementWrap","Decrement","DecrementWrap","Invert"] };
kha_graphics4_StencilAction.Keep = ["Keep",0];
kha_graphics4_StencilAction.Keep.toString = $estr;
kha_graphics4_StencilAction.Keep.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Zero = ["Zero",1];
kha_graphics4_StencilAction.Zero.toString = $estr;
kha_graphics4_StencilAction.Zero.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Replace = ["Replace",2];
kha_graphics4_StencilAction.Replace.toString = $estr;
kha_graphics4_StencilAction.Replace.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Increment = ["Increment",3];
kha_graphics4_StencilAction.Increment.toString = $estr;
kha_graphics4_StencilAction.Increment.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.IncrementWrap = ["IncrementWrap",4];
kha_graphics4_StencilAction.IncrementWrap.toString = $estr;
kha_graphics4_StencilAction.IncrementWrap.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Decrement = ["Decrement",5];
kha_graphics4_StencilAction.Decrement.toString = $estr;
kha_graphics4_StencilAction.Decrement.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.DecrementWrap = ["DecrementWrap",6];
kha_graphics4_StencilAction.DecrementWrap.toString = $estr;
kha_graphics4_StencilAction.DecrementWrap.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Invert = ["Invert",7];
kha_graphics4_StencilAction.Invert.toString = $estr;
kha_graphics4_StencilAction.Invert.__enum__ = kha_graphics4_StencilAction;
var kha_graphics4_TesselationControlShader = function(source) {
};
$hxClasses["kha.graphics4.TesselationControlShader"] = kha_graphics4_TesselationControlShader;
kha_graphics4_TesselationControlShader.__name__ = ["kha","graphics4","TesselationControlShader"];
kha_graphics4_TesselationControlShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TesselationControlShader
};
var kha_graphics4_TesselationEvaluationShader = function(source) {
};
$hxClasses["kha.graphics4.TesselationEvaluationShader"] = kha_graphics4_TesselationEvaluationShader;
kha_graphics4_TesselationEvaluationShader.__name__ = ["kha","graphics4","TesselationEvaluationShader"];
kha_graphics4_TesselationEvaluationShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TesselationEvaluationShader
};
var kha_graphics4_TexDir = $hxClasses["kha.graphics4.TexDir"] = { __ename__ : ["kha","graphics4","TexDir"], __constructs__ : ["U","V"] };
kha_graphics4_TexDir.U = ["U",0];
kha_graphics4_TexDir.U.toString = $estr;
kha_graphics4_TexDir.U.__enum__ = kha_graphics4_TexDir;
kha_graphics4_TexDir.V = ["V",1];
kha_graphics4_TexDir.V.toString = $estr;
kha_graphics4_TexDir.V.__enum__ = kha_graphics4_TexDir;
var kha_graphics4_TextureAddressing = $hxClasses["kha.graphics4.TextureAddressing"] = { __ename__ : ["kha","graphics4","TextureAddressing"], __constructs__ : ["Repeat","Mirror","Clamp"] };
kha_graphics4_TextureAddressing.Repeat = ["Repeat",0];
kha_graphics4_TextureAddressing.Repeat.toString = $estr;
kha_graphics4_TextureAddressing.Repeat.__enum__ = kha_graphics4_TextureAddressing;
kha_graphics4_TextureAddressing.Mirror = ["Mirror",1];
kha_graphics4_TextureAddressing.Mirror.toString = $estr;
kha_graphics4_TextureAddressing.Mirror.__enum__ = kha_graphics4_TextureAddressing;
kha_graphics4_TextureAddressing.Clamp = ["Clamp",2];
kha_graphics4_TextureAddressing.Clamp.toString = $estr;
kha_graphics4_TextureAddressing.Clamp.__enum__ = kha_graphics4_TextureAddressing;
var kha_graphics4_TextureFilter = $hxClasses["kha.graphics4.TextureFilter"] = { __ename__ : ["kha","graphics4","TextureFilter"], __constructs__ : ["PointFilter","LinearFilter","AnisotropicFilter"] };
kha_graphics4_TextureFilter.PointFilter = ["PointFilter",0];
kha_graphics4_TextureFilter.PointFilter.toString = $estr;
kha_graphics4_TextureFilter.PointFilter.__enum__ = kha_graphics4_TextureFilter;
kha_graphics4_TextureFilter.LinearFilter = ["LinearFilter",1];
kha_graphics4_TextureFilter.LinearFilter.toString = $estr;
kha_graphics4_TextureFilter.LinearFilter.__enum__ = kha_graphics4_TextureFilter;
kha_graphics4_TextureFilter.AnisotropicFilter = ["AnisotropicFilter",2];
kha_graphics4_TextureFilter.AnisotropicFilter.toString = $estr;
kha_graphics4_TextureFilter.AnisotropicFilter.__enum__ = kha_graphics4_TextureFilter;
var kha_graphics4_TextureFormat = $hxClasses["kha.graphics4.TextureFormat"] = { __ename__ : ["kha","graphics4","TextureFormat"], __constructs__ : ["RGBA32","L8","RGBA128","DEPTH16","RGBA64","A32","A16"] };
kha_graphics4_TextureFormat.RGBA32 = ["RGBA32",0];
kha_graphics4_TextureFormat.RGBA32.toString = $estr;
kha_graphics4_TextureFormat.RGBA32.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.L8 = ["L8",1];
kha_graphics4_TextureFormat.L8.toString = $estr;
kha_graphics4_TextureFormat.L8.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.RGBA128 = ["RGBA128",2];
kha_graphics4_TextureFormat.RGBA128.toString = $estr;
kha_graphics4_TextureFormat.RGBA128.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.DEPTH16 = ["DEPTH16",3];
kha_graphics4_TextureFormat.DEPTH16.toString = $estr;
kha_graphics4_TextureFormat.DEPTH16.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.RGBA64 = ["RGBA64",4];
kha_graphics4_TextureFormat.RGBA64.toString = $estr;
kha_graphics4_TextureFormat.RGBA64.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.A32 = ["A32",5];
kha_graphics4_TextureFormat.A32.toString = $estr;
kha_graphics4_TextureFormat.A32.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.A16 = ["A16",6];
kha_graphics4_TextureFormat.A16.toString = $estr;
kha_graphics4_TextureFormat.A16.__enum__ = kha_graphics4_TextureFormat;
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = ["kha","graphics4","TextureUnit"];
var kha_graphics4_Usage = $hxClasses["kha.graphics4.Usage"] = { __ename__ : ["kha","graphics4","Usage"], __constructs__ : ["StaticUsage","DynamicUsage","ReadableUsage"] };
kha_graphics4_Usage.StaticUsage = ["StaticUsage",0];
kha_graphics4_Usage.StaticUsage.toString = $estr;
kha_graphics4_Usage.StaticUsage.__enum__ = kha_graphics4_Usage;
kha_graphics4_Usage.DynamicUsage = ["DynamicUsage",1];
kha_graphics4_Usage.DynamicUsage.toString = $estr;
kha_graphics4_Usage.DynamicUsage.__enum__ = kha_graphics4_Usage;
kha_graphics4_Usage.ReadableUsage = ["ReadableUsage",2];
kha_graphics4_Usage.ReadableUsage.toString = $estr;
kha_graphics4_Usage.ReadableUsage.__enum__ = kha_graphics4_Usage;
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		switch(element.data[1]) {
		case 0:
			this.myStride += 4;
			break;
		case 1:
			this.myStride += 8;
			break;
		case 2:
			this.myStride += 12;
			break;
		case 3:
			this.myStride += 16;
			break;
		case 4:
			this.myStride += 64;
			break;
		}
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this.data = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this.sizes = [];
	this.offsets = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g2 = 0;
	var _g11 = structure.elements;
	while(_g2 < _g11.length) {
		var element1 = _g11[_g2];
		++_g2;
		var size;
		switch(element1.data[1]) {
		case 0:
			size = 1;
			break;
		case 1:
			size = 2;
			break;
		case 2:
			size = 3;
			break;
		case 3:
			size = 4;
			break;
		case 4:
			size = 16;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		switch(element1.data[1]) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = ["kha","graphics4","VertexBuffer"];
kha_graphics4_VertexBuffer.prototype = {
	buffer: null
	,data: null
	,mySize: null
	,myStride: null
	,sizes: null
	,offsets: null
	,usage: null
	,instanceDataStepRate: null
	,'delete': function() {
		this.data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		return this.data;
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this.data,this.usage == kha_graphics4_Usage.DynamicUsage?35048:35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,count: function() {
		return this.mySize;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g1 = 0;
		var _g = this.sizes.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],5126,false,this.myStride,this.offsets[i]);
				if(ext) {
					ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexData = $hxClasses["kha.graphics4.VertexData"] = { __ename__ : ["kha","graphics4","VertexData"], __constructs__ : ["Float1","Float2","Float3","Float4","Float4x4"] };
kha_graphics4_VertexData.Float1 = ["Float1",0];
kha_graphics4_VertexData.Float1.toString = $estr;
kha_graphics4_VertexData.Float1.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float2 = ["Float2",1];
kha_graphics4_VertexData.Float2.toString = $estr;
kha_graphics4_VertexData.Float2.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float3 = ["Float3",2];
kha_graphics4_VertexData.Float3.toString = $estr;
kha_graphics4_VertexData.Float3.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float4 = ["Float4",3];
kha_graphics4_VertexData.Float4.toString = $estr;
kha_graphics4_VertexData.Float4.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float4x4 = ["Float4x4",4];
kha_graphics4_VertexData.Float4x4.toString = $estr;
kha_graphics4_VertexData.Float4x4.__enum__ = kha_graphics4_VertexData;
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = ["kha","graphics4","VertexElement"];
kha_graphics4_VertexElement.prototype = {
	name: null
	,data: null
	,__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(source,file) {
	this.source = source.toString();
	this.type = 35633;
	this.shader = null;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = ["kha","graphics4","VertexShader"];
kha_graphics4_VertexShader.prototype = {
	source: null
	,type: null
	,shader: null
	,'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.source = null;
	}
	,__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = ["kha","graphics4","VertexStructure"];
kha_graphics4_VertexStructure.prototype = {
	elements: null
	,add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,byteSize: function() {
		var byteSize = 0;
		var _g1 = 0;
		var _g = this.elements.length;
		while(_g1 < _g) byteSize += this.dataByteSize(this.elements[_g1++].data);
		return byteSize;
	}
	,dataByteSize: function(data) {
		switch(data[1]) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		}
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(id) {
	if(id == null) {
		id = 0;
	}
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[id] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = ["kha","input","Gamepad"];
kha_input_Gamepad.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[num];
};
kha_input_Gamepad.prototype = {
	notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,axisListeners: null
	,buttonListeners: null
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
};
var kha_network_Controller = function() {
	this.__id = kha_network_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.network.Controller"] = kha_network_Controller;
kha_network_Controller.__name__ = ["kha","network","Controller"];
kha_network_Controller.prototype = {
	__id: null
	,_inputBufferIndex: null
	,_inputBuffer: null
	,_id: function() {
		return this.__id;
	}
	,_receive: function(bytes) {
	}
	,__class__: kha_network_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_network_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = ["kha","input","Keyboard"];
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.__super__ = kha_network_Controller;
kha_input_Keyboard.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
	}
	,remove: function(downListener,upListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,downListeners: null
	,upListeners: null
	,sendDownEvent: function(key,$char) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(6));
			bytes.setInt32(0,0);
			bytes.b[4] = key[1] & 255;
			bytes.b[5] = HxOverrides.cca($char,0) & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(key,$char);
		}
	}
	,sendUpEvent: function(key,$char) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(6));
			bytes.setInt32(0,1);
			bytes.b[4] = key[1] & 255;
			bytes.b[5] = HxOverrides.cca($char,0) & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(key,$char);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			this.sendDownEvent(Type.createEnumIndex(kha_Key,bytes.b[4],null),String.fromCharCode(bytes.b[5]));
			return;
		}
		if(funcindex == 1) {
			this.sendUpEvent(Type.createEnumIndex(kha_Key,bytes.b[4],null),String.fromCharCode(bytes.b[5]));
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_network_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = ["kha","input","Mouse"];
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.__super__ = kha_network_Controller;
kha_input_Mouse.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 76, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 79, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 88, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 91, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 100, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 103, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 112, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 115, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(func,error) {
	}
	,removeFromLockChange: function(func,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,windowWheelListeners: null
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			this.sendDownEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16));
			return;
		}
		if(funcindex == 1) {
			this.sendUpEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16));
			return;
		}
		if(funcindex == 2) {
			this.sendMoveEvent(bytes.getInt32(4),bytes.getInt32(8),bytes.getInt32(12),bytes.getInt32(16),bytes.getInt32(20));
			return;
		}
		if(funcindex == 3) {
			this.sendWheelEvent(bytes.getInt32(4),bytes.getInt32(8));
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = ["kha","input","MouseImpl"];
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,_receive: function(bytes) {
		bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = ["kha","input","Surface"];
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,touchStartListeners: null
	,touchEndListeners: null
	,moveListeners: null
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.myFirstLine = true;
	this.bytes = bytes;
	this.buffer = [];
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = ["kha","internal","BytesBlob"];
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.readF32 = function(i) {
	var sign = (i & -2147483648) == 0?1:-1;
	var exp = i >> 23 & 255;
	var man = i & 8388607;
	switch(exp) {
	case 0:
		return 0.0;
	case 255:
		if(man != 0) {
			return NaN;
		} else if(sign > 0) {
			return Infinity;
		} else {
			return -Infinity;
		}
		break;
	default:
		return sign * ((man + 8388608) / 8388608.0) * Math.pow(2,exp - 127);
	}
};
kha_internal_BytesBlob.bit = function(value,position) {
	if((value >>> position & 1) == 1) {
		return true;
	} else {
		return false;
	}
};
kha_internal_BytesBlob.prototype = {
	bytes: null
	,buffer: null
	,myFirstLine: null
	,sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,length: null
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value & 255;
	}
	,readU8: function(position) {
		var $byte = this.bytes.b[position];
		++position;
		return $byte;
	}
	,readS8: function(position) {
		var $byte = this.bytes.b[position];
		++position;
		var sign = ($byte & 128) == 0?1:-1;
		$byte &= 127;
		return sign * $byte;
	}
	,readU16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return first * 256 + second;
	}
	,readU16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return second * 256 + first;
	}
	,readU32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
	}
	,readU32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readS16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		var sign = (first & 128) == 0?1:-1;
		first &= 127;
		if(sign == -1) {
			return -32767 + first * 256 + second;
		} else {
			return first * 256 + second;
		}
	}
	,readS16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		var sign = (second & 128) == 0?1:-1;
		second &= 127;
		position += 2;
		if(sign == -1) {
			return -32767 + second * 256 + first;
		} else {
			return second * 256 + first;
		}
	}
	,readS32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (first & 128) == 0?1:-1;
		first &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		} else {
			return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		}
	}
	,readS32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (fourth & 128) == 0?1:-1;
		fourth &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
		}
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readF32LE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32LE(position));
	}
	,readF32BE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32BE(position));
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,readUtf8Char: function(position) {
		if(position.value >= this.get_length()) {
			return -1;
		}
		var c = this.readU8(position.value);
		++position.value;
		var value = 0;
		if(!kha_internal_BytesBlob.bit(c,7)) {
			value = c;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && !kha_internal_BytesBlob.bit(c,5)) {
			var a = c & 31;
			var c2 = this.readU8(position.value);
			++position.value;
			value = a << 6 | c2 & 63;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && !kha_internal_BytesBlob.bit(c,4)) {
			position.value += 2;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && kha_internal_BytesBlob.bit(c,4) && !kha_internal_BytesBlob.bit(c,3)) {
			position.value += 3;
		}
		return value;
	}
	,readUtf8Line: function(position) {
		var bufferindex = 0;
		var c = this.readUtf8Char(position);
		if(c < 0) {
			return "";
		}
		while(c != 10 && bufferindex < 2000) {
			this.buffer[bufferindex] = c;
			++bufferindex;
			c = this.readUtf8Char(position);
			if(position.value >= this.get_length()) {
				this.buffer[bufferindex] = c;
				++bufferindex;
				break;
			}
		}
		if(this.myFirstLine) {
			this.myFirstLine = false;
			if(bufferindex > 2 && this.buffer[0] == 239 && this.buffer[1] == 187 && this.buffer[2] == 191) {
				var chars = [];
				var _g1 = 3;
				var _g = bufferindex - 3;
				while(_g1 < _g) {
					var i = _g1++;
					chars[i - 3] = this.buffer[i];
				}
				return this.toText(chars,bufferindex - 3);
			}
		}
		var chars1 = [];
		var _g11 = 0;
		var _g2 = bufferindex;
		while(_g11 < _g2) {
			var i1 = _g11++;
			chars1[i1] = this.buffer[i1];
		}
		return this.toText(chars1,bufferindex);
	}
	,toText: function(chars,length) {
		var value = "";
		var _g1 = 0;
		while(_g1 < length) value += String.fromCharCode(chars[_g1++]);
		return value;
	}
	,readUtf8String: function() {
		var text = "";
		var position = { value : 0};
		while(position.value < this.get_length()) text += this.readUtf8Line(position) + "\n";
		return text;
	}
	,toBytes: function() {
		return this.bytes;
	}
	,unload: function() {
		this.bytes = null;
	}
	,__class__: kha_internal_BytesBlob
	,__properties__: {get_length:"get_length"}
};
var kha_internal_HdrFormat = function() {
};
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = ["kha","internal","HdrFormat"];
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "HdrFormat.hx", lineNumber : 40, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var rgbe = new Uint8Array(4);
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var buf = new Uint8Array(2);
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "HdrFormat.hx", lineNumber : 56, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0] & 255;
			data[offset++] = rgbe[1] & 255;
			data[offset++] = rgbe[2] & 255;
			data[offset++] = rgbe[3] & 255;
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "HdrFormat.hx", lineNumber : 71, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			scanline_buffer = new Uint8Array(4 * scanline_width);
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			ptr_end = (_g++ + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "HdrFormat.hx", lineNumber : 85, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "HdrFormat.hx", lineNumber : 92, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1] & 255;
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "HdrFormat.hx", lineNumber : 103, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1] & 255;
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "HdrFormat.hx", lineNumber : 109, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		while(_g1 < scanline_width) {
			var i = _g1++;
			data[offset] = scanline_buffer[i] & 255;
			data[offset + 1] = scanline_buffer[i + scanline_width] & 255;
			data[offset + 2] = scanline_buffer[i + 2 * scanline_width] & 255;
			data[offset + 3] = scanline_buffer[i + 3 * scanline_width] & 255;
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCharCode(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		++_g;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			var x = kha_internal_HdrFormat.exposurePattern.matched(1);
			parseFloat(x);
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "HdrFormat.hx", lineNumber : 172, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var data = new Uint8Array(width * height * 4);
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,width,height);
	var floatData = new Float32Array(width * height * 4);
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var f = Math.pow(2.0,data[offset + 3] - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
kha_internal_HdrFormat.prototype = {
	__class__: kha_internal_HdrFormat
};
var kha_js_AEAudioChannel = function(element) {
	this.element = element;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = ["kha","js","AEAudioChannel"];
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.catchUp = function() {
	if(!kha_SystemImpl.mobile || kha_SystemImpl.mobileAudioPlaying) {
		return;
	}
	var _g = 0;
	var _g1 = kha_js_AEAudioChannel.todo;
	while(_g < _g1.length) {
		var channel = _g1[_g];
		++_g;
		channel.element.play();
		kha_SystemImpl.mobileAudioPlaying = true;
	}
	if(kha_SystemImpl.mobileAudioPlaying) {
		kha_js_AEAudioChannel.todo = null;
	}
};
kha_js_AEAudioChannel.prototype = {
	element: null
	,play: function() {
		if(kha_SystemImpl.mobile) {
			if(kha_SystemImpl.insideInputEvent) {
				this.element.play();
				kha_SystemImpl.mobileAudioPlaying = true;
			} else if(kha_SystemImpl.mobileAudioPlaying) {
				this.element.play();
			} else {
				kha_js_AEAudioChannel.todo.push(this);
			}
		} else {
			this.element.play();
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "AEAudioChannel.hx", lineNumber : 48, className : "kha.js.AEAudioChannel", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "AEAudioChannel.hx", lineNumber : 58, className : "kha.js.AEAudioChannel", methodName : "stop"});
		}
	}
	,length: null
	,get_length: function() {
		if(isFinite(this.element.duration)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,position: null
	,get_position: function() {
		return this.element.currentTime;
	}
	,get_volume: function() {
		return 1;
	}
	,set_volume: function(value) {
		return 1;
	}
	,finished: null
	,get_finished: function() {
		return this.get_position() >= this.get_length();
	}
	,__class__: kha_js_AEAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = ["kha","js","AudioElementAudio"];
kha_js_AudioElementAudio._compile = function() {
};
kha_js_AudioElementAudio.play = function(sound,loop,stream) {
	if(stream == null) {
		stream = false;
	}
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas,width,height) {
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	this.width = width;
	this.height = height;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
	canvas.save();
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = ["kha","js","CanvasGraphics"];
kha_js_CanvasGraphics.stringWidth = function(font,text) {
	if(kha_js_CanvasGraphics.instance == null) {
		return 5 * text.length;
	} else {
		kha_js_CanvasGraphics.instance.set_font(font);
		return kha_js_CanvasGraphics.instance.canvas.measureText(text).width;
	}
};
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	canvas: null
	,webfont: null
	,width: null
	,height: null
	,myColor: null
	,scaleQuality: null
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.width,this.height);
		} else {
			this.canvas.fillRect(0,0,this.width,this.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.canvas.globalAlpha = this.get_opacity();
		this.canvas.drawImage((js_Boot.__cast(img , kha_CanvasImage)).image,x,y);
		this.canvas.globalAlpha = 1;
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( ex ) {
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,get_color: function() {
		return this.myColor;
	}
	,get_imageScaleQuality: function() {
		return this.scaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		if(value == kha_graphics2_ImageScaleQuality.Low) {
			this.canvas.mozImageSmoothingEnabled = false;
			this.canvas.webkitImageSmoothingEnabled = false;
			this.canvas.msImageSmoothingEnabled = false;
			this.canvas.imageSmoothingEnabled = false;
		} else {
			this.canvas.mozImageSmoothingEnabled = true;
			this.canvas.webkitImageSmoothingEnabled = true;
			this.canvas.msImageSmoothingEnabled = true;
			this.canvas.imageSmoothingEnabled = true;
		}
		return this.scaleQuality = value;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.rect(x,y,width,height);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillRect: function(x,y,width,height) {
		this.canvas.globalAlpha = this.get_opacity() * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,drawCircle: function(cx,cy,radius,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,0,2 * Math.PI,false);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillCircle: function(cx,cy,radius) {
		this.canvas.beginPath();
		this.canvas.arc(cx,cy,radius,0,2 * Math.PI,false);
		this.canvas.fill();
	}
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var _g1 = 0;
			var _g = text.length;
			while(_g1 < _g) {
				var i = _g1++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(HxOverrides.cca(text,i) - 32,xpos,y);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,get_font: function() {
		return this.webfont;
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldWith = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.moveTo(0,0);
		this.canvas.stroke();
		this.canvas.lineWidth = oldWith;
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.canvas.beginPath();
		this.canvas.closePath();
		this.canvas.fill();
	}
	,scissor: function(x,y,width,height) {
		this.canvas.beginPath();
		this.canvas.rect(x,y,width,height);
		this.canvas.clip();
	}
	,disableScissor: function() {
		this.canvas.restore();
	}
	,drawVideo: function(video,x,y,width,height) {
		this.canvas.drawImage((js_Boot.__cast(video , kha_js_Video)).element,x,y,width,height);
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_URLParser = function(url) {
	this._parts = null;
	this._parts = ["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];
	this.url = url;
	var r = new EReg("^(?:(?![^:@]+:[^:@/]*@)([^:/?#.]+):)?(?://)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\\d*))?)(((/(?:[^?#](?![^?#/]*\\.[^?#/.]+(?:[?#]|$)))*/?)?([^?#/]*))(?:\\?([^#]*))?(?:#(.*))?)","");
	r.match(url);
	var _g1 = 0;
	var _g = this._parts.length;
	while(_g1 < _g) {
		var i = _g1++;
		var value = r.matched(i);
		this[this._parts[i]] = value;
	}
};
$hxClasses["kha.js.URLParser"] = kha_js_URLParser;
kha_js_URLParser.__name__ = ["kha","js","URLParser"];
kha_js_URLParser.parse = function(url) {
	return new kha_js_URLParser(url);
};
kha_js_URLParser.prototype = {
	url: null
	,source: null
	,protocol: null
	,authority: null
	,userInfo: null
	,user: null
	,password: null
	,host: null
	,port: null
	,relative: null
	,path: null
	,directory: null
	,file: null
	,query: null
	,anchor: null
	,_parts: null
	,toString: function() {
		var s = "For Url -> " + this.url + "\n";
		var _g1 = 0;
		var _g = this._parts.length;
		while(_g1 < _g) {
			var i = _g1++;
			s += this._parts[i] + ": " + Std.string(Reflect.field(this,this._parts[i])) + (i == this._parts.length - 1?"":"\n");
		}
		return s;
	}
	,__class__: kha_js_URLParser
};
var kha_js_EnvironmentVariables = function() {
	kha_EnvironmentVariables.call(this);
};
$hxClasses["kha.js.EnvironmentVariables"] = kha_js_EnvironmentVariables;
kha_js_EnvironmentVariables.__name__ = ["kha","js","EnvironmentVariables"];
kha_js_EnvironmentVariables.__super__ = kha_EnvironmentVariables;
kha_js_EnvironmentVariables.prototype = $extend(kha_EnvironmentVariables.prototype,{
	getVariable: function(name) {
		var parts = new kha_js_URLParser(window.location.href).query.split("&");
		var _g = 0;
		while(_g < parts.length) {
			var part = parts[_g];
			++_g;
			var subparts = part.split("=");
			if(subparts[0] == name) {
				return subparts[1];
			}
		}
		haxe_Log.trace("Environment variables requested.",{ fileName : "EnvironmentVariables.hx", lineNumber : 90, className : "kha.js.EnvironmentVariables", methodName : "getVariable"});
		return "";
	}
	,__class__: kha_js_EnvironmentVariables
});
var kha_js_Font = function(kravur) {
	this.images = new haxe_ds_IntMap();
	this.kravur = kravur;
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = ["kha","js","Font"];
kha_js_Font.__interfaces__ = [kha_Font];
kha_js_Font.prototype = {
	kravur: null
	,images: null
	,height: function(fontSize) {
		return this.kravur._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this.kravur._get(fontSize).stringWidth(str);
	}
	,baseline: function(fontSize) {
		return this.kravur._get(fontSize).getBaselinePosition();
	}
	,getImage: function(fontSize,color) {
		if(!this.images.h.hasOwnProperty(fontSize)) {
			var v = new haxe_ds_IntMap();
			this.images.h[fontSize] = v;
		}
		if(!this.images.h[fontSize].exists(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g1 = 0;
			var _g = bytes.length;
			while(_g1 < _g) {
				var i = _g1++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[fontSize].set(color,img);
			return img;
		}
		return this.images.h[fontSize].get(color);
	}
	,unload: function() {
		this.kravur = null;
		this.images = null;
	}
	,__class__: kha_js_Font
};
var kha_js_Sound = function(filenames,done) {
	kha_Sound.call(this);
	this.done = done;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = ["kha","js","Sound"];
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	filenames: null
	,done: null
	,element: null
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g1 = 0;
			var _g = this.filenames.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "Sound.hx", lineNumber : 108, className : "kha.js.Sound", methodName : "errorListener"});
		window.console.log("loadSound failed");
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_Video = function(filenames,done) {
	kha_Video.call(this);
	this.done = done;
	kha_js_Video.loading.add(this);
	this.element = window.document.createElement("video");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("video/webm") != "" && StringTools.endsWith(filename,".webm")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("video/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
	this.element.preload = "auto";
	this.element.src = this.filenames[0];
};
$hxClasses["kha.js.Video"] = kha_js_Video;
kha_js_Video.__name__ = ["kha","js","Video"];
kha_js_Video.__super__ = kha_Video;
kha_js_Video.prototype = $extend(kha_Video.prototype,{
	filenames: null
	,element: null
	,done: null
	,texture: null
	,width: function() {
		return this.element.videoWidth;
	}
	,height: function() {
		return this.element.videoHeight;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
		try {
			this.element.loop = loop;
			this.element.play();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "Video.hx", lineNumber : 55, className : "kha.js.Video", methodName : "play"});
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "Video.hx", lineNumber : 64, className : "kha.js.Video", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "Video.hx", lineNumber : 74, className : "kha.js.Video", methodName : "stop"});
		}
	}
	,getCurrentPos: function() {
		return Math.ceil(this.element.currentTime * 1000);
	}
	,getLength: function() {
		if(isFinite(this.element.duration)) {
			return Math.floor(this.element.duration * 1000);
		} else {
			return -1;
		}
	}
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g1 = 0;
			var _g = this.filenames.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "Video.hx", lineNumber : 102, className : "kha.js.Video", methodName : "errorListener"});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_Image.fromVideo(this);
		}
		this.done(this);
		kha_js_Video.loading.remove(this);
	}
	,__class__: kha_js_Video
});
var kha_js_WebAudioSound = function(filename,done) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		haxe_Log.trace("Error loading " + filename,{ fileName : "WebAudioSound.hx", lineNumber : 76, className : "kha.js.WebAudioSound", methodName : "new"});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = ["kha","js","WebAudioSound"];
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var length = buffer.getChannelData(0).length * 2;
			_gthis.uncompressedData = new Array(length);
			if(buffer.numberOfChannels == 1) {
				var _g1 = 0;
				var _g = buffer.getChannelData(0).length;
				while(_g1 < _g) {
					var i = _g1++;
					_gthis.uncompressedData[i * 2] = buffer.getChannelData(0)[i];
					_gthis.uncompressedData[i * 2 + 1] = buffer.getChannelData(0)[i];
				}
			} else {
				var _g11 = 0;
				var _g2 = buffer.getChannelData(0).length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					_gthis.uncompressedData[i1 * 2] = buffer.getChannelData(0)[i1];
					_gthis.uncompressedData[i1 * 2 + 1] = buffer.getChannelData(1)[i1];
				}
			}
			_gthis.compressedData = null;
			done();
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = ["kha","js","graphics4","ConstantLocation"];
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	value: null
	,__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.matrixCache = new Array(16);
	this.depthMask = false;
	this.depthTest = false;
	this.renderTarget = renderTarget;
	this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
	this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = ["kha","js","graphics4","Graphics"];
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor[1]) {
	case 0:case 2:
		return 0;
	case 1:
		return 1;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op[1]) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	depthTest: null
	,depthMask: null
	,framebuffer: null
	,indicesCount: null
	,renderTarget: null
	,instancedExtension: null
	,blendMinMaxExtension: null
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTarget.frameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTarget.texture,0);
				var _g1 = 0;
				var _g = additionalRenderTargets.length;
				while(_g1 < _g) {
					var i = _g1++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g11 = 0;
				var _g2 = additionalRenderTargets.length;
				while(_g11 < _g2) attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + _g11++ + 1);
				kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
			}
		}
	}
	,end: function() {
	}
	,flush: function() {
	}
	,vsynced: function() {
		return true;
	}
	,refreshRate: function() {
		return 60;
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask = 16384;
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,viewport: function(x,y,width,height) {
		kha_SystemImpl.gl.viewport(x,(this.renderTarget == null?kha_System.windowHeight(0):this.renderTarget.get_height()) - y - height,width,height);
	}
	,setDepthMode: function(write,mode) {
		switch(mode[1]) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == kha_graphics4_BlendingFactor.BlendOne && destination == kha_graphics4_BlendingFactor.BlendZero) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,createVertexBuffer: function(vertexCount,structure,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_VertexBuffer(vertexCount,structure,usage);
	}
	,setVertexBuffer: function(vertexBuffer) {
		(js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setVertexBuffers: function(vertexBuffers) {
		var offset = 0;
		var _g = 0;
		while(_g < vertexBuffers.length) {
			var vertexBuffer = vertexBuffers[_g];
			++_g;
			offset += (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(offset);
		}
	}
	,createIndexBuffer: function(indexCount,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_IndexBuffer(indexCount,usage);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,createCubeMap: function(size,format,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return null;
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureDepth: function(stage,texture) {
		(js_Boot.__cast(texture , kha_WebGLImage)).setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setVideoTexture: function(unit,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast((js_Boot.__cast(texture , kha_js_Video)).texture , kha_WebGLImage)).set((js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter[1]) {
		case 0:
			switch(mipmapFilter[1]) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter[1]) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == kha_graphics4_TextureFilter.AnisotropicFilter) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setCullMode: function(mode) {
		switch(mode[1]) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		pipe.set();
	}
	,setBool: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value?1:0);
	}
	,setInt: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2);
	}
	,setFloat3: function(location,value1,value2,value3) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3);
	}
	,setFloat4: function(location,value1,value2,value3,value4) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3,value4);
	}
	,setFloats: function(location,values) {
		kha_SystemImpl.gl.uniform1fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,values);
	}
	,setVector2: function(location,value) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y);
	}
	,setVector3: function(location,value) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z);
	}
	,setVector4: function(location,value) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z,value.w);
	}
	,matrixCache: null
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		kha_SystemImpl.gl.drawElements(4,count == -1?this.indicesCount:count,5123,start * 2);
	}
	,convertStencilAction: function(action) {
		switch(action[1]) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == kha_graphics4_CompareMode.Always && bothPass == kha_graphics4_StencilAction.Keep && depthFail == kha_graphics4_StencilAction.Keep && stencilFail == kha_graphics4_StencilAction.Keep) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = 0;
			switch(compareMode[1]) {
			case 0:
				stencilFunc = 519;
				break;
			case 1:
				stencilFunc = 512;
				break;
			case 2:
				stencilFunc = 514;
				break;
			case 3:
				stencilFunc = 517;
				break;
			case 4:
				stencilFunc = 513;
				break;
			case 5:
				stencilFunc = 515;
				break;
			case 6:
				stencilFunc = 516;
				break;
			case 7:
				stencilFunc = 518;
				break;
			}
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			kha_SystemImpl.gl.stencilFunc(stencilFunc,referenceValue,readMask);
		}
	}
	,scissor: function(x,y,width,height) {
		kha_SystemImpl.gl.enable(3089);
		kha_SystemImpl.gl.scissor(x,(this.renderTarget == null?kha_System.windowHeight(0):this.renderTarget.get_height()) - y - height,width,height);
	}
	,disableScissor: function() {
		kha_SystemImpl.gl.disable(3089);
	}
	,renderTargetsInvertedY: function() {
		return true;
	}
	,drawIndexedVerticesInstanced: function(instanceCount,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		if(this.instancedRenderingAvailable()) {
			this.instancedExtension.drawElementsInstancedANGLE(4,count == -1?this.indicesCount:count,5123,start * 2,instanceCount);
		}
	}
	,instancedRenderingAvailable: function() {
		return this.instancedExtension;
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = ["kha","js","graphics4","Graphics2"];
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	drawVideoInternal: function(video,x,y,width,height) {
		var v = js_Boot.__cast(video , kha_js_Video);
		this.drawScaledSubImage(v.texture,0,0,v.texture.get_width(),v.texture.get_height(),x,y,width,height);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = ["kha","js","graphics4","TextureUnit"];
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	value: null
	,__class__: kha_js_graphics4_TextureUnit
};
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = ["kha","math","FastMatrix3"];
kha_math_FastMatrix3.fromMatrix3 = function(m) {
	return new kha_math_FastMatrix3(m._00,m._10,m._20,m._01,m._11,m._21,m._02,m._12,m._22);
};
kha_math_FastMatrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_FastMatrix3
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = ["kha","math","FastMatrix4"];
kha_math_FastMatrix4.fromMatrix4 = function(m) {
	return new kha_math_FastMatrix4(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33);
};
kha_math_FastMatrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	return new kha_math_FastMatrix4(2 / (right - left),0,0,-(right + left) / (right - left),0,2 / (top - bottom),0,-(top + bottom) / (top - bottom),0,0,-2 / (zf - zn),-(zf + zn) / (zf - zn),0,0,0,1);
};
kha_math_FastMatrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	return new kha_math_FastMatrix4(uh / aspect,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_FastMatrix4.lookAt = function(eye,at,up) {
	var zaxis = new kha_math_FastVector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var xaxis = new kha_math_FastVector3(zaxis.y * up.z - zaxis.z * up.y,zaxis.z * up.x - zaxis.x * up.z,zaxis.x * up.y - zaxis.y * up.x);
	xaxis.set_length(1);
	var _x = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	return new kha_math_FastMatrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),_x,_y,_z,-(_x * eye.x + _y * eye.y + _z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
kha_math_FastMatrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_FastMatrix4
};
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = ["kha","math","FastVector2"];
kha_math_FastVector2.fromVector2 = function(v) {
	return new kha_math_FastVector2(v.x,v.y);
};
kha_math_FastVector2.prototype = {
	x: null
	,y: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector2(" + this.x + ", " + this.y + ")";
	}
	,__class__: kha_math_FastVector2
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = ["kha","math","FastVector3"];
kha_math_FastVector3.fromVector3 = function(v) {
	return new kha_math_FastVector3(v.x,v.y,v.z);
};
kha_math_FastVector3.prototype = {
	x: null
	,y: null
	,z: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector3(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,__class__: kha_math_FastVector3
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_FastVector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.FastVector4"] = kha_math_FastVector4;
kha_math_FastVector4.__name__ = ["kha","math","FastVector4"];
kha_math_FastVector4.fromVector4 = function(v) {
	return new kha_math_FastVector4(v.x,v.y,v.z,v.w);
};
kha_math_FastVector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector4(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	,__class__: kha_math_FastVector4
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Matrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.Matrix3"] = kha_math_Matrix3;
kha_math_Matrix3.__name__ = ["kha","math","Matrix3"];
kha_math_Matrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_Matrix3
};
var kha_math_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.Matrix4"] = kha_math_Matrix4;
kha_math_Matrix4.__name__ = ["kha","math","Matrix4"];
kha_math_Matrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	return new kha_math_Matrix4(2 / (right - left),0,0,-(right + left) / (right - left),0,2 / (top - bottom),0,-(top + bottom) / (top - bottom),0,0,-2 / (zf - zn),-(zf + zn) / (zf - zn),0,0,0,1);
};
kha_math_Matrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	return new kha_math_Matrix4(uh / aspect,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_Matrix4.lookAt = function(eye,at,up) {
	var zaxis = new kha_math_Vector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var xaxis = new kha_math_Vector3(zaxis.y * up.z - zaxis.z * up.y,zaxis.z * up.x - zaxis.x * up.z,zaxis.x * up.y - zaxis.y * up.x);
	xaxis.set_length(1);
	var _x = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	return new kha_math_Matrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),_x,_y,_z,-(_x * eye.x + _y * eye.y + _z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
kha_math_Matrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_Matrix4
};
var kha_math_Vector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.Vector2"] = kha_math_Vector2;
kha_math_Vector2.__name__ = ["kha","math","Vector2"];
kha_math_Vector2.prototype = {
	x: null
	,y: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,__class__: kha_math_Vector2
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Vector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.Vector3"] = kha_math_Vector3;
kha_math_Vector3.__name__ = ["kha","math","Vector3"];
kha_math_Vector3.prototype = {
	x: null
	,y: null
	,z: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,__class__: kha_math_Vector3
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.Vector4"] = kha_math_Vector4;
kha_math_Vector4.__name__ = ["kha","math","Vector4"];
kha_math_Vector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,__class__: kha_math_Vector4
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_network_Client = function() { };
$hxClasses["kha.network.Client"] = kha_network_Client;
kha_network_Client.__name__ = ["kha","network","Client"];
kha_network_Client.prototype = {
	get_id: null
	,id: null
	,send: null
	,receive: null
	,onClose: null
	,__class__: kha_network_Client
	,__properties__: {get_id:"get_id"}
};
var kha_network_ControllerBuilder = function() { };
$hxClasses["kha.network.ControllerBuilder"] = kha_network_ControllerBuilder;
kha_network_ControllerBuilder.__name__ = ["kha","network","ControllerBuilder"];
var kha_network_Entity = function() { };
$hxClasses["kha.network.Entity"] = kha_network_Entity;
kha_network_Entity.__name__ = ["kha","network","Entity"];
kha_network_Entity.prototype = {
	_id: null
	,_size: null
	,_send: null
	,_receive: null
	,__class__: kha_network_Entity
};
var kha_network_LocalClient = function(id) {
	this.myId = id;
};
$hxClasses["kha.network.LocalClient"] = kha_network_LocalClient;
kha_network_LocalClient.__name__ = ["kha","network","LocalClient"];
kha_network_LocalClient.__interfaces__ = [kha_network_Client];
kha_network_LocalClient.prototype = {
	myId: null
	,send: function(bytes,mandatory) {
	}
	,receive: function(receiver) {
	}
	,onClose: function(close) {
	}
	,controllers: null
	,get_controllers: function() {
		return null;
	}
	,id: null
	,get_id: function() {
		return this.myId;
	}
	,__class__: kha_network_LocalClient
	,__properties__: {get_id:"get_id",get_controllers:"get_controllers"}
};
var kha_network_Network = function(url,port,errorCallback,closeCallback) {
	this.open = false;
	var _gthis = this;
	this.socket = new WebSocket("ws://" + url + ":" + port);
	this.socket.onerror = function(error) {
		haxe_Log.trace("Network error: " + error,{ fileName : "Network.hx", lineNumber : 14, className : "kha.network.Network", methodName : "new"});
		errorCallback();
	};
	this.socket.binaryType = "arraybuffer";
	this.socket.onopen = function() {
		_gthis.open = true;
	};
	this.socket.onclose = function(event) {
		haxe_Log.trace("Network connection closed",{ fileName : "Network.hx", lineNumber : 22, className : "kha.network.Network", methodName : "new"});
		closeCallback();
	};
};
$hxClasses["kha.network.Network"] = kha_network_Network;
kha_network_Network.__name__ = ["kha","network","Network"];
kha_network_Network.prototype = {
	socket: null
	,open: null
	,send: function(bytes,mandatory) {
		if(this.open) {
			this.socket.send(bytes.b.bufferValue);
		}
	}
	,listen: function(listener) {
		this.socket.onmessage = function(message) {
			listener(haxe_io_Bytes.ofData(message.data));
		};
	}
	,__class__: kha_network_Network
};
var kha_network_State = function(time,data) {
	this.time = time;
	this.data = data;
};
$hxClasses["kha.network.State"] = kha_network_State;
kha_network_State.__name__ = ["kha","network","State"];
kha_network_State.prototype = {
	time: null
	,data: null
	,__class__: kha_network_State
};
var kha_network_Session = function(maxPlayers,address,port) {
	this.ping = 1;
	this.currentPlayers = 0;
	this.controllers = new haxe_ds_IntMap();
	this.entities = new haxe_ds_IntMap();
	kha_network_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.network.Session"] = kha_network_Session;
kha_network_Session.__name__ = ["kha","network","Session"];
kha_network_Session.the = function() {
	return kha_network_Session.instance;
};
kha_network_Session.prototype = {
	entities: null
	,controllers: null
	,maxPlayers: null
	,currentPlayers: null
	,ping: null
	,address: null
	,port: null
	,startCallback: null
	,refusedCallback: null
	,resetCallback: null
	,localClient: null
	,network: null
	,updateTaskId: null
	,pingTaskId: null
	,me: null
	,get_me: function() {
		return this.localClient;
	}
	,addEntity: function(entity) {
		var key = entity._id();
		this.entities.h[key] = entity;
	}
	,addController: function(controller) {
		haxe_Log.trace("Adding controller id " + controller._id(),{ fileName : "Session.hx", lineNumber : 88, className : "kha.network.Session", methodName : "addController"});
		controller._inputBufferIndex = 0;
		var key = controller._id();
		this.controllers.h[key] = controller;
	}
	,sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,sendPing: function() {
		var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
		bytes.b[0] = 4;
		bytes.setFloat(1,kha_Scheduler.realTime());
		this.sendToServer(bytes);
	}
	,sendPlayerUpdate: function() {
	}
	,receive: function(bytes,client) {
		switch(bytes.b[0]) {
		case 0:
			this.localClient = new kha_network_LocalClient(bytes.b[1]);
			kha_Scheduler.resetTime();
			this.startCallback();
			break;
		case 1:
			var time = bytes.getDouble(1);
			var offset = 9;
			var tmp = this.entities.iterator();
			while(tmp.hasNext()) {
				var entity = tmp.next();
				entity._receive(offset,bytes);
				offset += entity._size();
			}
			kha_Scheduler.back(time);
			break;
		case 3:
			switch(bytes.b[1]) {
			case 0:
				break;
			case 1:
				this.executeRPC(bytes);
				break;
			}
			break;
		case 4:
			var sendTime = bytes.getFloat(1);
			this.ping = kha_Scheduler.realTime() - sendTime;
			break;
		case 5:
			this.refusedCallback();
			break;
		case 6:
			this.currentPlayers = bytes.getInt32(1);
			break;
		}
	}
	,executeRPC: function(bytes) {
		var args = [];
		var syncId = bytes.getInt32(2);
		var index = 6;
		var classnamelength = bytes.getUInt16(6);
		index = 8;
		var classname = "";
		var _g1 = 0;
		while(_g1 < classnamelength) {
			++_g1;
			classname += String.fromCharCode(bytes.b[index]);
			++index;
		}
		var methodnamelength = bytes.getUInt16(index);
		index += 2;
		var methodname = "";
		var _g11 = 0;
		while(_g11 < methodnamelength) {
			++_g11;
			methodname += String.fromCharCode(bytes.b[index]);
			++index;
		}
		while(index < bytes.length) {
			var type = bytes.b[index];
			++index;
			switch(type) {
			case 66:
				var value = bytes.b[index] == 1;
				++index;
				haxe_Log.trace("Bool: " + (value == null?"null":"" + value),{ fileName : "Session.hx", lineNumber : 288, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value);
				break;
			case 70:
				var value1 = bytes.getDouble(index);
				index += 8;
				haxe_Log.trace("Float: " + value1,{ fileName : "Session.hx", lineNumber : 293, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value1);
				break;
			case 73:
				var value2 = bytes.getInt32(index);
				index += 4;
				haxe_Log.trace("Int: " + value2,{ fileName : "Session.hx", lineNumber : 298, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value2);
				break;
			case 83:
				var length = bytes.getUInt16(index);
				index += 2;
				var str = "";
				var _g12 = 0;
				while(_g12 < length) {
					++_g12;
					str += String.fromCharCode(bytes.b[index]);
					++index;
				}
				haxe_Log.trace("String: " + str,{ fileName : "Session.hx", lineNumber : 308, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(str);
				break;
			default:
				haxe_Log.trace("Unknown argument type.",{ fileName : "Session.hx", lineNumber : 311, className : "kha.network.Session", methodName : "executeRPC"});
			}
		}
		if(syncId == -1) {
			Reflect.field(Type.resolveClass(classname),methodname + "_remotely").apply(null,args);
		} else {
			Reflect.field(kha_network_SyncBuilder.objects[syncId],methodname + "_remotely").apply(kha_network_SyncBuilder.objects[syncId],args);
		}
	}
	,waitForStart: function(callback,refuseCallback,errorCallback,closeCallback,resCallback) {
		var _gthis = this;
		this.startCallback = callback;
		this.refusedCallback = refuseCallback;
		this.resetCallback = resCallback;
		this.network = new kha_network_Network(this.address,this.port,errorCallback,function() {
			closeCallback();
			_gthis.reset();
		});
		this.network.listen(function(bytes) {
			_gthis.receive(bytes);
		});
		this.updateTaskId = kha_Scheduler.addFrameTask($bind(this,this.update),0);
		this.ping = 1;
		this.pingTaskId = kha_Scheduler.addTimeTask($bind(this,this.sendPing),0,1);
	}
	,reset: function() {
		kha_Scheduler.removeFrameTask(this.updateTaskId);
		kha_Scheduler.removeTimeTask(this.pingTaskId);
		this.currentPlayers = 0;
		this.ping = 1;
		this.controllers = new haxe_ds_IntMap();
		this.entities = new haxe_ds_IntMap();
		this.resetCallback();
	}
	,update: function() {
		var tmp = this.controllers.iterator();
		while(tmp.hasNext()) {
			var controller = tmp.next();
			if(controller._inputBufferIndex > 0) {
				var bytes = new haxe_io_Bytes(new ArrayBuffer(22 + controller._inputBufferIndex));
				bytes.b[0] = 2;
				bytes.setInt32(1,controller._id());
				bytes.setDouble(5,kha_Scheduler.realTime());
				bytes.setInt32(13,kha_System.windowWidth(0));
				bytes.setInt32(17,kha_System.windowHeight(0));
				bytes.b[21] = kha_System.get_screenRotation()[1] & 255;
				bytes.blit(22,controller._inputBuffer,0,controller._inputBufferIndex);
				this.sendToServer(bytes);
				controller._inputBufferIndex = 0;
			}
		}
	}
	,sendToServer: function(bytes) {
		this.network.send(bytes,false);
	}
	,__class__: kha_network_Session
	,__properties__: {get_me:"get_me"}
};
var kha_network_SyncBuilder = function() { };
$hxClasses["kha.network.SyncBuilder"] = kha_network_SyncBuilder;
kha_network_SyncBuilder.__name__ = ["kha","network","SyncBuilder"];
var kha_simd_Float32x4 = function(_0,_1,_2,_3) {
	this._0 = _0;
	this._1 = _1;
	this._2 = _2;
	this._3 = _3;
};
$hxClasses["kha.simd.Float32x4"] = kha_simd_Float32x4;
kha_simd_Float32x4.__name__ = ["kha","simd","Float32x4"];
kha_simd_Float32x4.create = function() {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.loadAllFast = function(t) {
	return new kha_simd_Float32x4(t,t,t,t);
};
kha_simd_Float32x4.load = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.loadFast = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.get = function(t,index) {
	var value = 0;
	switch(index) {
	case 0:
		value = t._0;
		break;
	case 1:
		value = t._1;
		break;
	case 2:
		value = t._2;
		break;
	case 3:
		value = t._3;
		break;
	}
	return value;
};
kha_simd_Float32x4.getFast = function(t,index) {
	switch(index) {
	case 0:
		return t._0;
	case 1:
		return t._1;
	case 2:
		return t._2;
	case 3:
		return t._3;
	}
	return 0;
};
kha_simd_Float32x4.abs = function(t) {
	return new kha_simd_Float32x4(Math.abs(t._0),Math.abs(t._1),Math.abs(t._2),Math.abs(t._3));
};
kha_simd_Float32x4.add = function(a,b) {
	return new kha_simd_Float32x4(a._0 + b._0,a._1 + b._1,a._2 + b._2,a._3 + b._3);
};
kha_simd_Float32x4.div = function(a,b) {
	return new kha_simd_Float32x4(a._0 / b._0,a._1 / b._1,a._2 / b._2,a._3 / b._3);
};
kha_simd_Float32x4.mul = function(a,b) {
	return new kha_simd_Float32x4(a._0 * b._0,a._1 * b._1,a._2 * b._2,a._3 * b._3);
};
kha_simd_Float32x4.neg = function(t) {
	return new kha_simd_Float32x4(-t._0,-t._1,-t._2,-t._3);
};
kha_simd_Float32x4.reciprocalApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.reciprocalSqrtApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.sub = function(a,b) {
	return new kha_simd_Float32x4(a._0 - b._0,a._1 - b._1,a._2 - b._2,a._3 - b._3);
};
kha_simd_Float32x4.sqrt = function(t) {
	return new kha_simd_Float32x4(Math.sqrt(t._0),Math.sqrt(t._1),Math.sqrt(t._2),Math.sqrt(t._3));
};
kha_simd_Float32x4.prototype = {
	_0: null
	,_1: null
	,_2: null
	,_3: null
	,__class__: kha_simd_Float32x4
};
var player_Bullet = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.playerBullet);
	this.scale.ox = this.position.ox = this.get_width() / 2;
	this.scale.oy = this.position.oy = this.get_height() / 2;
	this.collider = new kala_behaviors_collision_basic_Collider(this);
	var x = this.get_width() / 2 - 1;
	var y = this.get_height() / 2 - 10;
	var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
	rect.reset();
	var _this = rect.position;
	_this.x = x;
	_this.y = y;
	rect.width = 4;
	rect.height = 16;
	this.collider._shapes.push(rect);
	this.mask = rect;
};
$hxClasses["player.Bullet"] = player_Bullet;
player_Bullet.__name__ = ["player","Bullet"];
player_Bullet.shoot1 = function(x,haccel,vspeed) {
	var bullet = player_Bullet.mainGroup.createAlive();
	bullet.position.x = x;
	bullet.position.y = 360;
	var _this = bullet.scale;
	_this.x = 2;
	_this.y = 2;
	bullet.hspeed = 0;
	bullet.haccel = haccel;
	bullet.vspeed = vspeed;
};
player_Bullet.shoot2 = function(x) {
	var bullet = player_Bullet.minionGroup.createAlive();
	bullet.position.x = x;
	bullet.position.y = 425;
	bullet.vspeed = -16;
};
player_Bullet.create = function(group,x) {
	var bullet = group.createAlive();
	bullet.position.x = x;
	return bullet;
};
player_Bullet.__super__ = kala_objects_sprite_Sprite;
player_Bullet.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	vspeed: null
	,hspeed: null
	,haccel: null
	,mask: null
	,collider: null
	,update: function(elapsed) {
		if(this.scale.x > 1) {
			this.scale.y = this.scale.x -= 0.2;
		}
		var _g = this;
		_g.position.x = _g.position.x + this.hspeed;
		var _g1 = this;
		_g1.position.y = _g1.position.y + this.vspeed;
		if(this.position.y < -this.get_height()) {
			this.kill();
			return;
		}
		this.hspeed += this.haccel;
		this.vspeed += -1.2;
		this.haccel *= 0.35;
	}
	,__class__: player_Bullet
});
var player_EngeryBall = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.sheets.sprite_sheet_2.get("player/ball/"),R.images.sprite_sheet_2,null,5).animation.play();
	var x = this.get_width() / 2;
	var y = this.get_height() / 2;
	var _this = this.position;
	_this.ox = x;
	_this.oy = y;
	var _this1 = this.scale;
	_this1.ox = x;
	_this1.oy = y;
	var _this2 = this.rotation;
	_this2.px = x;
	_this2.py = y;
	this.visible = false;
};
$hxClasses["player.EngeryBall"] = player_EngeryBall;
player_EngeryBall.__name__ = ["player","EngeryBall"];
player_EngeryBall.__super__ = kala_objects_sprite_Sprite;
player_EngeryBall.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	charge: function(factor,x) {
		this.visible = true;
		this.position.x = x;
		factor = (-Math.cos(Math.PI * factor) / 2 + .5) * kala_math__$Random_Random_$Impl_$.instance.GetFloatIn(0.85,1);
		this.position.y = 390 - 40 * factor;
		var _this = this.scale;
		_this.x = factor;
		_this.y = factor;
	}
	,__class__: player_EngeryBall
});
var player_Lightning = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.playerLightning,null,null,2).animation.play();
	this.halfWidth = this.position.ox = this.scale.ox = this.get_width() / 2;
	this.position.oy = 10;
	this.tween = new kala_behaviors_tween_Tween(this);
	this.boss = states_PlayState.instance.boss;
};
$hxClasses["player.Lightning"] = player_Lightning;
player_Lightning.__name__ = ["player","Lightning"];
player_Lightning.shoot = function(x,bonus) {
	var lightning = player_Lightning.group.createAlive();
	lightning.position.x = x;
	lightning.scale.x = 0;
	var _this = lightning.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
	_this1.nodes.push(kala_behaviors_tween_TweenNode.WAIT(2));
	_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
		var _this2 = G.sfxGroup;
		var volume = (bonus + 1) / 2;
		var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.lightning,false),_this2,false);
		channel._volume = volume;
		channel.channel.set_volume(_this2.muted?0:volume * _this2._volume);
		_this2.channels.push(channel);
	}));
	_this1.manager._tweens.push(_this1);
	_this1.nextNode();
	var _this3 = lightning.tween;
	var target1 = null;
	var ease1 = null;
	if(target1 == null) {
		target1 = _this3.object;
	}
	if(ease1 == null) {
		ease1 = kala_behaviors_tween_Ease.linear;
	}
	var _this4 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this3,null,target1,ease1,null);
	var vars = { x : (kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1) * (0.4 + bonus * 0.6)};
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(lightning.scale,vars,20,kala_behaviors_tween_Ease.elasticOut,null);
	task.backwardEase = null;
	_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	_this4.nodes.push(kala_behaviors_tween_TweenNode.WAIT(10));
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(lightning.scale,{ x : 0},30,kala_behaviors_tween_Ease.elasticInOut,null);
	task1.backwardEase = null;
	_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	_this4.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
		lightning.kill();
	}));
	_this4.manager._tweens.push(_this4);
	_this4.nextNode();
};
player_Lightning.__super__ = kala_objects_sprite_Sprite;
player_Lightning.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	tween: null
	,halfWidth: null
	,boss: null
	,kill: function() {
		kala_objects_sprite_Sprite.prototype.kill.call(this);
		var _this = this.tween;
		while(_this._tweens.length > 0) _this._tweens.pop().cancel();
	}
	,update: function(elapsed) {
		var absScaleX = Math.abs(this.scale.x);
		var scaledHalfHitWidth = this.halfWidth * absScaleX * 0.6;
		var leftX = this.position.x - scaledHalfHitWidth;
		var rightX = this.position.x + scaledHalfHitWidth;
		var tmp = HxOverrides.iter(states_PlayState.instance.enemyGroup.members);
		while(tmp.hasNext()) {
			var enemy = tmp.next();
			if(enemy.get_killed() || !enemy.collider.available) {
				continue;
			}
			if(enemy.mask.absX + enemy.mask.radius > leftX && enemy.mask.absX - enemy.mask.radius < rightX) {
				enemy.set_hp(enemy.hp - UpgradeData.lightningDMG * absScaleX);
			}
		}
		var tmp1 = HxOverrides.iter(enemies_EnemyB.childGroup.members);
		while(tmp1.hasNext()) {
			var enemy1 = tmp1.next();
			if(enemy1.get_killed() || !enemy1.collider.available) {
				continue;
			}
			if(enemy1.mask.absX + enemy1.mask.radius > leftX && enemy1.mask.absX - enemy1.mask.radius < rightX) {
				var _g = enemy1;
				_g.set_hp(_g.hp - UpgradeData.lightningDMG * absScaleX);
			}
		}
		var tmp2 = HxOverrides.iter(enemies_EnemyD.childGroup.members);
		while(tmp2.hasNext()) {
			var enemy2 = tmp2.next();
			if(enemy2.get_killed() || !enemy2.collider.available) {
				continue;
			}
			if(enemy2.mask.absX + enemy2.mask.radius > leftX && enemy2.mask.absX - enemy2.mask.radius < rightX) {
				var _g1 = enemy2;
				_g1.set_hp(_g1.hp - UpgradeData.lightningDMG * absScaleX);
			}
		}
		if(this.boss.alive && !this.boss.deathEffect.alive) {
			var _g2 = this.boss;
			_g2.set_hp(_g2.hp - UpgradeData.lightningDMG * absScaleX);
		}
	}
	,testHit: function(enemy,absScaleX,leftX,rightX) {
		if(enemy.mask.absX + enemy.mask.radius > leftX && enemy.mask.absX - enemy.mask.radius < rightX) {
			enemy.set_hp(enemy.hp - UpgradeData.lightningDMG * absScaleX);
		}
	}
	,__class__: player_Lightning
});
var player_Minion = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.playerChildStanding,null,"stand",2);
	this.loadSpriteData(R.playerChildRunning,null,"run",3);
	this.position.ox = this.scale.ox = this.rotation.px = this.get_width() / 2;
	this.position.oy = this.scale.oy = this.rotation.py = this.get_height() / 2;
	this.playerPos = states_PlayState.instance.player.position;
	this.collider = new kala_behaviors_collision_basic_Collider(this);
	var x = this.position.ox;
	var y = this.position.oy;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this = circle.position;
	_this.x = x;
	_this.y = y;
	circle.radius = 15;
	this.collider._shapes.push(circle);
	this.mask = circle;
	this.revive();
};
$hxClasses["player.Minion"] = player_Minion;
player_Minion.__name__ = ["player","Minion"];
player_Minion.create = function() {
	player_Minion.group.createAlive();
};
player_Minion.__super__ = kala_objects_sprite_Sprite;
player_Minion.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	lives: null
	,mask: null
	,collider: null
	,moveAlarm: null
	,dx: null
	,playerPos: null
	,shootAlarm: null
	,lightningAlarm: null
	,vspeed: null
	,hitDelayAlarm: null
	,revive: function() {
		kala_objects_sprite_Sprite.prototype.revive.call(this);
		var x = this.playerPos.x;
		var y = this.playerPos.y;
		var _this = this.position;
		_this.x = x;
		_this.y = y;
		this.lives = UpgradeData.minionStartingLives;
		this.moveAlarm = 0;
		this.shootAlarm = UpgradeData.shootDelay;
		this.lightningAlarm = 120;
		this.rotation.angle = 0;
		this.hitDelayAlarm = 0;
		this.vspeed = -10;
	}
	,update: function(elapsed) {
		if(this.lives == 0) {
			var _g = this;
			_g.position.y = _g.position.y + this.vspeed;
			this.vspeed += 1;
			var _g1 = this;
			_g1.rotation.angle = _g1.rotation.angle + 16;
			if(this.position.y > 495 + this.get_height()) {
				this.kill();
			}
			return;
		}
		if(this.hitDelayAlarm > 0) {
			this.hitDelayAlarm--;
		}
		if(this.shootAlarm > 0) {
			this.shootAlarm--;
		} else {
			this.shootAlarm = UpgradeData.minionShootDelay;
			var x = this.position.x;
			var bullet = player_Bullet.minionGroup.createAlive();
			bullet.position.x = x;
			bullet.position.y = 425;
			bullet.vspeed = -16;
		}
		if(this.lightningAlarm > 0) {
			this.lightningAlarm--;
		} else {
			this.lightningAlarm = 120;
			var chance = UpgradeData.minionLightningChance;
			if(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,100) < chance) {
				var x1 = this.position.x;
				var lightning = player_Lightning.group.createAlive();
				lightning.position.x = x1;
				lightning.scale.x = 0;
				var _this = lightning.tween;
				var target = null;
				var ease = null;
				if(target == null) {
					target = _this.object;
				}
				if(ease == null) {
					ease = kala_behaviors_tween_Ease.linear;
				}
				var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
				_this1.nodes.push(kala_behaviors_tween_TweenNode.WAIT(2));
				_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
					var _this2 = G.sfxGroup;
					var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.lightning,false),_this2,false);
					channel._volume = 0.5;
					channel.channel.set_volume(_this2.muted?0:0.5 * _this2._volume);
					_this2.channels.push(channel);
				}));
				_this1.manager._tweens.push(_this1);
				_this1.nextNode();
				var _this3 = lightning.tween;
				var target1 = null;
				var ease1 = null;
				if(target1 == null) {
					target1 = _this3.object;
				}
				if(ease1 == null) {
					ease1 = kala_behaviors_tween_Ease.linear;
				}
				var _this4 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this3,null,target1,ease1,null);
				var vars = { x : (kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1) * 0.4};
				var task = kala_behaviors_tween_TweenTask.create();
				task.init(lightning.scale,vars,20,kala_behaviors_tween_Ease.elasticOut,null);
				task.backwardEase = null;
				_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
				_this4.nodes.push(kala_behaviors_tween_TweenNode.WAIT(10));
				var task1 = kala_behaviors_tween_TweenTask.create();
				task1.init(lightning.scale,{ x : 0},30,kala_behaviors_tween_Ease.elasticInOut,null);
				task1.backwardEase = null;
				_this4.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
				_this4.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
					lightning.kill();
				}));
				_this4.manager._tweens.push(_this4);
				_this4.nextNode();
			}
		}
		if(Math.abs(this.dx - this.playerPos.x) > 150) {
			this.dx = Math.max(0,Math.min(700,this.playerPos.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-150,150)));
		} else if(this.moveAlarm > 0) {
			this.moveAlarm--;
		} else {
			this.moveAlarm = kala_math__$Random_Random_$Impl_$.instance.GetIn(100,200);
			this.dx = Math.max(0,Math.min(700,this.playerPos.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-150,150)));
		}
		if(this.position.x == this.dx) {
			this.animation.play("stand");
		} else {
			this.animation.play("run");
			var distance = this.position.x - this.dx;
			var speed = 2 + Math.abs(distance) / 40;
			if(distance > speed) {
				var _g2 = this;
				_g2.position.x = _g2.position.x - speed;
				this.scale.x = -1;
			} else if(distance < -speed) {
				var _g3 = this;
				_g3.position.x = _g3.position.x + speed;
				this.scale.x = 1;
			} else {
				this.position.x = this.dx;
			}
		}
		if(this.position.y < 430) {
			var _g4 = this;
			_g4.position.y = _g4.position.y + 5;
		}
	}
	,getHit: function() {
		if(this.hitDelayAlarm > 0) {
			return;
		}
		this.hitDelayAlarm = 30;
		this.lives--;
	}
	,move: function() {
		this.dx = Math.max(0,Math.min(700,this.playerPos.x + kala_math__$Random_Random_$Impl_$.instance.GetIn(-150,150)));
	}
	,__class__: player_Minion
});
var player_Web = function() {
	kala_objects_sprite_Sprite.call(this);
	this.loadSpriteData(R.playerWebShooting,null,"shooting");
	this.loadSpriteData(R.playerWebSpreading,null,"spreading");
	this.tween = new kala_behaviors_tween_Tween(this);
	this.collider = new kala_behaviors_collision_basic_Collider(this);
	var x = this.get_width() / 2 - 10;
	var y = this.get_height() / 2 - 30;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this = circle.position;
	_this.x = x;
	_this.y = y;
	circle.radius = 140;
	this.collider._shapes.push(circle);
	this.mask = circle;
};
$hxClasses["player.Web"] = player_Web;
player_Web.__name__ = ["player","Web"];
player_Web.shoot = function(x) {
	var web = player_Web.group.createAlive();
	web.spreading = false;
	web.animation.play("shooting");
	var _this = web.scale;
	var originX = web.get_width() / 2;
	var originY = web.get_height();
	_this.x = 0;
	_this.y = 0;
	_this.ox = originX;
	_this.oy = originY;
	web.position.ox = web.get_width() / 2;
	web.position.x = x + 10;
	web.opacity = 1;
	web.mask.active = false;
	var _this1 = web.tween;
	var target = null;
	var ease = null;
	if(target == null) {
		target = _this1.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this2 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this1,null,target,ease,null);
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(web.scale,{ x : 1.2, y : 1},8,kala_behaviors_tween_Ease.quartInOut,null);
	task.backwardEase = null;
	_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	_this2.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
		web.spreading = true;
		web.animation.play("spreading");
		web.position.ox = web.get_width() / 2;
		var _this3 = web.scale;
		var originX1 = web.get_width() / 2 - 15;
		var originY1 = web.get_height() / 2;
		_this3.x = 0;
		_this3.y = 0;
		_this3.ox = originX1;
		_this3.oy = originY1;
		web.mask.active = true;
	}));
	var vars = { x : kala_math__$Random_Random_$Impl_$.instance.GetIn(0,1) == 0?-1:1, y : 1};
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(web.scale,vars,15,kala_behaviors_tween_Ease.elasticOut,null);
	task1.backwardEase = null;
	_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	_this2.nodes.push(kala_behaviors_tween_TweenNode.WAIT(UpgradeData.webDuration));
	var task2 = kala_behaviors_tween_TweenTask.create();
	task2.init(web,{ opacity : 0},60,kala_behaviors_tween_Ease.sineInOut,null);
	task2.backwardEase = null;
	_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
	_this2.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
		web.kill();
	}));
	_this2.manager._tweens.push(_this2);
	_this2.nextNode();
};
player_Web.__super__ = kala_objects_sprite_Sprite;
player_Web.prototype = $extend(kala_objects_sprite_Sprite.prototype,{
	collider: null
	,mask: null
	,tween: null
	,spreading: null
	,update: function(elapsed) {
		if(this.spreading && this.opacity > 0.15) {
			var tmp = HxOverrides.iter(states_PlayState.instance.enemyGroup.members);
			while(tmp.hasNext()) {
				var enemy = tmp.next();
				if(!(!enemy.sprite.alive || !enemy.collider.available)) {
					if(this.mask.testCircle(enemy.mask)) {
						enemy.timeScale = 1.3 - this.opacity;
					}
				}
			}
			var tmp1 = HxOverrides.iter(enemies_EnemyB.childGroup.members);
			while(tmp1.hasNext()) {
				var enemy1 = tmp1.next();
				if(!(!enemy1.sprite.alive || !enemy1.collider.available)) {
					if(this.mask.testCircle(enemy1.mask)) {
						enemy1.timeScale = 1.3 - this.opacity;
					}
				}
			}
			var tmp2 = HxOverrides.iter(enemies_EnemyD.childGroup.members);
			while(tmp2.hasNext()) {
				var enemy2 = tmp2.next();
				if(!(!enemy2.sprite.alive || !enemy2.collider.available)) {
					if(this.mask.testCircle(enemy2.mask)) {
						enemy2.timeScale = 1.3 - this.opacity;
					}
				}
			}
		}
	}
	,kill: function() {
		kala_objects_sprite_Sprite.prototype.kill.call(this);
		var _this = this.tween;
		while(_this._tweens.length > 0) _this._tweens.pop().cancel();
	}
	,checkEnemy: function(enemy) {
		if(!enemy.sprite.alive || !enemy.collider.available) {
			return;
		}
		if(this.mask.testCircle(enemy.mask)) {
			enemy.timeScale = 1.3 - this.opacity;
		}
	}
	,__class__: player_Web
});
var states_CreditState = function() {
	var _gthis = this;
	kala_objects_group_Group.call(this);
	kala_Kala.world.antialiasing = true;
	this.background = new kala_objects_sprite_Sprite(R.images.background_blur);
	this.add(this.background);
	this.onFirstFrame._callbacks.push(new kala_Callback($bind(this,this.onStartHandle)));
	this.backButton = new kala_objects_sprite_BasicButtonSprite();
	this.backButton.loadSpriteData(R.sheets.sprite_sheet_2.get("back_button.png",R.images.sprite_sheet_2));
	this.backButton.position.x = 700;
	this.backButton.position.y = 7;
	this.backButton.opacity = 0.6;
	this.backButton.active = false;
	var _this = this.backButton.collider;
	var width = _this.object.get_width();
	var height = _this.object.get_height();
	var rect = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
	rect.reset();
	var _this1 = rect.position;
	_this1.x = 0;
	_this1.y = 0;
	rect.width = width;
	rect.height = height;
	_this._shapes.push(rect);
	var _this2 = rect.position;
	var x = (_this.object.get_width() - rect.width) / 2;
	var y = (_this.object.get_height() - rect.height) / 2;
	_this2.x = x;
	_this2.y = y;
	this.backButton.onOver._callbacks.push(new kala_Callback(function(_) {
		_gthis.backButton.opacity = 1;
	}));
	this.backButton.onOut._callbacks.push(new kala_Callback(function(_1) {
		_gthis.backButton.opacity = 0.6;
	}));
	this.backButton.onPush._callbacks.push(new kala_Callback(function(_2,_3) {
		_gthis.close();
	}));
	this.add(this.backButton);
	this.animatedTexts = [];
	var letterWidth = R.fonts.SpaceMono_Bold.width(40,"a");
	var letterWidthPlusSpacing = letterWidth + 2;
	var x1;
	var y1;
	this.animatedTexts.push(new states_AnimatedText(40,80,"MUSIC:"));
	x1 = this.animatedTexts[0].xx + 40;
	y1 = this.animatedTexts[0].yy + 30;
	this.animatedTexts.push(new states_AnimatedText(x1,y1,"Dissonant Waltz",null,new kala_util_types_Pair(-663885,-65536),new kala_util_types_Pair(0,"Dissonant Waltz".length),new kala_math_Rect(x1 - 10,y1 - 14,letterWidthPlusSpacing * "Dissonant Waltz".length - 2,30),"http://opengameart.org/content/dissonant-waltz"));
	x1 = this.animatedTexts[1].xx + 40;
	y1 = this.animatedTexts[1].yy + 30;
	this.animatedTexts.push(new states_AnimatedText(x1,y1,"by Yubatake",null,new kala_util_types_Pair(-8388652,-32944),new kala_util_types_Pair(3,"by Yubatake".length),new kala_math_Rect(x1 - 10 + (letterWidth + 3) * 3,y1 - 14,letterWidthPlusSpacing * ("by Yubatake".length - 3) - 2,30),"http://opengameart.org/users/yubatake"));
	this.animatedTexts.push(new states_AnimatedText(340,this.animatedTexts[2].yy + 50,"SOUND EFFECTS BY:",-1));
	x1 = this.animatedTexts[3].xx - 10;
	y1 = this.animatedTexts[3].yy + 30;
	this.animatedTexts.push(new states_AnimatedText(x1,y1,"Blender Foundation",-1,new kala_util_types_Pair(-2051841,-13500573),new kala_util_types_Pair(0,"Blender Foundation".length),new kala_math_Rect(x1 - 10,y1 - 14,letterWidthPlusSpacing * "Blender Foundation".length - 2,30),"https://apricot.blender.org/"));
	this.animatedTexts.push(new states_AnimatedText(this.animatedTexts[0].xx,this.animatedTexts[4].yy + 50,"ARTIST:"));
	x1 = this.animatedTexts[5].xx + 40;
	y1 = this.animatedTexts[5].yy + 30;
	this.animatedTexts.push(new states_AnimatedText(x1,y1,"Dinh Quoc Nam",null,new kala_util_types_Pair(-43691,-1187495),new kala_util_types_Pair(0,"Dinh Quoc Nam".length),new kala_math_Rect(x1 - 10,y1 - 14,letterWidthPlusSpacing * "Dinh Quoc Nam".length - 2,30),"https://twitter.com/DINHQUOCNAM"));
	this.animatedTexts.push(new states_AnimatedText(this.animatedTexts[3].xx,this.animatedTexts[6].yy + 50,"PROGRAMMER:",-1));
	x1 = this.animatedTexts[7].xx + 40;
	y1 = this.animatedTexts[7].yy + 30;
	this.animatedTexts.push(new states_AnimatedText(x1,y1,"Nguyen Phuc Sinh",-1,new kala_util_types_Pair(-13970177,-43521),new kala_util_types_Pair(0,"Nguyen Phuc Sinh".length),new kala_math_Rect(x1 - 10,y1 - 14,letterWidthPlusSpacing * "Nguyen Phuc Sinh".length - 2,30),"https://twitter.com/melon404"));
	var _g = 0;
	var _g1 = this.animatedTexts;
	while(_g < _g1.length) {
		var text = _g1[_g];
		++_g;
		this.add(text);
	}
	this.licenseText1 = new kala_objects_text_BasicText("The creditted music and sound effects are available under",null,20);
	this.licenseText1.position.y = 495 - this.licenseText1.get_height() * 2 - 16;
	this.add(this.licenseText1);
	this.licenseText2 = new kala_objects_text_BasicText("Creative Commons Attribution 3.0 Unported license",null,20);
	this.licenseText2.color = -2448096;
	this.licenseText2.position.y = this.licenseText1.position.y + this.licenseText1.get_height() + 4;
	this.add(this.licenseText2);
	var buttonBehavior = new kala_behaviors_input_BasicButtonInteraction(this.licenseText2);
	var _this3 = buttonBehavior.collider;
	var width1 = _this3.object.get_width();
	var height1 = _this3.object.get_height();
	var rect1 = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
	rect1.reset();
	var _this4 = rect1.position;
	_this4.x = 0;
	_this4.y = 0;
	rect1.width = width1;
	rect1.height = height1;
	_this3._shapes.push(rect1);
	var _this5 = rect1.position;
	var x2 = (_this3.object.get_width() - rect1.width) / 2;
	var y2 = (_this3.object.get_height() - rect1.height) / 2;
	_this5.x = x2;
	_this5.y = y2;
	buttonBehavior.onOver._callbacks.push(new kala_Callback(function(_4) {
		_gthis.licenseText2.color = -16744449;
	}));
	buttonBehavior.onOut._callbacks.push(new kala_Callback(function(_5) {
		_gthis.licenseText2.color = -2448096;
	}));
	buttonBehavior.onRelease._callbacks.push(new kala_Callback(function(_6,_7) {
		window.open("http://creativecommons.org/licenses/by/3.0/","_blank");
	}));
	this.tween = new kala_behaviors_tween_Tween(this);
};
$hxClasses["states.CreditState"] = states_CreditState;
states_CreditState.__name__ = ["states","CreditState"];
states_CreditState.__super__ = kala_objects_group_Group;
states_CreditState.prototype = $extend(kala_objects_group_Group.prototype,{
	background: null
	,backButton: null
	,animatedTexts: null
	,licenseText1: null
	,licenseText2: null
	,tween: null
	,onStartHandle: function(_) {
		var _gthis = this;
		this.licenseText1.position.x = this.licenseText2.position.x = 700;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var vars = { x : 700 - this.backButton.get_width() - 5};
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.backButton,vars,40,kala_behaviors_tween_Ease.sineOut,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var vars1 = { x : (700 - this.licenseText1.get_width()) / 2};
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.licenseText1,vars1,80,kala_behaviors_tween_Ease.backOut,null);
		task1.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		var vars2 = { x : (700 - this.licenseText2.get_width()) / 2};
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(this.licenseText2,vars2,60,kala_behaviors_tween_Ease.backOut,null);
		task2.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.backButton.active = true;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
		var _g = 0;
		var _g1 = this.animatedTexts;
		while(_g < _g1.length) {
			var text = _g1[_g];
			++_g;
			text.show();
		}
	}
	,close: function() {
		var _g = 0;
		var _g1 = this.animatedTexts;
		while(_g < _g1.length) {
			var text = _g1[_g];
			++_g;
			text.hide();
		}
		this.backButton.active = false;
		this.backButton.opacity = 0.6;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.backButton,{ x : 700},40,kala_behaviors_tween_Ease.sineOut,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var vars = { x : -this.licenseText1.get_width()};
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.licenseText1,vars,80,kala_behaviors_tween_Ease.backIn,null);
		task1.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		var vars1 = { x : -this.licenseText1.get_width()};
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(this.licenseText2,vars1,60,kala_behaviors_tween_Ease.backIn,null);
		task2.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			var state = states_MainMenuState.instance;
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
	}
	,__class__: states_CreditState
});
var states_AnimatedText = function(x,y,text,rotSide,colors,coloredRange,rect,url) {
	if(rotSide == null) {
		rotSide = 1;
	}
	kala_objects_group_Group.call(this);
	this.xx = x;
	this.yy = y;
	this.text = text;
	this.tween = new kala_behaviors_tween_Tween(this);
	var t;
	var pt;
	var _g1 = 0;
	var _g = text.length;
	while(_g1 < _g) {
		var i = _g1++;
		t = new kala_objects_text_BasicText(text.charAt(i),R.fonts.SpaceMono_Bold,40);
		t.data = { y : y};
		if(i == 0) {
			t.data.x = x;
		} else {
			pt = this.members[i - 1];
			t.data.x = pt.data.x + pt.get_width() + 2;
		}
		var _this = t.rotation;
		var pivotX = t.get_width() / 2;
		var pivotY = t.get_height() / 2;
		_this.px = pivotX;
		_this.py = pivotY;
		var _this1 = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this1.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this2 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this1,null,target,ease,null);
		var timeline = kala_behaviors_tween_TweenTimeline.pool.get();
		timeline.init(_this2.manager,_this2,null,null,null);
		timeline.loopsLeft = 0 - 1;
		_this2.nodes.push(kala_behaviors_tween_TweenNode.CHILD_TIMELINE(timeline));
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(t,{ angle : 20 * rotSide},80,kala_behaviors_tween_Ease.sineInOut,null);
		task.backwardEase = null;
		timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(t,{ angle : -20 * rotSide},80,kala_behaviors_tween_Ease.sineInOut,null);
		task1.backwardEase = null;
		timeline.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		var _this3 = timeline.parent;
		_this3.manager._tweens.push(_this3);
		_this3.nextNode();
		this.add(t);
	}
	if(colors != null) {
		this.url = url;
		this.colors = colors;
		this.coloredRange = coloredRange;
		this.button = new kala_objects_sprite_BasicButtonSprite(R.images.invisible_pixel);
		var x1 = rect.x;
		var y1 = rect.y;
		var width = rect.width;
		var height = rect.height;
		var rect1 = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
		rect1.reset();
		var _this4 = rect1.position;
		_this4.x = x1;
		_this4.y = y1;
		rect1.width = width;
		rect1.height = height;
		this.button.collider._shapes.push(rect1);
		this.button.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
		this.button.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
		this.button.onRelease._callbacks.push(new kala_Callback($bind(this,this.onReleaseHandle)));
		this.add(this.button);
	}
};
$hxClasses["states.AnimatedText"] = states_AnimatedText;
states_AnimatedText.__name__ = ["states","AnimatedText"];
states_AnimatedText.__super__ = kala_objects_group_Group;
states_AnimatedText.prototype = $extend(kala_objects_group_Group.prototype,{
	xx: null
	,yy: null
	,text: null
	,colors: null
	,coloredRange: null
	,tween: null
	,button: null
	,url: null
	,show: function() {
		var _gthis = this;
		var t;
		var _g1 = 0;
		var _g = this.text.length;
		while(_g1 < _g) {
			var i = _g1++;
			t = this.members[i];
			switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,3)) {
			case 0:
				var x = -t.get_height();
				var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,495 - t.get_height());
				var _this = t.position;
				var originX = t.get_width() / 2;
				var originY = t.get_height() / 2;
				_this.x = x;
				_this.y = y;
				_this.ox = originX;
				_this.oy = originY;
				break;
			case 1:
				var x1 = 700 + t.get_height();
				var y1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,495 - t.get_height());
				var _this1 = t.position;
				var originX1 = t.get_width() / 2;
				var originY1 = t.get_height() / 2;
				_this1.x = x1;
				_this1.y = y1;
				_this1.ox = originX1;
				_this1.oy = originY1;
				break;
			case 2:
				var x2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,700 - t.get_width());
				var y2 = -t.get_height();
				var _this2 = t.position;
				var originX2 = t.get_width() / 2;
				var originY2 = t.get_height() / 2;
				_this2.x = x2;
				_this2.y = y2;
				_this2.ox = originX2;
				_this2.oy = originY2;
				break;
			case 3:
				var x3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,700 - t.get_width());
				var y3 = 495 + t.get_height();
				var _this3 = t.position;
				var originX3 = t.get_width() / 2;
				var originY3 = t.get_height() / 2;
				_this3.x = x3;
				_this3.y = y3;
				_this3.ox = originX3;
				_this3.oy = originY3;
				break;
			}
			var _this4 = this.tween;
			var target = null;
			var ease = null;
			if(target == null) {
				target = _this4.object;
			}
			if(ease == null) {
				ease = kala_behaviors_tween_Ease.linear;
			}
			var _this5 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this4,null,target,ease,null);
			var vars = { x : t.data.x, y : t.data.y};
			var task = kala_behaviors_tween_TweenTask.create();
			task.init(t,vars,80,kala_behaviors_tween_Ease.sineOut,null);
			task.backwardEase = null;
			_this5.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
			if(i == 0 && this.colors != null) {
				_this5.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
					_gthis.button.active = true;
				}));
			}
			_this5.manager._tweens.push(_this5);
			_this5.nextNode();
		}
		if(this.colors != null) {
			this.button.active = false;
			var _g11 = this.coloredRange.a;
			var _g2 = this.coloredRange.b;
			while(_g11 < _g2) this.members[_g11++].color = this.colors.a;
		}
	}
	,hide: function() {
		if(this.button != null) {
			this.button.active = false;
		}
		var t;
		var p;
		var _g1 = 0;
		var _g = this.text.length;
		while(_g1 < _g) {
			t = this.members[_g1++];
			p = new kha_math_FastVector2(0,0);
			switch(kala_math__$Random_Random_$Impl_$.instance.GetIn(0,3)) {
			case 0:
				var x = -t.get_height();
				var y = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,495 - t.get_height());
				p.x = x;
				p.y = y;
				break;
			case 1:
				var x1 = 700 + t.get_height();
				var y1 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,495 - t.get_height());
				p.x = x1;
				p.y = y1;
				break;
			case 2:
				var x2 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,700 - t.get_width());
				var y2 = -t.get_height();
				p.x = x2;
				p.y = y2;
				break;
			case 3:
				var x3 = kala_math__$Random_Random_$Impl_$.instance.GetIn(0,700 - t.get_width());
				var y3 = 495 + t.get_height();
				p.x = x3;
				p.y = y3;
				break;
			}
			var _this = this.tween;
			var target = null;
			var ease = null;
			if(target == null) {
				target = _this.object;
			}
			if(ease == null) {
				ease = kala_behaviors_tween_Ease.linear;
			}
			var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
			var vars = { x : p.x, y : p.y};
			var task = kala_behaviors_tween_TweenTask.create();
			task.init(t,vars,80,kala_behaviors_tween_Ease.sineOut,null);
			task.backwardEase = null;
			_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
			_this1.manager._tweens.push(_this1);
			_this1.nextNode();
		}
	}
	,onOutHandle: function(_) {
		var _g1 = this.coloredRange.a;
		var _g = this.coloredRange.b;
		while(_g1 < _g) this.members[_g1++].color = this.colors.a;
	}
	,onOverHandle: function(_) {
		var _g1 = this.coloredRange.a;
		var _g = this.coloredRange.b;
		while(_g1 < _g) this.members[_g1++].color = this.colors.b;
	}
	,onReleaseHandle: function(_,_1) {
		window.open(this.url,"_blank");
	}
	,__class__: states_AnimatedText
});
var states_MainMenuState = function() {
	kala_objects_group_Group.call(this);
	this.onFirstFrame._callbacks.push(new kala_Callback($bind(this,this.onStartHandle)));
	this.tween = new kala_behaviors_tween_Tween(this);
	this.background = new kala_objects_sprite_Sprite(R.images.background_blur);
	this.add(this.background);
	this.title = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_1.get("main_menu/title.png",R.images.sprite_sheet_1));
	this.title.position.y = -this.title.get_height();
	this.add(this.title);
	this.buttonsGroup = new kala_objects_group_Group(true);
	var _this = this.buttonsGroup.position;
	_this.x = 200.;
	_this.y = 495;
	this.buttonsGroup.active = false;
	this.add(this.buttonsGroup);
	this.playButton = new ui_Button("play",R.sheets.sprite_sheet_1.get("main_menu/play_button.png",R.images.sprite_sheet_1),true);
	var _this1 = this.playButton.mask.scale;
	_this1.x = 0.8;
	_this1.y = 0.9;
	_this1.ox = 0;
	_this1.oy = 0;
	this.playButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoveredHandle)));
	this.playButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.playButton.onRelease._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.buttonsGroup.add(this.playButton);
	this.helpButton = new ui_Button("help",R.sheets.sprite_sheet_1.get("main_menu/help_button.png",R.images.sprite_sheet_1),true);
	this.helpButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoveredHandle)));
	this.helpButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.helpButton.onRelease._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.buttonsGroup.add(this.helpButton);
	this.settingsButton = new ui_Button("settings",R.sheets.sprite_sheet_1.get("main_menu/settings_button.png",R.images.sprite_sheet_1),true);
	this.settingsButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoveredHandle)));
	this.settingsButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.settingsButton.onRelease._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.buttonsGroup.add(this.settingsButton);
	this.creditButton = new ui_Button("credit",R.sheets.sprite_sheet_1.get("main_menu/credit_button.png",R.images.sprite_sheet_1),true);
	var _this2 = this.creditButton.mask.scale;
	_this2.x = 0.9;
	_this2.y = 0.95;
	_this2.ox = 0;
	_this2.oy = 0;
	this.creditButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoveredHandle)));
	this.creditButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.creditButton.onRelease._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.buttonsGroup.add(this.creditButton);
	this.androidButton = new ui_Button("android",R.sheets.sprite_sheet_1.get("main_menu/android_badge.png",R.images.sprite_sheet_1),true);
	var _this3 = this.androidButton;
	_this3.scale.ox = _this3.rotation.px = _this3.get_width() / 2;
	_this3.scale.oy = _this3.rotation.py = _this3.get_height() / 2;
	this.androidButton.antialiasing = true;
	this.androidButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoveredHandle)));
	this.androidButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.androidButton.onRelease._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.buttonsGroup.add(this.androidButton);
	this.playButton.position.x = 0.;
	this.helpButton.position.x = 105.6;
	this.settingsButton.position.x = 211.2;
	this.creditButton.position.x = 320.;
	this.androidButton.position.x = 160.;
	this.androidButton.position.y = this.playButton.get_height() + 30;
	this.picker = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_1.get("main_menu/picker.png",R.images.sprite_sheet_1));
	var _this4 = this.picker;
	_this4.position.ox = _this4.scale.ox = _this4.rotation.px = _this4.get_width() / 2;
	_this4.position.oy = _this4.scale.oy = _this4.rotation.py = _this4.get_height() / 2;
	this.picker.visible = false;
	this.buttonsGroup.add(this.picker);
};
$hxClasses["states.MainMenuState"] = states_MainMenuState;
states_MainMenuState.__name__ = ["states","MainMenuState"];
states_MainMenuState.__super__ = kala_objects_group_Group;
states_MainMenuState.prototype = $extend(kala_objects_group_Group.prototype,{
	tween: null
	,background: null
	,title: null
	,buttonsGroup: null
	,playButton: null
	,helpButton: null
	,settingsButton: null
	,creditButton: null
	,androidButton: null
	,picker: null
	,onStartHandle: function(_) {
		var _gthis = this;
		kala_Kala.set_updateRate(60);
		var _this = this.tween;
		var target = kala_behaviors_tween_Ease.sineOut;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.title,{ y : 0},36,null,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.buttonsGroup,{ y : 280},36,null,null);
		task1.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.buttonsGroup.active = true;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
		G.audioButton.show();
	}
	,onButtonHoveredHandle: function(button) {
		if(button.data == "android") {
			return;
		}
		this.picker.visible = true;
		switch(button.data) {
		case "credit":
			var _this = this.picker;
			var x = this.creditButton.position.x - 6;
			var y = this.creditButton.position.y + 25;
			var _this1 = _this.position;
			_this1.x = x;
			_this1.y = y;
			break;
		case "help":
			var _this2 = this.picker;
			var x1 = this.helpButton.position.x;
			var y1 = this.helpButton.position.y + 21;
			var _this3 = _this2.position;
			_this3.x = x1;
			_this3.y = y1;
			break;
		case "play":
			var _this4 = this.picker;
			var x2 = this.playButton.position.x - 10;
			var y2 = this.playButton.position.y + 24;
			var _this5 = _this4.position;
			_this5.x = x2;
			_this5.y = y2;
			break;
		case "settings":
			var _this6 = this.picker;
			var x3 = this.settingsButton.position.x - 2;
			var y3 = this.settingsButton.position.y + 33;
			var _this7 = _this6.position;
			_this7.x = x3;
			_this7.y = y3;
			break;
		}
	}
	,onButtonOutHandle: function(button) {
		if(button.data == "android") {
			return;
		}
		this.picker.visible = false;
	}
	,onButtonReleaseHandle: function(button,_) {
		switch(button.data) {
		case "android":
			window.open("https://play.google.com/store/apps/details?id=me.haza.biodigit&hl=en","_blank");
			break;
		case "credit":
			this.openCredit();
			break;
		case "help":
			this.startTutorial();
			break;
		case "play":
			this.play();
			break;
		case "settings":
			this.openSettings();
			break;
		}
	}
	,play: function() {
		if(G.tutorialPassed) {
			this.close(function() {
				var state = states_UpgradeState.instance;
				kala_Kala.world.swap(G.state,state);
				G.state = state;
			});
		} else {
			this.startTutorial();
		}
	}
	,startTutorial: function() {
		UpgradeData.update([0,0,0,0,0,0,0,0,0,0]);
		states_PlayState.instance.tutorialState = 0;
		this.close(function() {
			var state = states_PlayState.instance;
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		});
	}
	,openSettings: function() {
		this.close(function() {
			var state = states_SettingMenuState.instance;
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		});
	}
	,openCredit: function() {
		this.close(function() {
			var state = states_CreditState.instance;
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		});
	}
	,close: function(cb) {
		this.buttonsGroup.active = false;
		this.picker.visible = false;
		var _this = this.tween;
		while(_this._tweens.length > 0) _this._tweens.pop().cancel();
		var _this1 = this.tween;
		var target = kala_behaviors_tween_Ease.sineOut;
		var ease = null;
		if(target == null) {
			target = _this1.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this2 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this1,null,target,ease,null);
		_this2.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var vars = { y : -this.title.get_height()};
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.title,vars,36,null,null);
		task.backwardEase = null;
		_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.buttonsGroup,{ x : 200., y : 495},36,null,null);
		task1.backwardEase = null;
		_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		_this2.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this2.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			cb();
		}));
		_this2.manager._tweens.push(_this2);
		_this2.nextNode();
	}
	,__class__: states_MainMenuState
});
var states_Preloader = function() {
	kala_objects_group_Group.call(this);
	this.loader = kala_asset_Assets.loader;
	this.loader.queue(kala_asset_AssetType.FONT,kha_Assets.fonts.Montserrat_BoldName,1,false).queue(kala_asset_AssetType.IMAGE,kha_Assets.images.background_blurName,1,false,true).queueAll().load($bind(this,this.process));
};
$hxClasses["states.Preloader"] = states_Preloader;
states_Preloader.__name__ = ["states","Preloader"];
states_Preloader.__super__ = kala_objects_group_Group;
states_Preloader.prototype = $extend(kala_objects_group_Group.prototype,{
	loader: null
	,background: null
	,text: null
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_group_Group.prototype.destroy.call(this,true);
		this.text = null;
		this.background = null;
	}
	,process: function(data,loadedAsset,nextAsset) {
		var loadedSize = this.loader.loadedSize;
		var percent = this.loader.percent;
		if(loadedSize > 0) {
			if(loadedSize == 1) {
				this.text = new kala_objects_text_Text("RANDOM TEXT TO GET HEIGHT",data,30,680,kala_objects_text_TextAlign.RIGHT);
				this.text.position.y = 490 - this.text.get_height();
				this.add(this.text);
			} else if(loadedSize == 2) {
				this.background = new kala_objects_sprite_Sprite(data);
				this.add(this.background,0);
			}
			this.text.set_text("LOADING... " + (percent * 100 | 0) + "%");
		}
		if(percent == 1) {
			this.startGame();
			return true;
		}
		return false;
	}
	,startGame: function() {
		var _gthis = this;
		this.text.set_text("Preparing resources...");
		R.init();
		R.uncompressSounds(function() {
			states_MainMenuState.instance = new states_MainMenuState();
			states_UpgradeState.instance = new states_UpgradeState();
			states_PlayState.instance = new states_PlayState();
			states_SettingMenuState.instance = new states_SettingMenuState();
			states_CreditState.instance = new states_CreditState();
			G.audioButton = new ui_AudioButton();
			kala_Kala.world.add(G.audioButton);
			var state = new states_SpringRollSplash();
			kala_Kala.world.swap(G.state,state);
			G.state = state;
			_gthis.destroy();
		});
	}
	,__class__: states_Preloader
});
var states_SettingMenuState = function() {
	var _gthis = this;
	kala_objects_group_Group.call(this);
	this.tween = new kala_behaviors_tween_Tween(this);
	this.onFirstFrame._callbacks.push(new kala_Callback($bind(this,this.onStartHandle)));
	this.background = new kala_objects_sprite_Sprite(R.images.background_blur);
	this.add(this.background);
	this.backButton = new kala_objects_sprite_ButtonSprite();
	this.backButton.loadSpriteData(R.sheets.sprite_sheet_1.get("settings_menu/back_button.png",R.images.sprite_sheet_1));
	var _this = this.backButton.collider;
	_this.addRect(0,0,_this.object.get_width(),_this.object.get_height());
	this.backButton.position.y = 7;
	this.backButton.data = { kind : "button", type : "back"};
	this.backButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
	this.backButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
	this.backButton.onPush._callbacks.push(new kala_Callback($bind(this,this.onPushHandle)));
	this.add(this.backButton);
	this.soundButton = new kala_objects_sprite_ButtonSprite();
	this.soundButton.loadSpriteData(R.sheets.sprite_sheet_1.get("settings_menu/sound_icon.png",R.images.sprite_sheet_1));
	var _this1 = this.soundButton;
	_this1.scale.ox = _this1.rotation.px = _this1.get_width() / 2;
	_this1.scale.oy = _this1.rotation.py = _this1.get_height() / 2;
	this.soundButton.position.y = 140;
	this.soundButton.data = { kind : "button", type : "sound"};
	var _this2 = this.soundButton.collider;
	var _this3 = _this2.addRect(0,0,_this2.object.get_width(),_this2.object.get_height()).scale;
	var originX = this.soundButton.get_width() / 2;
	var originY = this.soundButton.get_height() / 2;
	_this3.x = 0.8;
	_this3.y = 0.8;
	_this3.ox = originX;
	_this3.oy = originY;
	this.soundButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
	this.soundButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
	this.soundButton.onPush._callbacks.push(new kala_Callback($bind(this,this.onPushHandle)));
	this.add(this.soundButton);
	this.musicButton = new kala_objects_sprite_ButtonSprite();
	this.musicButton.loadSpriteData(R.sheets.sprite_sheet_1.get("settings_menu/music_icon.png",R.images.sprite_sheet_1));
	var _this4 = this.musicButton;
	_this4.scale.ox = _this4.rotation.px = _this4.get_width() / 2;
	_this4.scale.oy = _this4.rotation.py = _this4.get_height() / 2;
	this.musicButton.position.y = this.soundButton.position.y + this.soundButton.get_height();
	this.musicButton.data = { kind : "button", type : "music"};
	var _this5 = this.musicButton.collider;
	var _this6 = _this5.addRect(0,0,_this5.object.get_width(),_this5.object.get_height()).scale;
	var originY1 = this.musicButton.get_height() / 2;
	_this6.x = 1.06;
	_this6.y = 0.8;
	_this6.ox = -100;
	_this6.oy = originY1;
	this.musicButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
	this.musicButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
	this.musicButton.onPush._callbacks.push(new kala_Callback($bind(this,this.onPushHandle)));
	this.add(this.musicButton);
	var barSpriteData = R.sheets.sprite_sheet_1.get("settings_menu/volume_bar.png",R.images.sprite_sheet_1);
	this.soundBars = [];
	var bar;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		bar = new kala_objects_sprite_ButtonSprite();
		bar.loadSpriteData(barSpriteData);
		bar.scale.oy = bar.get_height() / 2;
		bar.position.x = this.soundButton.position.x + this.soundButton.get_width() + (2 + bar.get_width()) * i;
		bar.position.y = this.soundButton.position.y + 15;
		bar.data = { kind : "bar", type : "sound", id : i};
		var _this7 = bar.collider;
		_this7.addRect(0,0,_this7.object.get_width(),_this7.object.get_height());
		bar.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
		bar.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
		bar.onPush._callbacks.push(new kala_Callback($bind(this,this.onPushHandle)));
		this.soundBars.push(bar);
		this.add(bar);
	}
	this.musicBars = [];
	var bar1;
	var _g1 = 0;
	while(_g1 < 20) {
		var i1 = _g1++;
		bar1 = new kala_objects_sprite_ButtonSprite();
		bar1.loadSpriteData(barSpriteData);
		bar1.scale.oy = bar1.get_height() / 2;
		bar1.position.x = this.musicButton.position.x + this.soundButton.get_width() + (2 + bar1.get_width()) * i1;
		bar1.position.y = this.musicButton.position.y + 15;
		bar1.data = { kind : "bar", type : "music", id : i1};
		var _this8 = bar1.collider;
		_this8.addRect(0,0,_this8.object.get_width(),_this8.object.get_height());
		bar1.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
		bar1.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
		bar1.onPush._callbacks.push(new kala_Callback($bind(this,this.onPushHandle)));
		this.musicBars.push(bar1);
		this.add(bar1);
	}
	this.resetButton = new kala_objects_sprite_ButtonSprite();
	this.resetButton.loadSpriteData(R.sheets.sprite_sheet_1.get("settings_menu/reset_button.png",R.images.sprite_sheet_1));
	var _this9 = this.resetButton;
	_this9.scale.ox = _this9.rotation.px = _this9.get_width() / 2;
	_this9.scale.oy = _this9.rotation.py = _this9.get_height() / 2;
	var _this10 = this.resetButton.collider;
	_this10.addRect(0,0,_this10.object.get_width(),_this10.object.get_height());
	this.resetButton.position.x = 460;
	this.resetButton.data = { kind : "button", type : "reset"};
	this.resetButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
	this.resetButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
	this.resetButton.onPush._callbacks.push(new kala_Callback($bind(this,this.onPushHandle)));
	this.add(this.resetButton);
	this.resetConfirmationText = new kala_objects_text_Text("This will reset all your process.\nAre you sure you want to do this?",null,30,700);
	this.resetConfirmationText.position.y = 140;
	this.resetConfirmationText.textColor = -56798;
	this.resetConfirmationText.align = kala_objects_text_TextAlign.CENTER;
	this.resetConfirmationText.bgOpacity = 0.5;
	this.resetConfirmationText.bgColor = -16777216;
	var this1 = this.resetConfirmationText.padding;
	this1.x = 30;
	this1.y = 5;
	this.resetConfirmationText.kill();
	this.add(this.resetConfirmationText);
	this.resetYesText = new kala_objects_text_BasicText("YES",null,30);
	var _this11 = this.resetYesText.position;
	_this11.x = 220;
	_this11.y = 240;
	this.resetYesText.color = this.resetConfirmationText.textColor;
	var _this12 = this.resetYesText;
	_this12.scale.ox = _this12.rotation.px = _this12.get_width() / 2;
	_this12.scale.oy = _this12.rotation.py = _this12.get_height() / 2;
	this.resetYesText.kill();
	this.resetNoText = new kala_objects_text_BasicText("NO",null,30);
	var _this13 = this.resetNoText.position;
	_this13.x = 700 - this.resetNoText.get_width() - this.resetYesText.position.x;
	_this13.y = 240;
	this.resetNoText.color = -16711681;
	var _this14 = this.resetNoText;
	_this14.scale.ox = _this14.rotation.px = _this14.get_width() / 2;
	_this14.scale.oy = _this14.rotation.py = _this14.get_height() / 2;
	this.resetNoText.kill();
	var buttonBehavior = new kala_behaviors_input_ButtonInteraction(this.resetYesText);
	var _this15 = buttonBehavior.collider;
	_this15.addRect(0,0,_this15.object.get_width(),_this15.object.get_height());
	buttonBehavior.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverResetOptionText)));
	buttonBehavior.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutResetOptionText)));
	buttonBehavior.onRelease._callbacks.push(new kala_Callback(function(_,_1) {
		_gthis.closeResetConfirmation();
		Save.reset();
	}));
	var buttonBehavior1 = new kala_behaviors_input_ButtonInteraction(this.resetNoText);
	var _this16 = buttonBehavior1.collider;
	_this16.addRect(0,0,_this16.object.get_width(),_this16.object.get_height());
	buttonBehavior1.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverResetOptionText)));
	buttonBehavior1.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutResetOptionText)));
	buttonBehavior1.onRelease._callbacks.push(new kala_Callback(function(_2,_3) {
		_gthis.closeResetConfirmation();
	}));
	this.resetOptionsBG = new kala_objects_shapes_Rectangle(700,this.resetYesText.get_height() + 10);
	this.resetOptionsBG.fillOpacity = 0.5;
	this.resetOptionsBG.fillColor = -16777216;
	this.resetOptionsBG.position.y = this.resetYesText.position.y - 5;
	this.resetOptionsBG.kill();
	this.add(this.resetOptionsBG);
	this.add(this.resetYesText);
	this.add(this.resetNoText);
	this.backButton.visible = this.soundButton.visible = this.musicButton.visible = this.resetButton.visible = false;
	var _g2 = 0;
	var _g11 = this.soundBars;
	while(_g2 < _g11.length) {
		var bar2 = _g11[_g2];
		++_g2;
		bar2.visible = false;
	}
	var _g3 = 0;
	var _g12 = this.musicBars;
	while(_g3 < _g12.length) {
		var bar3 = _g12[_g3];
		++_g3;
		bar3.visible = false;
	}
};
$hxClasses["states.SettingMenuState"] = states_SettingMenuState;
states_SettingMenuState.__name__ = ["states","SettingMenuState"];
states_SettingMenuState.__super__ = kala_objects_group_Group;
states_SettingMenuState.prototype = $extend(kala_objects_group_Group.prototype,{
	tween: null
	,background: null
	,backButton: null
	,soundButton: null
	,musicButton: null
	,soundBars: null
	,musicBars: null
	,resetButton: null
	,resetConfirmationText: null
	,resetOptionsBG: null
	,resetYesText: null
	,resetNoText: null
	,barsActive: null
	,update: function(elapsed) {
		kala_objects_group_Group.prototype.update.call(this,elapsed);
		var _g1 = 0;
		var _g = this.soundBars.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.soundBars[i].position.x = this.soundButton.position.x + this.soundButton.get_width() + (2 + this.soundBars[i].get_width()) * i;
		}
		var _g11 = 0;
		var _g2 = this.musicBars.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.musicBars[i1].position.x = this.musicButton.position.x + this.soundButton.get_width() + (2 + this.musicBars[i1].get_width()) * i1;
		}
		if(!this.barsActive) {
			if(kha_SystemImpl.mobile && kala_input_Touch.touches.count == 0 || !kha_SystemImpl.mobile && kala_input_Mouse.ANY.justReleased) {
				this.barsActive = true;
			}
		}
	}
	,onStartHandle: function(_) {
		var _gthis = this;
		var w = this.soundBars[19].position.x + this.soundBars[0].get_width() - this.soundButton.position.x;
		var x = (700 - w) / 2;
		this.backButton.active = false;
		this.backButton.opacity = 0.7;
		this.backButton.position.x = 700;
		this.soundButton.position.x = -w;
		this.musicButton.position.x = 700;
		this.resetButton.position.y = 495;
		this.barsActive = true;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.WAIT(1));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.backButton.visible = _gthis.soundButton.visible = _gthis.musicButton.visible = _gthis.resetButton.visible = true;
			var _g = 0;
			var _g1 = _gthis.soundBars;
			while(_g < _g1.length) {
				var bar = _g1[_g];
				++_g;
				bar.visible = true;
			}
			var _g2 = 0;
			var _g11 = _gthis.musicBars;
			while(_g2 < _g11.length) {
				var bar1 = _g11[_g2];
				++_g2;
				bar1.visible = true;
			}
		}));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var vars = { x : 700 - this.backButton.get_width() - 7};
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.backButton,vars,30,kala_behaviors_tween_Ease.sineOut,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.soundButton,{ x : x - 10},30,kala_behaviors_tween_Ease.sineOut,null);
		task1.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(this.musicButton,{ x : x - 10},30,kala_behaviors_tween_Ease.sineOut,null);
		task2.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		var vars1 = { y : this.musicButton.position.y + this.musicButton.get_height()};
		var task3 = kala_behaviors_tween_TweenTask.create();
		task3.init(this.resetButton,vars1,30,kala_behaviors_tween_Ease.sineOut,null);
		task3.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_2) {
			_gthis.backButton.active = true;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
	}
	,onOverHandle: function(button) {
		var type = button.data.type;
		if(button.data.kind == "button") {
			if(button.data.type == "back") {
				button.opacity = 1;
			} else {
				var _this = button.scale;
				_this.x = 1.2;
				_this.y = 1.2;
				if(kha_SystemImpl.mobile || !kha_SystemImpl.mobile && kala_input_Mouse.ANY.duration > -1) {
					if(type == "sound") {
						G.set_soundVolume(G.soundVolume == 0?1:0);
					} else if(type == "music") {
						G.set_musicVolume(G.musicVolume == 0?1:0);
					}
				}
			}
		} else if(this.barsActive) {
			button.scale.y = 1.2;
			if(kha_SystemImpl.mobile || !kha_SystemImpl.mobile && kala_input_Mouse.ANY.duration > -1) {
				if(type == "sound") {
					G.set_soundVolume((button.data.id + 1) / 20);
				} else {
					G.set_musicVolume((button.data.id + 1) / 20);
				}
			}
		}
	}
	,onOutHandle: function(button) {
		if(button.data.type == "back") {
			button.opacity = 0.7;
		} else {
			var _this = button.scale;
			_this.x = 1;
			_this.y = 1;
		}
	}
	,onPushHandle: function(button,_) {
		var type = button.data.type;
		if(button.data.kind == "button") {
			if(type == "back") {
				this.backToMainMenu();
			} else if(type == "sound") {
				G.set_soundVolume(G.soundVolume == 0?1:0);
			} else if(type == "music") {
				G.set_musicVolume(G.musicVolume == 0?1:0);
			} else {
				this.openResetConfirmation();
			}
		} else if(type == "sound") {
			G.set_soundVolume((button.data.id + 1) / 20);
		} else if(type == "music") {
			G.set_musicVolume((button.data.id + 1) / 20);
		}
	}
	,onOverResetOptionText: function(behavior) {
		var _this = behavior.object.scale;
		_this.x = 1.2;
		_this.y = 1.2;
	}
	,onOutResetOptionText: function(behavior) {
		var _this = behavior.object.scale;
		_this.x = 1;
		_this.y = 1;
	}
	,openResetConfirmation: function() {
		this.backButton.alive = this.soundButton.alive = this.musicButton.alive = this.resetButton.alive = false;
		var _g = 0;
		var _g1 = this.soundBars;
		while(_g < _g1.length) {
			var bar = _g1[_g];
			++_g;
			bar.kill();
		}
		var _g2 = 0;
		var _g11 = this.musicBars;
		while(_g2 < _g11.length) {
			var bar1 = _g11[_g2];
			++_g2;
			bar1.kill();
		}
		this.resetConfirmationText.alive = this.resetOptionsBG.alive = this.resetYesText.alive = this.resetNoText.alive = true;
	}
	,closeResetConfirmation: function() {
		this.resetConfirmationText.alive = this.resetOptionsBG.alive = this.resetYesText.alive = this.resetNoText.alive = false;
		this.backButton.alive = this.soundButton.alive = this.musicButton.alive = this.resetButton.alive = true;
		var _g = 0;
		var _g1 = this.soundBars;
		while(_g < _g1.length) {
			var bar = _g1[_g];
			++_g;
			bar.revive();
		}
		var _g2 = 0;
		var _g11 = this.musicBars;
		while(_g2 < _g11.length) {
			var bar1 = _g11[_g2];
			++_g2;
			bar1.revive();
		}
		this.barsActive = false;
	}
	,backToMainMenu: function() {
		this.backButton.active = false;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.backButton,{ x : 700},30,kala_behaviors_tween_Ease.sineIn,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		var vars = { x : -this.soundBars[19].position.x + this.soundBars[0].get_width() - this.soundButton.position.x};
		var task1 = kala_behaviors_tween_TweenTask.create();
		task1.init(this.soundButton,vars,30,kala_behaviors_tween_Ease.sineIn,null);
		task1.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
		var task2 = kala_behaviors_tween_TweenTask.create();
		task2.init(this.musicButton,{ x : 700},30,kala_behaviors_tween_Ease.sineIn,null);
		task2.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
		var task3 = kala_behaviors_tween_TweenTask.create();
		task3.init(this.resetButton,{ y : 495},30,kala_behaviors_tween_Ease.sineIn,null);
		task3.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task3));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			var state = states_MainMenuState.instance;
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
		Save.save();
	}
	,__class__: states_SettingMenuState
});
var states_SpringRollSplash = function() {
	var _gthis = this;
	kala_objects_group_Group.call(this);
	this.background = new kala_objects_sprite_Sprite(R.images.background_blur);
	this.add(this.background);
	this.logo = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_1.get("springroll_logo.png",R.images.sprite_sheet_1));
	var _this = this.logo.position;
	var originX = this.logo.get_width() / 2;
	var originY = this.logo.get_height() / 2;
	_this.ox = originX;
	_this.oy = originY;
	_this.x = 350.;
	_this.y = 795;
	var _this1 = this.logo.rotation;
	var pivotX = this.logo.get_width() / 2;
	var pivotY = this.logo.get_height() / 2;
	_this1.px = pivotX;
	_this1.py = pivotY;
	this.logo.antialiasing = true;
	this.add(this.logo);
	var tween = new kala_behaviors_tween_Tween(this.logo);
	var target = null;
	var ease = null;
	if(target == null) {
		target = tween.object;
	}
	if(ease == null) {
		ease = kala_behaviors_tween_Ease.linear;
	}
	var _this2 = kala_behaviors_tween_TweenTimeline.pool.get().init(tween,null,target,ease,null);
	_this2.nodes.push(kala_behaviors_tween_TweenNode.START_BATCH);
	var task = kala_behaviors_tween_TweenTask.create();
	task.init(null,{ y : 217.5},40,kala_behaviors_tween_Ease.quadOut,null);
	task.backwardEase = null;
	_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
	var target1 = null;
	if(target1 == null) {
		target1 = _this2.get_target();
	}
	target1.rotation.angle = 180;
	var task1 = kala_behaviors_tween_TweenTask.create();
	task1.init(target1.rotation,{ angle : 360},90,kala_behaviors_tween_Ease.backOut,null);
	task1.backwardEase = null;
	_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task1));
	_this2.nodes.push(kala_behaviors_tween_TweenNode.END_BATCH);
	_this2.nodes.push(kala_behaviors_tween_TweenNode.WAIT(60));
	var vars = { x : -this.logo.get_width()};
	var task2 = kala_behaviors_tween_TweenTask.create();
	task2.init(null,vars,60,kala_behaviors_tween_Ease.backIn,null);
	task2.backwardEase = null;
	_this2.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task2));
	_this2.nodes.push(kala_behaviors_tween_TweenNode.WAIT(20));
	_this2.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
		states_MainMenuState.instance.onFirstFrame._callbacks.push(new kala_Callback($bind(_gthis,_gthis.onMainMenuStarted)));
		var state = states_MainMenuState.instance;
		kala_Kala.world.swap(G.state,state);
		G.state = state;
	}));
	_this2.manager._tweens.push(_this2);
	_this2.nextNode();
};
$hxClasses["states.SpringRollSplash"] = states_SpringRollSplash;
states_SpringRollSplash.__name__ = ["states","SpringRollSplash"];
states_SpringRollSplash.__super__ = kala_objects_group_Group;
states_SpringRollSplash.prototype = $extend(kala_objects_group_Group.prototype,{
	background: null
	,logo: null
	,destroy: function(destroyBehaviors) {
		if(destroyBehaviors == null) {
			destroyBehaviors = true;
		}
		kala_objects_group_Group.prototype.destroy.call(this,destroyBehaviors);
		this.background = null;
		this.logo = null;
	}
	,onMainMenuStarted: function(_) {
		G.bgmChannel = kala_audio_Audio.play(R.sounds.Dissonant_Waltz,1,true);
		states_MainMenuState.instance.onFirstFrame.remove($bind(this,this.onMainMenuStarted));
		G.init();
		Save.load();
		this.destroy();
	}
	,__class__: states_SpringRollSplash
});
var states_UpgradeState = function() {
	this.itemButtons = [];
	var _gthis = this;
	kala_objects_group_Group.call(this);
	this.antialiasing = true;
	this.background = new kala_objects_sprite_Sprite(R.images.background_blur);
	this.add(this.background);
	this.upgradeGroup = new kala_objects_group_Group(true);
	this.upgradeGroup.position.x = 700;
	this.add(this.upgradeGroup);
	this.gemIcon = new kala_objects_sprite_Sprite().loadSpriteData(R.sheets.sprite_sheet_2.get("crystal_icon.png"),R.images.sprite_sheet_2);
	this.gemIcon.position.x = 50;
	this.gemIcon.position.y = -5;
	this.upgradeGroup.add(this.gemIcon);
	this.moneyText = new kala_objects_text_BasicText(null,null,30);
	this.moneyText.position.x = this.gemIcon.position.x + this.gemIcon.get_width() - 10;
	this.moneyText.position.y = this.gemIcon.position.y + (this.gemIcon.get_height() - this.moneyText.get_height()) / 2;
	this.upgradeGroup.add(this.moneyText);
	this.startButton = new ui_Button("startButton",R.upgradeStartButton);
	this.startButton.position.x = 550;
	this.startButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoverHandle)));
	this.startButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.startButton.onPush._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.upgradeGroup.add(this.startButton);
	this.backButton = new ui_Button("backButton",R.upgradeBackButton);
	this.backButton.position.x = this.startButton.position.x - this.backButton.get_width() - 10;
	this.backButton.scale.ox = this.backButton.get_width();
	this.backButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoverHandle)));
	this.backButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.backButton.onPush._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.upgradeGroup.add(this.backButton);
	var itemX = 10;
	var itemY = 200;
	var space = -5.;
	var _g = 0;
	while(_g < 10) {
		var i = _g++;
		this.itemButtons[i] = new states_ItemButton(i);
		this.itemButtons[i].position.x = itemX;
		this.itemButtons[i].position.y = itemY;
		this.upgradeGroup.add(this.itemButtons[i]);
		itemX += 141 + space;
		if(i == 4) {
			itemY += 142 + space;
			itemX = 10;
		}
		this.itemButtons[i].data = i;
	}
	this.descriptionBG = new kala_objects_sprite_Sprite().loadSpriteData(R.upgradeDescBG);
	var _this = this.descriptionBG;
	var x = (700 - this.descriptionBG.get_width()) / 2;
	var tmp = this.startButton.get_height() + (this.itemButtons[0].position.y - this.startButton.get_height() - this.descriptionBG.get_height()) / 2;
	var _this1 = _this.position;
	_this1.x = x;
	_this1.y = tmp + 5;
	this.upgradeGroup.add(this.descriptionBG);
	this.upgradeButton = new ui_Button("upgradeButton",R.upgradeButton);
	var padding = (this.descriptionBG.get_height() - this.upgradeButton.get_height()) / 2;
	var _this2 = this.upgradeButton;
	var x1 = this.descriptionBG.position.x + padding;
	var y = this.descriptionBG.position.y + padding;
	var _this3 = _this2.position;
	_this3.x = x1;
	_this3.y = y;
	this.upgradeButton.onOver._callbacks.push(new kala_Callback($bind(this,this.onButtonHoverHandle)));
	this.upgradeButton.onOut._callbacks.push(new kala_Callback($bind(this,this.onButtonOutHandle)));
	this.upgradeButton.onPush._callbacks.push(new kala_Callback($bind(this,this.onButtonReleaseHandle)));
	this.upgradeGroup.add(this.upgradeButton);
	this.costText = new kala_objects_text_BasicText();
	this.costText.set_text("Cost: 1000");
	this.costText.position.x = this.upgradeButton.position.x + this.upgradeButton.get_width() + 20;
	this.costText.position.y = this.descriptionBG.position.y + 5;
	this.upgradeGroup.add(this.costText);
	this.levelText = new kala_objects_text_BasicText();
	this.levelText.position.y = this.costText.position.y;
	this.levelText.onTextChange._callbacks.push(new kala_Callback(function(_,_1) {
		_gthis.levelText.position.x = _gthis.descriptionBG.position.x + _gthis.descriptionBG.get_width() - _gthis.levelText.get_width() - 20;
	}));
	this.levelText.set_text("Level: 5/10");
	this.upgradeGroup.add(this.levelText);
	var xx = this.upgradeButton.position.x + this.upgradeButton.get_width();
	this.descriptionText = new kala_objects_text_Text(null,null,30,this.descriptionBG.position.x + this.descriptionBG.get_width() - xx,kala_objects_text_TextAlign.CENTER);
	this.descriptionText.padding.x = 20;
	var _this4 = this.descriptionText;
	var y1 = this.costText.position.y + 40;
	var _this5 = _this4.position;
	_this5.x = xx;
	_this5.y = y1;
	this.upgradeGroup.add(this.descriptionText);
	this.tween = new kala_behaviors_tween_Tween(this);
	this.onFirstFrame._callbacks.push(new kala_Callback($bind(this,this.onStartHandle)));
};
$hxClasses["states.UpgradeState"] = states_UpgradeState;
states_UpgradeState.__name__ = ["states","UpgradeState"];
states_UpgradeState.__super__ = kala_objects_group_Group;
states_UpgradeState.prototype = $extend(kala_objects_group_Group.prototype,{
	background: null
	,currentItem: null
	,itemButtons: null
	,upgradeButton: null
	,upgradeGroup: null
	,startButton: null
	,backButton: null
	,gemIcon: null
	,moneyText: null
	,descriptionBG: null
	,descriptionText: null
	,costText: null
	,levelText: null
	,tween: null
	,onStartHandle: function(_) {
		var _gthis = this;
		kala_Kala.set_updateRate(60);
		var _this = this.backButton.scale;
		_this.x = 1;
		_this.y = 1;
		var _this1 = this.startButton.scale;
		_this1.x = 1;
		_this1.y = 1;
		var _g = 0;
		var _g1 = this.itemButtons;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			var _this2 = item.scale;
			_this2.x = 0.8;
			_this2.y = 0.8;
			item.selected = false;
			item.onOutHandle(null);
		}
		this.set_currentItem(0);
		this.updateItems();
		this.upgradeButton.opacity = 0.75;
		var _this3 = this.itemButtons[0].scale;
		_this3.x = 1;
		_this3.y = 1;
		this.itemButtons[0].onReleaseHandle(null,0);
		this.upgradeGroup.active = false;
		var _this4 = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this4.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this5 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this4,null,target,ease,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.upgradeGroup,{ x : 0},80,kala_behaviors_tween_Ease.bounceOut,null);
		task.backwardEase = null;
		_this5.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this5.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_1) {
			_gthis.upgradeGroup.active = true;
		}));
		_this5.manager._tweens.push(_this5);
		_this5.nextNode();
		G.audioButton.hide();
	}
	,onButtonHoverHandle: function(button) {
		if(button.data == "upgradeButton") {
			button.opacity = this.itemButtons[this.currentItem].upgradable?1:0.75;
		} else {
			var _this = button.scale;
			_this.x = 1.2;
			_this.y = 1.2;
		}
	}
	,onButtonOutHandle: function(button) {
		if(button.data == "upgradeButton") {
			button.opacity = 0.75;
		} else {
			var _this = button.scale;
			_this.x = 1;
			_this.y = 1;
		}
	}
	,onButtonReleaseHandle: function(button,_) {
		switch(button.data) {
		case "backButton":
			this.backToMainMenu();
			break;
		case "startButton":
			this.startGame();
			break;
		case "upgradeButton":
			this.upgradeItem();
			break;
		}
	}
	,upgradeItem: function() {
		var _this = G.sfxGroup;
		var channel = new kala_audio_AudioChannel(kha_audio2_Audio1.play(R.sounds.upgrade,false),_this,false);
		channel._volume = 1;
		channel.channel.set_volume(_this.muted?0:_this._volume);
		_this.channels.push(channel);
		UpgradeData.upgrade(this.currentItem);
		this.set_currentItem(this.currentItem);
		this.updateItems();
	}
	,updateItems: function() {
		var _g = 0;
		while(_g < 10) {
			var i = _g++;
			var btn = this.itemButtons[i];
			if(UpgradeData.isUpgradable(i)) {
				btn.set_upgradable(true);
			} else {
				btn.set_upgradable(false);
				btn.opacity = btn.selected?0.75:0.5;
			}
		}
		this.upgradeButton.active = UpgradeData.isUpgradable(this.currentItem);
		this.upgradeButton.opacity = this.upgradeButton.active?1:0.75;
	}
	,startGame: function() {
		Save.save();
		UpgradeData.update();
		G.audioButton.show();
		this.upgradeGroup.active = false;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.upgradeGroup,{ x : -700},80,kala_behaviors_tween_Ease.backIn,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			var state = states_PlayState.instance;
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
		if(!G.tutorialPassed) {
			states_PlayState.instance.tutorialState = 0;
		} else {
			states_PlayState.instance.tutorialState = -1;
		}
	}
	,backToMainMenu: function() {
		Save.save();
		UpgradeData.update();
		this.upgradeGroup.active = false;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this.upgradeGroup,{ x : 700},80,kala_behaviors_tween_Ease.backIn,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			var state = states_MainMenuState.instance;
			kala_Kala.world.swap(G.state,state);
			G.state = state;
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
	}
	,set_currentItem: function(value) {
		if(UpgradeData.itemLevel[value] < UpgradeData.itemMaxLevel[value]) {
			this.costText.set_text("Cost: " + UpgradeData.getCost(value));
			this.levelText.set_text("Level: " + UpgradeData.itemLevel[value] + "/" + UpgradeData.itemMaxLevel[value]);
		} else {
			this.costText.set_text("");
			this.levelText.set_text("Level: MAX");
		}
		switch(value) {
		case 0:
			this.descriptionText.set_text("Increases your starting lives.");
			break;
		case 1:
			this.descriptionText.set_text("Increases your fire rate and number of bullets per shot.");
			break;
		case 2:
			this.descriptionText.set_text("Increases the duration of your webs.");
			break;
		case 3:
			this.descriptionText.set_text("Increases the power of lightning.");
			break;
		case 4:
			this.descriptionText.set_text("Increases the quantity of crystals dropped from enemies.");
			break;
		case 5:
			this.descriptionText.set_text("Increases the spawn rate of your children.");
			break;
		case 6:
			this.descriptionText.set_text("Helps your children withstand more attack");
			break;
		case 7:
			this.descriptionText.set_text("Increases the fire rate of your children.");
			break;
		case 8:
			this.descriptionText.set_text("Increases chance of your children casting lightning.");
			break;
		case 9:
			this.descriptionText.set_text("Increases the radius to attract crystals.");
			break;
		}
		return this.currentItem = value;
	}
	,__class__: states_UpgradeState
	,__properties__: $extend(kala_objects_group_Group.prototype.__properties__,{set_currentItem:"set_currentItem"})
});
var ui_Button = function(data,spriteData,centerX,centerY) {
	if(centerY == null) {
		centerY = false;
	}
	if(centerX == null) {
		centerX = false;
	}
	kala_objects_sprite_ButtonSprite.call(this);
	this.data = data;
	this.loadSpriteData(spriteData);
	if(centerX) {
		this.position.ox = this.scale.ox = this.rotation.px = this.get_width() / 2;
	}
	if(centerY) {
		this.position.oy = this.scale.oy = this.rotation.py = this.get_height() / 2;
	}
	var _this = this.collider;
	this.mask = _this.addRect(0,0,_this.object.get_width(),_this.object.get_height());
};
$hxClasses["ui.Button"] = ui_Button;
ui_Button.__name__ = ["ui","Button"];
ui_Button.__super__ = kala_objects_sprite_ButtonSprite;
ui_Button.prototype = $extend(kala_objects_sprite_ButtonSprite.prototype,{
	mask: null
	,__class__: ui_Button
});
var states_ItemButton = function(id) {
	this.upgradable = false;
	this.selected = false;
	var o = R;
	var field = "upgradeItem" + id;
	var tmp;
	var tmp1;
	if(o == null) {
		tmp1 = null;
	} else {
		var tmp2;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp2 = tmp;
		} else {
			tmp2 = false;
		}
		if(tmp2) {
			tmp1 = o[tmp]();
		} else {
			tmp1 = o[field];
		}
	}
	ui_Button.call(this,id,tmp1);
	var _this = this.scale;
	var originX = this.get_width() / 2;
	var originY = this.get_height() / 2;
	_this.x = 0.8;
	_this.y = 0.8;
	_this.ox = originX;
	_this.oy = originY;
	this.opacity = 0.75;
	this.onOver._callbacks.push(new kala_Callback($bind(this,this.onHoverHandle)));
	this.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
	this.onPush._callbacks.push(new kala_Callback($bind(this,this.onReleaseHandle)));
};
$hxClasses["states.ItemButton"] = states_ItemButton;
states_ItemButton.__name__ = ["states","ItemButton"];
states_ItemButton.__super__ = ui_Button;
states_ItemButton.prototype = $extend(ui_Button.prototype,{
	selected: null
	,upgradable: null
	,update: function(elapsed) {
		ui_Button.prototype.update.call(this,elapsed);
		if(this.selected) {
			if(this.scale.x < 1) {
				this.scale.x = this.scale.y += 0.025;
			}
		} else if(this.scale.x > 0.8) {
			this.scale.x = this.scale.y -= 0.025;
		}
	}
	,onReleaseHandle: function(_,_1) {
		states_UpgradeState.instance.set_currentItem(this.data);
		states_UpgradeState.instance.upgradeButton.active = this.upgradable;
		var _g = 0;
		var _g1 = states_UpgradeState.instance.itemButtons;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			item.selected = false;
		}
		this.selected = true;
	}
	,onHoverHandle: function(_) {
		this.opacity = 1;
	}
	,onOutHandle: function(_) {
		this.opacity = 0.75;
	}
	,set_upgradable: function(value) {
		if(value) {
			this.color = -1;
		} else {
			this.color = -56798;
		}
		return this.upgradable = value;
	}
	,__class__: states_ItemButton
	,__properties__: $extend(ui_Button.prototype.__properties__,{set_upgradable:"set_upgradable"})
});
var ui_AudioButton = function() {
	kala_objects_sprite_BasicButtonSprite.call(this);
	this.loadSpriteData(R.sheets.sprite_sheet_1.get("audio_button/",R.images.sprite_sheet_1),null,"_");
	this.animation.play("_");
	var _this = this.animation;
	var _this1 = _this.object.frameRect;
	_this.frame = 1;
	var rect = _this.anim.frames[1];
	_this1.x = rect.x;
	_this1.y = rect.y;
	_this1.width = rect.width;
	_this1.height = rect.height;
	var _this2 = this.collider;
	var width = _this2.object.get_width();
	var height = _this2.object.get_height();
	var rect1 = kala_behaviors_collision_basic_shapes_CollisionRectangle.pool.get();
	rect1.reset();
	var _this3 = rect1.position;
	_this3.x = 0;
	_this3.y = 0;
	rect1.width = width;
	rect1.height = height;
	_this2._shapes.push(rect1);
	var _this4 = rect1.position;
	var x = (_this2.object.get_width() - rect1.width) / 2;
	var y = (_this2.object.get_height() - rect1.height) / 2;
	_this4.x = x;
	_this4.y = y;
	this.onOut._callbacks.push(new kala_Callback($bind(this,this.onOutHandle)));
	this.onOver._callbacks.push(new kala_Callback($bind(this,this.onOverHandle)));
	this.onPush._callbacks.push(new kala_Callback($bind(this,this.onPushHandle)));
	this.kill();
	this.position.x = -this.get_width();
	this.position.y = 7;
	this.tween = new kala_behaviors_tween_Tween(this);
};
$hxClasses["ui.AudioButton"] = ui_AudioButton;
ui_AudioButton.__name__ = ["ui","AudioButton"];
ui_AudioButton.__super__ = kala_objects_sprite_BasicButtonSprite;
ui_AudioButton.prototype = $extend(kala_objects_sprite_BasicButtonSprite.prototype,{
	tween: null
	,show: function() {
		if(this.alive) {
			return;
		}
		this.revive();
		this.opacity = 0.6;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this,{ x : 5},15,kala_behaviors_tween_Ease.sineOut,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
	}
	,hide: function() {
		var _gthis = this;
		var _this = this.tween;
		var target = null;
		var ease = null;
		if(target == null) {
			target = _this.object;
		}
		if(ease == null) {
			ease = kala_behaviors_tween_Ease.linear;
		}
		var _this1 = kala_behaviors_tween_TweenTimeline.pool.get().init(_this,null,target,ease,null);
		var vars = { x : -this.get_width()};
		var task = kala_behaviors_tween_TweenTask.create();
		task.init(this,vars,15,kala_behaviors_tween_Ease.sineIn,null);
		task.backwardEase = null;
		_this1.nodes.push(kala_behaviors_tween_TweenNode.TWEEN(task));
		_this1.nodes.push(kala_behaviors_tween_TweenNode.CALL(function(_) {
			_gthis.kill();
		}));
		_this1.manager._tweens.push(_this1);
		_this1.nextNode();
	}
	,onOutHandle: function(_) {
		this.opacity = 0.6;
	}
	,onOverHandle: function(_) {
		this.opacity = 1;
	}
	,onPushHandle: function(_,_1) {
		G.set_audioMuted(!G.audioMuted);
		Save.save();
	}
	,__class__: ui_AudioButton
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
G.width = 700;
G.height = 495;
G.halfWidth = 350.;
G.sfxGroup = new kala_audio_AudioGroup();
R.uncompressedSoundCount = 0;
UpgradeData.itemMaxLevel = [99,5,10,10,10,10,4,10,10,3];
enemies_Enemy.deathEffectTotalFrames = 15;
enemies_Boss.lightningGroup = new kala_objects_group_Group(false,function() {
	return new enemies_Lightning();
});
kala_behaviors_collision_basic_shapes_CollisionCircle.pool = new kala_util_pool_Pool(function() {
	return new kala_behaviors_collision_basic_shapes_CollisionCircle();
});
enemies_EnemyA.baseHSpeed = 2;
enemies_EnemyA.bouncingSpeed = -12;
enemies_EnemyA.vaccel = 0.2;
enemies_EnemyA.elasticity = 0.02;
enemies_EnemyA.pool = new kala_util_pool_Pool(function() {
	var enemy = new enemies_EnemyA();
	states_PlayState.instance.enemyGroup.add(enemy);
	return enemy;
});
kala_behaviors_tween_Ease.PI2 = Math.PI / 2;
kala_behaviors_tween_Ease.EL = 2 * Math.PI / .45;
kala_behaviors_tween_Ease.B1 = 0.36363636363636365;
kala_behaviors_tween_Ease.B2 = 0.72727272727272729;
kala_behaviors_tween_Ease.B3 = 0.54545454545454541;
kala_behaviors_tween_Ease.B4 = 0.90909090909090906;
kala_behaviors_tween_Ease.B5 = 0.81818181818181823;
kala_behaviors_tween_Ease.B6 = 0.95454545454545459;
kala_behaviors_tween_Ease.ELASTIC_AMPLITUDE = 1;
kala_behaviors_tween_Ease.ELASTIC_PERIOD = 0.4;
kala_behaviors_tween_TweenTimeline.pool = new kala_util_pool_Pool(kala_behaviors_tween_TweenTimeline.create);
kala_behaviors_tween_TweenTask.pool = new kala_util_pool_Pool(kala_behaviors_tween_TweenTask.create);
kala_math_Mathf.CONST_RAD = Math.PI / 180;
kala_math_Mathf.CONST_DEG = 180 / Math.PI;
enemies_EnemyB.turnSpeed = 6;
enemies_EnemyB.accel = -0.1;
enemies_EnemyB.baseSpeed = -4;
enemies_EnemyB.childGroup = new kala_objects_group_Group(false,function() {
	var child = new enemies_EnemyB();
	var _this = child.scale;
	_this.x = 0.5;
	_this.y = 0.5;
	var x = child.halfWidth;
	var y = child.halfHeight;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this1 = circle.position;
	_this1.x = x;
	_this1.y = y;
	circle.radius = 15;
	child.collider._shapes.push(circle);
	child.mask = circle;
	child.revive();
	child.motion = new kala_behaviors_motion_VelocityMotion(child);
	child.motion.accel = -0.1;
	child.onPreUpdate._callbacks.push(new kala_Callback(function(_,elapsed) {
		var _this2 = child.motion.velocity;
		var tmp;
		if(_this2._speedUpdated) {
			tmp = _this2._speed;
		} else {
			_this2._speedUpdated = true;
			var tmp1 = _this2._x;
			var deg;
			if(_this2._angleUpdated) {
				deg = _this2._angle;
			} else {
				_this2._angleUpdated = true;
				deg = _this2._angle = Math.atan2(_this2._y,_this2._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp = _this2._speed = tmp1 / Math.cos(deg * kala_math_Mathf.CONST_RAD);
		}
		if(tmp > -4) {
			var _g = child.motion.velocity;
			var tmp2;
			if(_g._angleUpdated) {
				tmp2 = _g._angle;
			} else {
				_g._angleUpdated = true;
				tmp2 = _g._angle = Math.atan2(_g._y,_g._x) * kala_math_Mathf.CONST_DEG;
			}
			var value = tmp2 + 6 * elapsed;
			var rad = value * kala_math_Mathf.CONST_RAD;
			var tmp3;
			if(_g._speedUpdated) {
				tmp3 = _g._speed;
			} else {
				_g._speedUpdated = true;
				var tmp4 = _g._x;
				var deg1;
				if(_g._angleUpdated) {
					deg1 = _g._angle;
				} else {
					_g._angleUpdated = true;
					deg1 = _g._angle = Math.atan2(_g._y,_g._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp3 = _g._speed = tmp4 / Math.cos(deg1 * kala_math_Mathf.CONST_RAD);
			}
			_g._x = tmp3 * Math.cos(rad);
			var tmp5;
			if(_g._speedUpdated) {
				tmp5 = _g._speed;
			} else {
				_g._speedUpdated = true;
				var tmp6 = _g._x;
				var deg2;
				if(_g._angleUpdated) {
					deg2 = _g._angle;
				} else {
					_g._angleUpdated = true;
					deg2 = _g._angle = Math.atan2(_g._y,_g._x) * kala_math_Mathf.CONST_DEG;
				}
				tmp5 = _g._speed = tmp6 / Math.cos(deg2 * kala_math_Mathf.CONST_RAD);
			}
			_g._y = tmp5 * Math.sin(rad);
			_g._angleUpdated = true;
			_g._angle = value;
		}
		var tmp7;
		var _this3 = child.motion.velocity;
		var tmp8;
		if(_this3._speedUpdated) {
			tmp8 = _this3._speed;
		} else {
			_this3._speedUpdated = true;
			var tmp9 = _this3._x;
			var deg3;
			if(_this3._angleUpdated) {
				deg3 = _this3._angle;
			} else {
				_this3._angleUpdated = true;
				deg3 = _this3._angle = Math.atan2(_this3._y,_this3._x) * kala_math_Mathf.CONST_DEG;
			}
			tmp8 = _this3._speed = tmp9 / Math.cos(deg3 * kala_math_Mathf.CONST_RAD);
		}
		if(tmp8 < -4) {
			if(!(child.position.x < -child.halfWidth || child.position.x > 700 + child.halfWidth || child.position.y < -child.halfHeight)) {
				tmp7 = child.position.y > 495 + child.halfHeight;
			} else {
				tmp7 = true;
			}
		} else {
			tmp7 = false;
		}
		if(tmp7) {
			child.alive = false;
		}
		return false;
	}));
	return child;
});
enemies_EnemyB.pool = new kala_util_pool_Pool(function() {
	var enemy = new enemies_EnemyB();
	var x = enemy.halfWidth;
	var y = enemy.halfHeight;
	var circle = kala_behaviors_collision_basic_shapes_CollisionCircle.pool.get();
	circle.reset();
	var _this = circle.position;
	_this.x = x;
	_this.y = y;
	circle.radius = 30;
	enemy.collider._shapes.push(circle);
	enemy.mask = circle;
	states_PlayState.instance.enemyGroup.add(enemy);
	return enemy;
});
enemies_EnemyC.baseMaxHSpeed = 3;
enemies_EnemyC.baseFlapPower = 6;
enemies_EnemyC.baseVAccel = 0.5;
enemies_EnemyC.baseFlipSpeed = 0.2;
enemies_EnemyC.attackSpeed = 16;
enemies_EnemyC.pool = new kala_util_pool_Pool(function() {
	var enemy = new enemies_EnemyC();
	states_PlayState.instance.enemyGroup.add(enemy);
	return enemy;
});
enemies_Child.startSpeedMax = 1;
enemies_Child.turnDelayMin = 30;
enemies_Child.turnDelayMax = 45;
enemies_Child.accel = 0.1;
enemies_Child.turnSpeed = 8;
player_Player.runningSpeed = 12;
player_Player.chargingSpeed = 0.02;
enemies_EnemyD.childGroup = new kala_objects_group_Group(false,function() {
	var child = new enemies_Child();
	child.revive();
	return child;
});
enemies_EnemyD.pool = new kala_util_pool_Pool(function() {
	var enemy = new enemies_EnemyD();
	states_PlayState.instance.enemyGroup.add(enemy);
	return enemy;
});
enemies_Gem.collectedSpeed = 18;
enemies_Gem.gravity = 0.2;
enemies_Gem.group = new kala_objects_group_Group(false,function() {
	return new enemies_Gem();
});
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = new haxe__$Int64__$_$_$Int64(0,0);
js_Boot.__toStr = { }.toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
kala_Kala.world = new kala_objects_group_Group(false);
kala_Kala.delta = 0;
kala_Kala.deltaTiming = false;
kala_Kala.timeScale = 1;
kala_Kala.width = 0;
kala_Kala.height = 0;
kala_Kala.bgColor = -16777216;
kala_Kala.html5 = new kala_system_HTML5();
kala_Kala._prvUpdateTime = 0;
kala_asset_Assets.loader = new kala_asset_Loader();
kala_asset_Assets.sheets = new kala_asset_SheetList();
kala_asset_Assets.files = [{ files : ["Dissonant_Waltz.ogg"], type : "sound", name : "Dissonant_Waltz"},{ files : ["background_blur.jpg"], original_height : 495, type : "image", original_width : 700, name : "background_blur"},{ files : ["invisible_pixel.png"], original_height : 1, type : "image", original_width : 1, name : "invisible_pixel"},{ files : ["sprite_sheet_1.png"], original_height : 1018, type : "image", original_width : 1740, name : "sprite_sheet_1"},{ files : ["sprite_sheet_1.ssd"], type : "blob", name : "sprite_sheet_1_ssd"},{ files : ["sprite_sheet_2.png"], original_height : 1895, type : "image", original_width : 1226, name : "sprite_sheet_2"},{ files : ["sprite_sheet_2.ssd"], type : "blob", name : "sprite_sheet_2_ssd"},{ files : ["bounce.ogg"], type : "sound", name : "bounce"},{ files : ["flap.ogg"], type : "sound", name : "flap"},{ files : ["lightning.ogg"], type : "sound", name : "lightning"},{ files : ["upgrade.ogg"], type : "sound", name : "upgrade"},{ files : ["spawn.ogg"], type : "sound", name : "spawn"},{ files : ["SpaceMono-Bold.ttf"], type : "font", name : "SpaceMono_Bold"},{ files : ["SpaceMono_SIL Open Font License.txt"], type : "blob", name : "SpaceMono_SIL_Open_Font_License_txt"},{ files : ["Montserrat-Bold.ttf"], type : "font", name : "Montserrat_Bold"},{ files : ["Montserrat_SIL Open Font License.txt"], type : "blob", name : "Montserrat_SIL_Open_Font_License_txt"},{ inputs : [{ type : "vec4", name : "fragmentColor"}], uniforms : [], files : ["painter-colored.frag.essl"], outputs : [{ type : "vec4", name : "gl_FragColor"}], type : "shader", name : "painter_colored_frag"},{ inputs : [{ type : "vec3", name : "vertexPosition"},{ type : "vec4", name : "vertexColor"}], uniforms : [{ type : "mat4", name : "projectionMatrix"}], files : ["painter-colored.vert.essl"], outputs : [{ type : "vec4", name : "gl_Position"},{ type : "vec4", name : "fragmentColor"}], type : "shader", name : "painter_colored_vert"},{ inputs : [{ type : "vec2", name : "texCoord"},{ type : "vec4", name : "color"}], uniforms : [{ type : "sampler2D", name : "tex"}], files : ["painter-image.frag.essl"], outputs : [{ type : "vec4", name : "gl_FragColor"}], type : "shader", name : "painter_image_frag"},{ inputs : [{ type : "vec3", name : "vertexPosition"},{ type : "vec2", name : "texPosition"},{ type : "vec4", name : "vertexColor"}], uniforms : [{ type : "mat4", name : "projectionMatrix"}], files : ["painter-text.vert.essl"], outputs : [{ type : "vec4", name : "gl_Position"},{ type : "vec2", name : "texCoord"},{ type : "vec4", name : "fragmentColor"}], type : "shader", name : "painter_text_vert"},{ inputs : [{ type : "vec3", name : "vertexPosition"},{ type : "vec2", name : "texPosition"},{ type : "vec4", name : "vertexColor"}], uniforms : [{ type : "mat4", name : "projectionMatrix"}], files : ["painter-image.vert.essl"], outputs : [{ type : "vec4", name : "gl_Position"},{ type : "vec2", name : "texCoord"},{ type : "vec4", name : "color"}], type : "shader", name : "painter_image_vert"},{ inputs : [{ type : "vec4", name : "fragmentColor"},{ type : "vec2", name : "texCoord"}], uniforms : [{ type : "sampler2D", name : "tex"}], files : ["painter-text.frag.essl"], outputs : [{ type : "vec4", name : "gl_FragColor"}], type : "shader", name : "painter_text_frag"},{ inputs : [{ type : "vec2", name : "texCoord"},{ type : "vec4", name : "color"}], uniforms : [{ type : "sampler2D", name : "tex"}], files : ["painter-video.frag.essl"], outputs : [{ type : "vec4", name : "gl_FragColor"}], type : "shader", name : "painter_video_frag"},{ inputs : [{ type : "vec3", name : "vertexPosition"},{ type : "vec2", name : "texPosition"},{ type : "vec4", name : "vertexColor"}], uniforms : [{ type : "mat4", name : "projectionMatrix"}], files : ["painter-video.vert.essl"], outputs : [{ type : "vec4", name : "gl_Position"},{ type : "vec2", name : "texCoord"},{ type : "vec4", name : "color"}], type : "shader", name : "painter_video_vert"}];
kala_audio_Audio.groups = [];
kala_behaviors_collision_basic_shapes_CollisionRectangle.pool = new kala_util_pool_Pool(function() {
	return new kala_behaviors_collision_basic_shapes_CollisionRectangle();
});
kala_behaviors_collision_transformable_shapes_CollisionCircle.pool = new kala_util_pool_Pool(function() {
	return new kala_behaviors_collision_transformable_shapes_CollisionCircle();
});
kala_behaviors_collision_transformable_shapes_CollisionPolygon.pool = new kala_util_pool_Pool(function() {
	return new kala_behaviors_collision_transformable_shapes_CollisionPolygon();
});
kala_debug_Debug.collisionDebug = false;
kala_input_Keyboard.onStartPressing = new kala_CallbackHandle();
kala_input_Keyboard.onRelease = new kala_CallbackHandle();
kala_input_Mouse.onStartPressing = new kala_CallbackHandle();
kala_input_Mouse.onRelease = new kala_CallbackHandle();
kala_input_Mouse.x = 0;
kala_input_Mouse.y = 0;
kala_input_Mouse.realX = 0;
kala_input_Mouse.realY = 0;
kala_input_Mouse._wheelRegistered = false;
kala_input_Touch.onStart = new kala_CallbackHandle();
kala_input_Touch.onEnd = new kala_CallbackHandle();
kala_input_Touch.onMove = new kala_CallbackHandle();
kala_input_Touch.touches = new kala_input_TouchHandle();
kala_input_Touch.count = 0;
kala_math__$Random_Random_$Impl_$.instance = new kha_math_Random(6172039);
kala_math_color__$Color_Color_$Impl_$.TRANSPARENT = 0;
kala_math_color__$Color_Color_$Impl_$.WHITE = -1;
kala_math_color__$Color_Color_$Impl_$.BLACK = -16777216;
kala_math_color__$Color_Color_$Impl_$.RED = -65536;
kala_math_color__$Color_Color_$Impl_$.GREEN = -16711936;
kala_math_color__$Color_Color_$Impl_$.BLUE = -16776961;
kha_Assets.images = new kha_ImageList();
kha_Assets.sounds = new kha_SoundList();
kha_Assets.blobs = new kha_BlobList();
kha_Assets.fonts = new kha_FontList();
kha_Assets.videos = new kha_VideoList();
kha__$Color_Color_$Impl_$.Black = kha__$Color_Color_$Impl_$._new(-16777216);
kha__$Color_Color_$Impl_$.White = kha__$Color_Color_$Impl_$._new(-1);
kha__$Color_Color_$Impl_$.Red = kha__$Color_Color_$Impl_$._new(-65536);
kha__$Color_Color_$Impl_$.Blue = kha__$Color_Color_$Impl_$._new(-16776961);
kha__$Color_Color_$Impl_$.Green = kha__$Color_Color_$Impl_$._new(-16711936);
kha__$Color_Color_$Impl_$.Magenta = kha__$Color_Color_$Impl_$._new(-65281);
kha__$Color_Color_$Impl_$.Yellow = kha__$Color_Color_$Impl_$._new(-256);
kha__$Color_Color_$Impl_$.Cyan = kha__$Color_Color_$Impl_$._new(-16711681);
kha__$Color_Color_$Impl_$.Purple = kha__$Color_Color_$Impl_$._new(-8388480);
kha__$Color_Color_$Impl_$.Pink = kha__$Color_Color_$Impl_$._new(-16181);
kha__$Color_Color_$Impl_$.Orange = kha__$Color_Color_$Impl_$._new(-23296);
kha__$Color_Color_$Impl_$.invMaxChannelValue = 0.00392156862745098;
kha_FontStyle.Default = new kha_FontStyle(false,false,false);
kha_Scheduler.timeWarpSaveTime = 1.0;
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.painter_colored_fragData = "s236:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gZXhlY3V0aW9uIG1vZGUgOAovLyBVbmtub3duIG9wZXJhdGlvbiA4CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0Owp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCgoKdm9pZCBtYWluKCkKewoJZ2xfRnJhZ0NvbG9yID0gZnJhZ21lbnRDb2xvcjsKCXJldHVybjsKfQoK";
kha_Shaders.painter_colored_vertData = "s518:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOAovLyBVbmtub3duIG9wZXJhdGlvbiA4CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0Owp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKYXR0cmlidXRlIHZlYzMgdmVydGV4UG9zaXRpb247CnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwphdHRyaWJ1dGUgdmVjNCB2ZXJ0ZXhDb2xvcjsKCgoKdm9pZCBtYWluKCkKewoJZ2xfUG9zaXRpb24gPSAocHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb25bMF0sIHZlcnRleFBvc2l0aW9uWzFdLCB2ZXJ0ZXhQb3NpdGlvblsyXSwgMS4wKSk7CglmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7CglyZXR1cm47Cn0KCg";
kha_Shaders.painter_image_fragData = "s842:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gZXhlY3V0aW9uIG1vZGUgOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOApwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKdW5pZm9ybSBzYW1wbGVyMkQgdGV4Owp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CnZhcnlpbmcgdmVjNCBjb2xvcjsKCgoKdm9pZCBtYWluKCkKewoJdmVjNCB0ZXhjb2xvcl85OwoJdGV4Y29sb3JfOSA9ICh0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCkgKiBjb2xvcik7Cgl0ZXhjb2xvcl85ID0gdmVjNCgodmVjMyh0ZXhjb2xvcl85WzBdLCB0ZXhjb2xvcl85WzFdLCB0ZXhjb2xvcl85WzJdKSAqIGNvbG9yWzNdKVswXSwgKHZlYzModGV4Y29sb3JfOVswXSwgdGV4Y29sb3JfOVsxXSwgdGV4Y29sb3JfOVsyXSkgKiBjb2xvclszXSlbMV0sICh2ZWMzKHRleGNvbG9yXzlbMF0sIHRleGNvbG9yXzlbMV0sIHRleGNvbG9yXzlbMl0pICogY29sb3JbM10pWzJdLCB0ZXhjb2xvcl85WzNdKTsKCWdsX0ZyYWdDb2xvciA9IHRleGNvbG9yXzk7CglyZXR1cm47Cn0KCg";
kha_Shaders.painter_text_vertData = "s650:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4OwphdHRyaWJ1dGUgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyB2ZWMyIHRleENvb3JkOwphdHRyaWJ1dGUgdmVjMiB0ZXhQb3NpdGlvbjsKdmFyeWluZyB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKCgp2b2lkIG1haW4oKQp7CglnbF9Qb3NpdGlvbiA9IChwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvblswXSwgdmVydGV4UG9zaXRpb25bMV0sIHZlcnRleFBvc2l0aW9uWzJdLCAxLjApKTsKCXRleENvb3JkID0gdGV4UG9zaXRpb247CglmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7CglyZXR1cm47Cn0KCg";
kha_Shaders.painter_image_vertData = "s628:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4OwphdHRyaWJ1dGUgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyB2ZWMyIHRleENvb3JkOwphdHRyaWJ1dGUgdmVjMiB0ZXhQb3NpdGlvbjsKdmFyeWluZyB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgdmVjNCB2ZXJ0ZXhDb2xvcjsKCgoKdm9pZCBtYWluKCkKewoJZ2xfUG9zaXRpb24gPSAocHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb25bMF0sIHZlcnRleFBvc2l0aW9uWzFdLCB2ZXJ0ZXhQb3NpdGlvblsyXSwgMS4wKSk7Cgl0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwoJY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKCXJldHVybjsKfQoK";
kha_Shaders.painter_text_fragData = "s727:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gZXhlY3V0aW9uIG1vZGUgOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwp1bmlmb3JtIHNhbXBsZXIyRCB0ZXg7CnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKCgoKdm9pZCBtYWluKCkKewoJZ2xfRnJhZ0NvbG9yID0gdmVjNCh2ZWMzKGZyYWdtZW50Q29sb3JbMF0sIGZyYWdtZW50Q29sb3JbMV0sIGZyYWdtZW50Q29sb3JbMl0pWzBdLCB2ZWMzKGZyYWdtZW50Q29sb3JbMF0sIGZyYWdtZW50Q29sb3JbMV0sIGZyYWdtZW50Q29sb3JbMl0pWzFdLCB2ZWMzKGZyYWdtZW50Q29sb3JbMF0sIGZyYWdtZW50Q29sb3JbMV0sIGZyYWdtZW50Q29sb3JbMl0pWzJdLCAodGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpWzBdICogZnJhZ21lbnRDb2xvclszXSkpOwoJcmV0dXJuOwp9Cgo";
kha_Shaders.painter_video_fragData = "s842:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gZXhlY3V0aW9uIG1vZGUgOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOApwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKdW5pZm9ybSBzYW1wbGVyMkQgdGV4Owp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CnZhcnlpbmcgdmVjNCBjb2xvcjsKCgoKdm9pZCBtYWluKCkKewoJdmVjNCB0ZXhjb2xvcl85OwoJdGV4Y29sb3JfOSA9ICh0ZXh0dXJlMkQodGV4LCB0ZXhDb29yZCkgKiBjb2xvcik7Cgl0ZXhjb2xvcl85ID0gdmVjNCgodmVjMyh0ZXhjb2xvcl85WzBdLCB0ZXhjb2xvcl85WzFdLCB0ZXhjb2xvcl85WzJdKSAqIGNvbG9yWzNdKVswXSwgKHZlYzModGV4Y29sb3JfOVswXSwgdGV4Y29sb3JfOVsxXSwgdGV4Y29sb3JfOVsyXSkgKiBjb2xvclszXSlbMV0sICh2ZWMzKHRleGNvbG9yXzlbMF0sIHRleGNvbG9yXzlbMV0sIHRleGNvbG9yXzlbMl0pICogY29sb3JbM10pWzJdLCB0ZXhjb2xvcl85WzNdKTsKCWdsX0ZyYWdDb2xvciA9IHRleGNvbG9yXzk7CglyZXR1cm47Cn0KCg";
kha_Shaders.painter_video_vertData = "s628:I3ZlcnNpb24gMTAwCi8vIFVua25vd24gb3BlcmF0aW9uIDgKLy8gVW5rbm93biBvcGVyYXRpb24gOAovLyBVbmtub3duIG9wZXJhdGlvbiA4Ci8vIFVua25vd24gb3BlcmF0aW9uIDgKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4OwphdHRyaWJ1dGUgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyB2ZWMyIHRleENvb3JkOwphdHRyaWJ1dGUgdmVjMiB0ZXhQb3NpdGlvbjsKdmFyeWluZyB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgdmVjNCB2ZXJ0ZXhDb2xvcjsKCgoKdm9pZCBtYWluKCkKewoJZ2xfUG9zaXRpb24gPSAocHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb25bMF0sIHZlcnRleFBvc2l0aW9uWzFdLCB2ZXJ0ZXhQb3NpdGlvblsyXSwgMS4wKSk7Cgl0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwoJY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKCXJldHVybjsKfQoK";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.resumeListeners = [];
kha_System.pauseListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.maxGamepads = 4;
kha_SystemImpl.leftMouseCtrlDown = false;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_audio2_Audio1.channelCount = 16;
kha_audio2_ogg_tools_Crc32.POLY = 79764919;
kha_audio2_ogg_vorbis_VorbisDecodeState.INVALID_BITS = -1;
kha_audio2_ogg_vorbis_VorbisTools.EOP = -1;
kha_audio2_ogg_vorbis_VorbisTools.M__PI = 3.14159265358979323846264;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_NUMER = 32;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_DENOM = 64;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_audio2_ogg_vorbis_data_Codebook.NO_CODE = 255;
kha_audio2_ogg_vorbis_data_Codebook.delay = 0;
kha_audio2_ogg_vorbis_data_Header.PACKET_ID = 1;
kha_audio2_ogg_vorbis_data_Header.PACKET_COMMENT = 3;
kha_audio2_ogg_vorbis_data_Header.PACKET_SETUP = 5;
kha_audio2_ogg_vorbis_data_PageFlag.CONTINUED_PACKET = 1;
kha_audio2_ogg_vorbis_data_PageFlag.FIRST_PAGE = 2;
kha_audio2_ogg_vorbis_data_PageFlag.LAST_PAGE = 4;
kha_audio2_ogg_vorbis_data_Setting.MAX_CHANNELS = 16;
kha_audio2_ogg_vorbis_data_Setting.PUSHDATA_CRC_COUNT = 4;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_LENGTH = 10;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_SIZE = 1024;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_MASK = 1023;
kha_graphics2_truetype_StbTruetype.STBTT_vmove = 1;
kha_graphics2_truetype_StbTruetype.STBTT_vline = 2;
kha_graphics2_truetype_StbTruetype.STBTT_vcurve = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_DONTCARE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_BOLD = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_ITALIC = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_UNDERSCORE = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_NONE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_UNICODE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MAC = 1;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_ISO = 2;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MICROSOFT = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_0 = 0;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_1 = 1;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_ISO_10646 = 2;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SYMBOL = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_BMP = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SHIFTJIS = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_FULL = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ROMAN = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ARABIC = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_JAPANESE = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_HEBREW = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_CHINESE_TRAD = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_GREEK = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_KOREAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_RUSSIAN = 7;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ENGLISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ITALIAN = 1040;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_CHINESE = 2052;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_JAPANESE = 1041;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_DUTCH = 1043;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_KOREAN = 1042;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_FRENCH = 1036;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_RUSSIAN = 1049;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_GERMAN = 1031;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SPANISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_HEBREW = 1037;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SWEDISH = 1053;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ENGLISH = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_JAPANESE = 11;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ARABIC = 12;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_KOREAN = 23;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_DUTCH = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_RUSSIAN = 32;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_FRENCH = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SPANISH = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_GERMAN = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SWEDISH = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_HEBREW = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ITALIAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_TRAD = 19;
kha_graphics2_truetype_StbTruetype.STBTT_MAX_OVERSAMPLE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_RASTERIZER_VERSION = 2;
kha_graphics4_ImageShaderPainter.bufferSize = 1500;
kha_graphics4_ImageShaderPainter.vertexSize = 9;
kha_graphics4_ColoredShaderPainter.bufferSize = 100;
kha_graphics4_ColoredShaderPainter.triangleBufferSize = 100;
kha_graphics4_TextShaderPainter.bufferSize = 100;
kha_input_Gamepad.__meta__ = { fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}}};
kha_input_Mouse.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_internal_HdrFormat.radiancePattern = new EReg("#\\?RADIANCE","i");
kha_internal_HdrFormat.commentPattern = new EReg("#.*","i");
kha_internal_HdrFormat.gammaPattern = new EReg("GAMMA=","i");
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_AEAudioChannel.todo = [];
kha_js_Sound.loading = [];
kha_js_Video.loading = new List();
kha_math_FastMatrix3.width = 3;
kha_math_FastMatrix3.height = 3;
kha_math_FastMatrix4.width = 4;
kha_math_FastMatrix4.height = 4;
kha_math_Matrix3.width = 3;
kha_math_Matrix3.height = 3;
kha_math_Matrix4.width = 4;
kha_math_Matrix4.height = 4;
kha_network_ControllerBuilder.nextId = 0;
kha_network_Session.START = 0;
kha_network_Session.ENTITY_UPDATES = 1;
kha_network_Session.CONTROLLER_UPDATES = 2;
kha_network_Session.REMOTE_CALL = 3;
kha_network_Session.PING = 4;
kha_network_Session.ERROR = 5;
kha_network_Session.PLAYER_UPDATES = 6;
kha_network_Session.RPC_SERVER = 0;
kha_network_Session.RPC_ALL = 1;
kha_network_SyncBuilder.nextId = 0;
kha_network_SyncBuilder.objects = [];
player_Bullet.haccelUpdateFactor = 0.35;
player_Bullet.vaccel = -1.2;
player_Bullet.scaleSpeed = 0.2;
player_Bullet.mainGroup = new kala_objects_group_Group(false,function() {
	return new player_Bullet();
});
player_Bullet.minionGroup = new kala_objects_group_Group(false,function() {
	var bullet = new player_Bullet();
	bullet.hspeed = 0;
	bullet.haccel = 0;
	return bullet;
});
player_Lightning.group = new kala_objects_group_Group(false,function() {
	return new player_Lightning();
});
player_Minion.lightningDelay = 120;
player_Minion.group = new kala_objects_group_Group(false,function() {
	return new player_Minion();
});
player_Web.group = new kala_objects_group_Group(false,function() {
	return new player_Web();
});
states_AnimatedText.letterSpacing = 2;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
